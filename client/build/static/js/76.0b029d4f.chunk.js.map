{"version":3,"sources":["components/AppModuleHeader/index.js","routes/ApiContent/Questions/My_Posts.js"],"names":["AppModuleHeader","_this","Object","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","popoverOpen","toggle","bind","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","setState","_this$props","props","placeholder","onChange","value","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","type","React","Component","defaultProps","styleName","notification","apps","Question","questions","confirm","title","tags","views","vote","question_date","substring","onClick","deleteQuestion","_id","react_router_dom__WEBPACK_IMPORTED_MODULE_13__","to","filterOptions","id","name","icon","MyPosts","SideBar","user","util_IntlMessages__WEBPACK_IMPORTED_MODULE_11__","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_8__","antd__WEBPACK_IMPORTED_MODULE_7__","aria-label","map","option","key","concat","selectedSectionId","onFilterOptionSelect","filterOption","contactList","_","filter","allContact","contact","frequently","noContentFoundMessage","searchUser","isLoading","owner","_this2","axios","get","then","response","data","catch","error","console","log","getCurrentProfile","setTimeout","delete","el","profile","_this3","components_CircularProgress_index__WEBPACK_IMPORTED_MODULE_16__","currentquestion","event","_this4","search","target","substr","_this$state","components_AppModuleHeader_index__WEBPACK_IMPORTED_MODULE_10__","onSearch","length","questionList","connect","auth"],"mappings":"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","file":"static/js/76.0b029d4f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass AppModuleHeader extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      popoverOpen: false\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {placeholder, onChange, value} = this.props;\r\n\r\n    return (\r\n      <div className=\"gx-module-box-header-inner\">\r\n        <div\r\n          className=\"gx-search-bar gx-lt-icon-search-bar-lg gx-module-search-bar gx-d-none gx-d-sm-block\">\r\n          <div className=\"gx-form-group\">\r\n            <input className=\"ant-input gx-border-0\" type=\"search\" placeholder={placeholder}\r\n                   onChange={onChange}\r\n                   value={value}/>\r\n            <span className=\"gx-search-icon gx-pointer\"><i className=\"icon icon-search\"/></span>\r\n          </div>\r\n        </div>\r\n        <div className=\"gx-module-box-header-right\">\r\n          <span className=\"gx-fs-xl\"> <i\r\n            className=\"icon icon-apps gx-icon-btn\"/></span>\r\n          <span className=\"gx-fs-xl\"><i\r\n            className=\"icon icon-notification gx-icon-btn\"/></span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppModuleHeader;\r\n\r\nAppModuleHeader.defaultProps = {\r\n  styleName: '',\r\n  value: '',\r\n  notification: true,\r\n  apps: true\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Button, Row, Col } from \"antd\";\r\nimport CustomScrollbars from \"util/CustomScrollbars\";\r\nimport axios from \"axios\";\r\n\r\nimport AppModuleHeader from \"components/AppModuleHeader/index\";\r\n\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentProfile } from \"../../../appRedux/actions/profile\";\r\nimport CircularProgress from \"components/CircularProgress/index\";\r\n\r\nconst Question = props => (\r\n  <div className=\"gx-contact-item\">\r\n    <div className=\"gx-module-list-icon\">\r\n      <div className=\"gx-d-none gx-d-sm-flex\">\r\n      {\r\n            (props.questions.confirm) === \"true\" ? \r\n            <div className=\"gx-icon-views\">\r\n            <i className=\"icon icon-check-cricle\"/>\r\n           \r\n          </div>\r\n            :\r\n\r\n            <div className=\"gx-icon-views\">\r\n            <i className=\"icon icon-close-circle\"/>\r\n           \r\n          </div>\r\n            }\r\n      </div>\r\n      <div className=\"gx-ml-2 gx-d-none gx-d-sm-flex\"></div>\r\n    </div>\r\n\r\n    <div className=\"gx-module-list-info gx-contact-list-info\">\r\n      <div className=\"gx-module-contact-content\">\r\n        <p className=\"gx-mb-1\">\r\n          <span className=\"gx-text-truncate gx-contact-name\">\r\n            {props.questions.title}\r\n          </span>\r\n          <span className=\"gx-toolbar-separator\"></span>\r\n          <span className=\"gx-text-truncate gx-job-title\">\r\n          <i className=\"icon icon-alert\">\r\n            {    props.questions.tags}</i>\r\n           \r\n          </span>\r\n        </p>\r\n\r\n        <div className=\"gx-text-muted\">\r\n          <span className=\"gx-email gx-d-inline-block gx-mr-2\">\r\n            {props.questions.views} views ,\r\n          </span>\r\n          <span className=\"gx-phone gx-d-inline-block\">\r\n            {props.questions.vote} votes\r\n          </span>{\" \"}\r\n          | requested on :\r\n          <span className=\"gx-phone gx-d-inline-block\">\r\n            {props.questions.question_date.substring(0, 10)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"gx-module-contact-right\">\r\n      <a onClick={() => \r\n        { props.deleteQuestion(props.questions._id) }}>Delete</a>\r\n\r\n      </div>\r\n      <div className=\"gx-module-contact-right\">\r\n      <Link to={\"/question/edit-question/\"+props.questions._id}>Edit</Link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\nconst filterOptions = [\r\n  {\r\n    id: 1,\r\n    name: \"My posts\",\r\n    icon: \"all-contacts\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Recently published\",\r\n    icon: \"frequent\"\r\n  }\r\n];\r\nclass MyPosts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.deleteQuestion = this.deleteQuestion.bind(this);\r\n\r\n    this.state = {\r\n      noContentFoundMessage: \"No Posts found\",\r\n      searchUser: \"\",\r\n      filterOption: \"My posts\",\r\n      questions: [],\r\n      isLoading: true,\r\n      owner:[]\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/question/\")\r\n      .then(response => {\r\n        this.setState({ questions: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n      this.props.getCurrentProfile();\r\n      if (this.state.isLoading) {\r\n        setTimeout(() => {\r\n          this.setState({ isLoading: false });\r\n        }, 5000);\r\n      }\r\n  }\r\n  deleteQuestion(id) {\r\n    axios.delete('http://localhost:5000/question/'+id)\r\n      .then(response => { console.log(response.data)});\r\n\r\n    this.setState({\r\n      questions: this.state.questions.filter(el => el._id !== id)\r\n    })\r\n  }\r\n  questionList ( profile ){\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <div className=\"gx-loader-view\">\r\n          <CircularProgress />\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.state.questions.map(currentquestion => {\r\n        if (currentquestion.owner.user === this.props.profile.profile.user._id)\r\n        {\r\n          this.props.getCurrentProfile();\r\n          return <Question questions={currentquestion} deleteQuestion={this.deleteQuestion} key={currentquestion._id}/>;\r\n\r\n        }\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  SideBar = user => {\r\n    return (\r\n      <div className=\"gx-module-side\">\r\n        <div className=\"gx-module-side-header\">\r\n          <div className=\"gx-module-logo\">\r\n            <i className=\"icon icon-contacts gx-mr-4\" />\r\n            <span>\r\n              <IntlMessages id=\"My Posts\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"gx-module-side-content\">\r\n          <CustomScrollbars className=\"gx-module-side-scroll\">\r\n            <div className=\"gx-module-add-task\">\r\n              <Link to={\"/question/ask-question/\"}>\r\n                <Button\r\n                  className=\"gx-btn-block ant-btn\"\r\n                  type=\"primary\"\r\n                  aria-label=\"add\"\r\n                >\r\n                  <i className=\"icon icon-add gx-mr-2\" />\r\n\r\n                  <span>Ask a question</span>\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n            <div className=\"gx-module-side-nav\">\r\n              <ul className=\"gx-module-nav\">\r\n                {filterOptions.map(option => (\r\n                  <li key={option.id} className=\"gx-nav-item\">\r\n                    <span\r\n                      className={`gx-link ${\r\n                        option.id === this.state.selectedSectionId\r\n                          ? \"active\"\r\n                          : \"\"\r\n                      }`}\r\n                      onClick={this.onFilterOptionSelect.bind(this, option)}\r\n                    >\r\n                      <i className={`icon icon-${option.icon}`} />\r\n                      <span>{option.name}</span>\r\n                    </span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </CustomScrollbars>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onFilterOptionSelect = option => {\r\n    switch (option.name) {\r\n      case \"My posts\": {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name\r\n        });\r\n        break;\r\n      }\r\n      case \"Recently published\": {\r\n        this.setState({\r\n          selectedSectionId: option.id,\r\n          filterOption: option.name,\r\n          contactList: _.filter(\r\n            this.state.allContact,\r\n            (contact, key) => contact.frequently\r\n          )\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  onSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 100)\r\n    });\r\n    this.props.getCurrentProfile();\r\n    if (this.state.isLoading) {\r\n      setTimeout(() => {\r\n        this.setState({ isLoading: false });\r\n      }, 5000);\r\n    }\r\n  }\r\n  render() {\r\n    const { questions, user, noContentFoundMessage } = this.state;\r\n    return (\r\n      <div className=\"gx-main-content\">\r\n        <div className=\"gx-app-module\">\r\n          <div className=\"gx-module-sidenav gx-d-none gx-d-lg-flex\">\r\n            \r\n            {this.SideBar(user)}\r\n          </div>\r\n         \r\n          <div className=\"gx-module-box\">\r\n            <div className=\"gx-module-box-header\">\r\n\r\n              <AppModuleHeader\r\n                placeholder=\"Search posts\"\r\n                notification={false}\r\n                apps={false}\r\n                user={this.state.user}\r\n                onChange={this.onSearch.bind(this)}\r\n               value={this.state.searchUser}\r\n              />\r\n            </div>\r\n            <div className=\"gx-module-box-content\">\r\n              <div className=\"gx-module-box-topbar\"></div>\r\n              <CustomScrollbars className=\"gx-module-content-scroll\">\r\n                {questions.length === 0 ? (\r\n                  <div className=\"gx-h-100 gx-d-flex gx-align-items-center gx-justify-content-center\">\r\n                    {noContentFoundMessage}\r\n                  </div>\r\n                ) : (\r\n                  \r\n                  this.questionList()\r\n                )}\r\n              </CustomScrollbars>\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile })(MyPosts);\r\n"],"sourceRoot":""}