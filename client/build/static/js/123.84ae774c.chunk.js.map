{"version":3,"sources":["routes/ApiContent/Questions/FiltreByTags.js"],"names":["Question","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_6__","span","antd__WEBPACK_IMPORTED_MODULE_7__","title","class","question","tags","extra","className","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","_id","style","width","alt","src","owner","avatar","name","contentText","views","answers","length","Search","Input","FiltreByTags","_Component","_this","Object","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","questions","search","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Youssef_Desktop_PI_MERN_NETWORK_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this2","axios","get","then","response","setState","data","catch","error","console","log","_this3","filter","currentquestion","toLowerCase","indexOf","map","event","target","substr","Fragment","placeholder","onChange","onSearch","bind","antd__WEBPACK_IMPORTED_MODULE_9__","gutter","questionList","Component"],"mappings":"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","file":"static/js/123.84ae774c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Col, Card, Row, Input } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Question = props => (\r\n  <Col span={9}  >\r\n    <Card\r\n      title={<i class=\"icon icon-alert\">{props.question.tags} </i>}\r\n      extra={\r\n        <span className=\"gx-link\">\r\n          <Link to={\"/question/question-details/\" + props.question._id}>\r\n            More\r\n          </Link>\r\n        </span>\r\n      }\r\n      style={{ width: 390 }}\r\n    >\r\n      <div class=\"gx-user-list\">\r\n        <img\r\n          alt=\"avatar\"\r\n          src={props.question.owner.avatar}\r\n          class=\"gx-avatar-img gx-avatar-img-lg gx-border-0\"\r\n        />\r\n        <div class=\"gx-description\">\r\n          <span>\r\n            {\" \"}\r\n            <Link to={\"/question/question-details/\" + props.question._id}>\r\n              {\" \"}\r\n              <h3>{props.question.title} </h3>\r\n            </Link>\r\n          </span>\r\n          <h5>\r\n            By <span class=\"gx-link\">{props.question.owner.name}</span>\r\n          </h5>\r\n\r\n          <p class=\"gx-mb-1\"> {props.question.contentText}</p>\r\n          <ul class=\"gx-list-inline gx-btn-list\">\r\n            <li>\r\n              <span class=\"gx-link gx-meta-like\">\r\n                <i class=\"icon icon-like-o gx-text-red\"></i>\r\n                {props.question.views} likes\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span class=\"gx-link gx-meta-comment\">\r\n                <i class=\"icon icon-chat-new\" />\r\n                {props.question.answers.length} comments\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Card>{\" \"}\r\n  </Col>\r\n);\r\nconst { Search } = Input;\r\n\r\nexport class FiltreByTags extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      questions: [],\r\n      search: ''\r\n    };\r\n   \r\n  }\r\n   \r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:5000/question/\")\r\n      .then(response => {\r\n        this.setState({ questions: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  \r\n  questionList() {\r\n    let filtredPosts = this.state.questions.filter(\r\n      (currentquestion) => {\r\n        return currentquestion.tags.toLowerCase().indexOf(\r\n          this.state.search.toLowerCase()) !== -1;\r\n      }\r\n    );\r\n    return filtredPosts.map(currentquestion => {\r\n      return <Question question={currentquestion} />;\r\n    });\r\n  }\r\n  onSearch(event) {\r\n    this.setState({\r\n      search: event.target.value.substr(0, 20)\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n      <Col>\r\n      <Search placeholder=\"tap a tag ...\"\r\n      value={this.state.search}\r\n      onChange= {this.onSearch.bind(this)} />\r\n      </Col>\r\n      <Row gutter={[32, 48]}>\r\n      {this.questionList()}\r\n      </Row>\r\n      </>\r\n    );\r\n  \r\n  }\r\n}\r\n\r\nexport default FiltreByTags;\r\n"],"sourceRoot":""}