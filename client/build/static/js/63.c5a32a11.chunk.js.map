{"version":3,"sources":["../node_modules/@amcharts/amcharts3-react/index.js","../node_modules/@amcharts/amcharts3-react/amcharts3-react.js","routes/extensions/map/ammap/bubbles/Components/MapWithBubbles.js","routes/extensions/map/ammap/bubbles/index.js"],"names":["window","React","__webpack_require__","ReactDOM","createReactClass","module","exports","AmCharts","getType","x","toString","call","hasOwnKey","obj","key","hasOwnProperty","copy","length","output","Array","i","copyArray","copyObject","Date","getTime","isNaN","removeChartListeners","chart","y","xLength","yLength","xValue","has","j","yValue","event","method","removeListener","update","didUpdate","xType","a","updateArray","updateObject","isNumberEqual","oldObj","newObj","id","getInitialState","componentDidMount","props","this","options","makeChart","state","delay","setState","componentDidUpdate","oldProps","validateNow","componentWillUnmount","clear","render","createElement","className","style","MapWithBubbles","latlong","latitude","longitude","mapData","code","name","value","color","min","Infinity","max","maxSquare","maxBulletSize","Math","PI","minSquare","minBulletSize","images","dataItem","square","size","sqrt","push","type","theme","width","height","title","config","projection","titles","text","areasSettings","dataProvider","map","export","enabled","react_default","amcharts3_react_default","Bubbles","card","IntlMessages","Components_MapWithBubbles"],"mappings":"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","file":"static/js/63.c5a32a11.chunk.js","sourcesContent":["if (typeof window !== \"undefined\") {\n  window.React = require(\"react\");\n  window.ReactDOM = require(\"react-dom\");\n  window.createReactClass = require(\"create-react-class\");\n\n  require(\"./amcharts3-react.js\");\n\n  module.exports = window.AmCharts;\n} else {\n  module.exports = {};\n}","(function () {\n  function getType(x) {\n    // TODO make this faster ?\n    return {}.toString.call(x);\n  }\n\n  function hasOwnKey(obj, key) {\n    return {}.hasOwnProperty.call(obj, key);\n  }\n\n  function copyObject(x) {\n    var output = {}; // TODO use Object.keys ?\n\n    for (var key in x) {\n      if (hasOwnKey(x, key)) {\n        output[key] = copy(x[key]);\n      }\n    }\n\n    return output;\n  }\n\n  function copyArray(x) {\n    var length = x.length;\n    var output = new Array(length);\n\n    for (var i = 0; i < length; ++i) {\n      output[i] = copy(x[i]);\n    }\n\n    return output;\n  } // TODO can this be made faster ?\n  // TODO what about regexps, etc. ?\n\n\n  function copy(x) {\n    switch (getType(x)) {\n      case \"[object Array]\":\n        return copyArray(x);\n\n      case \"[object Object]\":\n        return copyObject(x);\n      // TODO is this necessary ?\n\n      case \"[object Date]\":\n        return new Date(x.getTime());\n\n      default:\n        return x;\n    }\n  }\n\n  function isNaN(x) {\n    return x !== x;\n  }\n\n  function isNumberEqual(x, y) {\n    return x === y || isNaN(x) && isNaN(y);\n  }\n\n  function removeChartListeners(chart, x, y) {\n    if (x !== y) {\n      // TODO is this necessary ?\n      if (x == null) {\n        x = [];\n      } // TODO is this necessary ?\n\n\n      if (y == null) {\n        y = [];\n      }\n\n      var xLength = x.length;\n      var yLength = y.length;\n\n      for (var i = 0; i < xLength; ++i) {\n        var xValue = x[i];\n        var has = false; // TODO make this faster ?\n\n        for (var j = 0; j < yLength; ++j) {\n          var yValue = y[j]; // TODO is this correct ?\n\n          if (xValue.event === yValue.event && xValue.method === yValue.method) {\n            has = true;\n            break;\n          }\n        }\n\n        if (!has) {\n          // TODO is this correct ?\n          chart.removeListener(chart, xValue.event, xValue.method);\n        }\n      }\n    }\n  }\n\n  function updateArray(a, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      var xLength = x.length;\n      var yLength = y.length;\n\n      if (xLength !== yLength) {\n        a.length = yLength;\n        didUpdate = true;\n      }\n\n      for (var i = 0; i < yLength; ++i) {\n        if (i < xLength) {\n          if (update(a, i, x[i], y[i])) {\n            didUpdate = true;\n          }\n        } else {\n          // TODO make this faster ?\n          a[i] = copy(y[i]); // TODO is this necessary ?\n\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function update(obj, key, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      // https://github.com/amcharts/amcharts3-react/issues/40\n      if (hasOwnKey(obj, key)) {\n        var xType = getType(x);\n        var yType = getType(y);\n\n        if (xType === yType) {\n          switch (xType) {\n            case \"[object Array]\":\n              // TODO hacky, remove this after the following bug is fixed:\n              //      Zendesk #28040\n              //      https://codepen.io/team/amcharts/pen/0d61f559cda74682c0ca55d9a24a0f77\n              //      https://www.amcharts.com/kbase/forcing-grouping-stock-chart-data-specific-periods/\n              if (key === \"groupToPeriods\") {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              } else {\n                if (updateArray(obj[key], x, y)) {\n                  didUpdate = true;\n                }\n              }\n\n              break;\n\n            case \"[object Object]\":\n              if (updateObject(obj[key], x, y)) {\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Date]\":\n              if (x.getTime() !== y.getTime()) {\n                // TODO make this faster ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Number]\":\n              if (!isNumberEqual(x, y)) {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            default:\n              // TODO is the copy necessary ?\n              obj[key] = copy(y);\n              didUpdate = true;\n              break;\n          } // TODO is this correct ?\n\n        } else {\n          // TODO make this faster ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function updateObject(chart, oldObj, newObj) {\n    var didUpdate = false;\n\n    if (oldObj !== newObj) {\n      // TODO use Object.keys ?\n      for (var key in newObj) {\n        if (hasOwnKey(newObj, key)) {\n          // TODO make this faster ?\n          if (hasOwnKey(oldObj, key)) {\n            // TODO should this count as an update ?\n            if (key === \"listeners\") {\n              // TODO make this faster ?\n              removeChartListeners(chart, oldObj[key], newObj[key]);\n            }\n\n            if (update(chart, key, oldObj[key], newObj[key])) {\n              didUpdate = true;\n            }\n          } else {\n            // TODO make this faster ?\n            chart[key] = copy(newObj[key]);\n            didUpdate = true;\n          }\n        }\n      } // TODO use Object.keys ?\n\n\n      for (var key in oldObj) {\n        if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\n          if (key === \"listeners\") {\n            removeChartListeners(chart, oldObj[key], []);\n          }\n\n          delete chart[key];\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  var id = 0;\n  AmCharts.React = createReactClass({\n    getInitialState: function getInitialState() {\n      return {\n        id: \"__AmCharts_React_\" + ++id + \"__\",\n        chart: null\n      };\n    },\n    componentDidMount: function componentDidMount() {\n      // AmCharts mutates the config object, so we have to make a deep copy to prevent that\n      var props = copy(this.props.options);\n      var chart = AmCharts.makeChart(this.state.id, props, this.props.delay);\n      this.setState({\n        chart: chart\n      });\n    },\n    // TODO is this correct ? should this use componentWillUpdate instead ?\n    componentDidUpdate: function componentDidUpdate(oldProps) {\n      if (this.state.chart) {\n        var didUpdate = updateObject(this.state.chart, oldProps.options, this.props.options); // TODO make this faster\n\n        if (didUpdate) {\n          this.state.chart.validateNow(true);\n        }\n      }\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      if (this.state.chart) {\n        this.state.chart.clear();\n      }\n    },\n    render: function render() {\n      return React.createElement(\"div\", {\n        id: this.state.id,\n        className: this.props.className,\n        style: this.props.style\n      });\n    }\n  });\n})();","import React from 'react';\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst MapWithBubbles = () => {\r\n\r\n  const latlong = {};\r\n  latlong[\"AD\"] = {\"latitude\": 42.5, \"longitude\": 1.5};\r\n  latlong[\"AE\"] = {\"latitude\": 24, \"longitude\": 54};\r\n  latlong[\"AF\"] = {\"latitude\": 33, \"longitude\": 65};\r\n  latlong[\"AG\"] = {\"latitude\": 17.05, \"longitude\": -61.8};\r\n  latlong[\"AI\"] = {\"latitude\": 18.25, \"longitude\": -63.1667};\r\n  latlong[\"AL\"] = {\"latitude\": 41, \"longitude\": 20};\r\n  latlong[\"AM\"] = {\"latitude\": 40, \"longitude\": 45};\r\n  latlong[\"AN\"] = {\"latitude\": 12.25, \"longitude\": -68.75};\r\n  latlong[\"AO\"] = {\"latitude\": -12.5, \"longitude\": 18.5};\r\n  latlong[\"AP\"] = {\"latitude\": 35, \"longitude\": 105};\r\n  latlong[\"AQ\"] = {\"latitude\": -90, \"longitude\": 0};\r\n  latlong[\"AR\"] = {\"latitude\": -34, \"longitude\": -64};\r\n  latlong[\"AS\"] = {\"latitude\": -14.3333, \"longitude\": -170};\r\n  latlong[\"AT\"] = {\"latitude\": 47.3333, \"longitude\": 13.3333};\r\n  latlong[\"AU\"] = {\"latitude\": -27, \"longitude\": 133};\r\n  latlong[\"AW\"] = {\"latitude\": 12.5, \"longitude\": -69.9667};\r\n  latlong[\"AZ\"] = {\"latitude\": 40.5, \"longitude\": 47.5};\r\n  latlong[\"BA\"] = {\"latitude\": 44, \"longitude\": 18};\r\n  latlong[\"BB\"] = {\"latitude\": 13.1667, \"longitude\": -59.5333};\r\n  latlong[\"BD\"] = {\"latitude\": 24, \"longitude\": 90};\r\n  latlong[\"BE\"] = {\"latitude\": 50.8333, \"longitude\": 4};\r\n  latlong[\"BF\"] = {\"latitude\": 13, \"longitude\": -2};\r\n  latlong[\"BG\"] = {\"latitude\": 43, \"longitude\": 25};\r\n  latlong[\"BH\"] = {\"latitude\": 26, \"longitude\": 50.55};\r\n  latlong[\"BI\"] = {\"latitude\": -3.5, \"longitude\": 30};\r\n  latlong[\"BJ\"] = {\"latitude\": 9.5, \"longitude\": 2.25};\r\n  latlong[\"BM\"] = {\"latitude\": 32.3333, \"longitude\": -64.75};\r\n  latlong[\"BN\"] = {\"latitude\": 4.5, \"longitude\": 114.6667};\r\n  latlong[\"BO\"] = {\"latitude\": -17, \"longitude\": -65};\r\n  latlong[\"BR\"] = {\"latitude\": -10, \"longitude\": -55};\r\n  latlong[\"BS\"] = {\"latitude\": 24.25, \"longitude\": -76};\r\n  latlong[\"BT\"] = {\"latitude\": 27.5, \"longitude\": 90.5};\r\n  latlong[\"BV\"] = {\"latitude\": -54.4333, \"longitude\": 3.4};\r\n  latlong[\"BW\"] = {\"latitude\": -22, \"longitude\": 24};\r\n  latlong[\"BY\"] = {\"latitude\": 53, \"longitude\": 28};\r\n  latlong[\"BZ\"] = {\"latitude\": 17.25, \"longitude\": -88.75};\r\n  latlong[\"CA\"] = {\"latitude\": 54, \"longitude\": -100};\r\n  latlong[\"CC\"] = {\"latitude\": -12.5, \"longitude\": 96.8333};\r\n  latlong[\"CD\"] = {\"latitude\": 0, \"longitude\": 25};\r\n  latlong[\"CF\"] = {\"latitude\": 7, \"longitude\": 21};\r\n  latlong[\"CG\"] = {\"latitude\": -1, \"longitude\": 15};\r\n  latlong[\"CH\"] = {\"latitude\": 47, \"longitude\": 8};\r\n  latlong[\"CI\"] = {\"latitude\": 8, \"longitude\": -5};\r\n  latlong[\"CK\"] = {\"latitude\": -21.2333, \"longitude\": -159.7667};\r\n  latlong[\"CL\"] = {\"latitude\": -30, \"longitude\": -71};\r\n  latlong[\"CM\"] = {\"latitude\": 6, \"longitude\": 12};\r\n  latlong[\"CN\"] = {\"latitude\": 35, \"longitude\": 105};\r\n  latlong[\"CO\"] = {\"latitude\": 4, \"longitude\": -72};\r\n  latlong[\"CR\"] = {\"latitude\": 10, \"longitude\": -84};\r\n  latlong[\"CU\"] = {\"latitude\": 21.5, \"longitude\": -80};\r\n  latlong[\"CV\"] = {\"latitude\": 16, \"longitude\": -24};\r\n  latlong[\"CX\"] = {\"latitude\": -10.5, \"longitude\": 105.6667};\r\n  latlong[\"CY\"] = {\"latitude\": 35, \"longitude\": 33};\r\n  latlong[\"CZ\"] = {\"latitude\": 49.75, \"longitude\": 15.5};\r\n  latlong[\"DE\"] = {\"latitude\": 51, \"longitude\": 9};\r\n  latlong[\"DJ\"] = {\"latitude\": 11.5, \"longitude\": 43};\r\n  latlong[\"DK\"] = {\"latitude\": 56, \"longitude\": 10};\r\n  latlong[\"DM\"] = {\"latitude\": 15.4167, \"longitude\": -61.3333};\r\n  latlong[\"DO\"] = {\"latitude\": 19, \"longitude\": -70.6667};\r\n  latlong[\"DZ\"] = {\"latitude\": 28, \"longitude\": 3};\r\n  latlong[\"EC\"] = {\"latitude\": -2, \"longitude\": -77.5};\r\n  latlong[\"EE\"] = {\"latitude\": 59, \"longitude\": 26};\r\n  latlong[\"EG\"] = {\"latitude\": 27, \"longitude\": 30};\r\n  latlong[\"EH\"] = {\"latitude\": 24.5, \"longitude\": -13};\r\n  latlong[\"ER\"] = {\"latitude\": 15, \"longitude\": 39};\r\n  latlong[\"ES\"] = {\"latitude\": 40, \"longitude\": -4};\r\n  latlong[\"ET\"] = {\"latitude\": 8, \"longitude\": 38};\r\n  latlong[\"EU\"] = {\"latitude\": 47, \"longitude\": 8};\r\n  latlong[\"FI\"] = {\"latitude\": 62, \"longitude\": 26};\r\n  latlong[\"FJ\"] = {\"latitude\": -18, \"longitude\": 175};\r\n  latlong[\"FK\"] = {\"latitude\": -51.75, \"longitude\": -59};\r\n  latlong[\"FM\"] = {\"latitude\": 6.9167, \"longitude\": 158.25};\r\n  latlong[\"FO\"] = {\"latitude\": 62, \"longitude\": -7};\r\n  latlong[\"FR\"] = {\"latitude\": 46, \"longitude\": 2};\r\n  latlong[\"GA\"] = {\"latitude\": -1, \"longitude\": 11.75};\r\n  latlong[\"GB\"] = {\"latitude\": 54, \"longitude\": -2};\r\n  latlong[\"GD\"] = {\"latitude\": 12.1167, \"longitude\": -61.6667};\r\n  latlong[\"GE\"] = {\"latitude\": 42, \"longitude\": 43.5};\r\n  latlong[\"GF\"] = {\"latitude\": 4, \"longitude\": -53};\r\n  latlong[\"GH\"] = {\"latitude\": 8, \"longitude\": -2};\r\n  latlong[\"GI\"] = {\"latitude\": 36.1833, \"longitude\": -5.3667};\r\n  latlong[\"GL\"] = {\"latitude\": 72, \"longitude\": -40};\r\n  latlong[\"GM\"] = {\"latitude\": 13.4667, \"longitude\": -16.5667};\r\n  latlong[\"GN\"] = {\"latitude\": 11, \"longitude\": -10};\r\n  latlong[\"GP\"] = {\"latitude\": 16.25, \"longitude\": -61.5833};\r\n  latlong[\"GQ\"] = {\"latitude\": 2, \"longitude\": 10};\r\n  latlong[\"GR\"] = {\"latitude\": 39, \"longitude\": 22};\r\n  latlong[\"GS\"] = {\"latitude\": -54.5, \"longitude\": -37};\r\n  latlong[\"GT\"] = {\"latitude\": 15.5, \"longitude\": -90.25};\r\n  latlong[\"GU\"] = {\"latitude\": 13.4667, \"longitude\": 144.7833};\r\n  latlong[\"GW\"] = {\"latitude\": 12, \"longitude\": -15};\r\n  latlong[\"GY\"] = {\"latitude\": 5, \"longitude\": -59};\r\n  latlong[\"HK\"] = {\"latitude\": 22.25, \"longitude\": 114.1667};\r\n  latlong[\"HM\"] = {\"latitude\": -53.1, \"longitude\": 72.5167};\r\n  latlong[\"HN\"] = {\"latitude\": 15, \"longitude\": -86.5};\r\n  latlong[\"HR\"] = {\"latitude\": 45.1667, \"longitude\": 15.5};\r\n  latlong[\"HT\"] = {\"latitude\": 19, \"longitude\": -72.4167};\r\n  latlong[\"HU\"] = {\"latitude\": 47, \"longitude\": 20};\r\n  latlong[\"ID\"] = {\"latitude\": -5, \"longitude\": 120};\r\n  latlong[\"IE\"] = {\"latitude\": 53, \"longitude\": -8};\r\n  latlong[\"IL\"] = {\"latitude\": 31.5, \"longitude\": 34.75};\r\n  latlong[\"IN\"] = {\"latitude\": 20, \"longitude\": 77};\r\n  latlong[\"IO\"] = {\"latitude\": -6, \"longitude\": 71.5};\r\n  latlong[\"IQ\"] = {\"latitude\": 33, \"longitude\": 44};\r\n  latlong[\"IR\"] = {\"latitude\": 32, \"longitude\": 53};\r\n  latlong[\"IS\"] = {\"latitude\": 65, \"longitude\": -18};\r\n  latlong[\"IT\"] = {\"latitude\": 42.8333, \"longitude\": 12.8333};\r\n  latlong[\"JM\"] = {\"latitude\": 18.25, \"longitude\": -77.5};\r\n  latlong[\"JO\"] = {\"latitude\": 31, \"longitude\": 36};\r\n  latlong[\"JP\"] = {\"latitude\": 36, \"longitude\": 138};\r\n  latlong[\"KE\"] = {\"latitude\": 1, \"longitude\": 38};\r\n  latlong[\"KG\"] = {\"latitude\": 41, \"longitude\": 75};\r\n  latlong[\"KH\"] = {\"latitude\": 13, \"longitude\": 105};\r\n  latlong[\"KI\"] = {\"latitude\": 1.4167, \"longitude\": 173};\r\n  latlong[\"KM\"] = {\"latitude\": -12.1667, \"longitude\": 44.25};\r\n  latlong[\"KN\"] = {\"latitude\": 17.3333, \"longitude\": -62.75};\r\n  latlong[\"KP\"] = {\"latitude\": 40, \"longitude\": 127};\r\n  latlong[\"KR\"] = {\"latitude\": 37, \"longitude\": 127.5};\r\n  latlong[\"KW\"] = {\"latitude\": 29.3375, \"longitude\": 47.6581};\r\n  latlong[\"KY\"] = {\"latitude\": 19.5, \"longitude\": -80.5};\r\n  latlong[\"KZ\"] = {\"latitude\": 48, \"longitude\": 68};\r\n  latlong[\"LA\"] = {\"latitude\": 18, \"longitude\": 105};\r\n  latlong[\"LB\"] = {\"latitude\": 33.8333, \"longitude\": 35.8333};\r\n  latlong[\"LC\"] = {\"latitude\": 13.8833, \"longitude\": -61.1333};\r\n  latlong[\"LI\"] = {\"latitude\": 47.1667, \"longitude\": 9.5333};\r\n  latlong[\"LK\"] = {\"latitude\": 7, \"longitude\": 81};\r\n  latlong[\"LR\"] = {\"latitude\": 6.5, \"longitude\": -9.5};\r\n  latlong[\"LS\"] = {\"latitude\": -29.5, \"longitude\": 28.5};\r\n  latlong[\"LT\"] = {\"latitude\": 55, \"longitude\": 24};\r\n  latlong[\"LU\"] = {\"latitude\": 49.75, \"longitude\": 6};\r\n  latlong[\"LV\"] = {\"latitude\": 57, \"longitude\": 25};\r\n  latlong[\"LY\"] = {\"latitude\": 25, \"longitude\": 17};\r\n  latlong[\"MA\"] = {\"latitude\": 32, \"longitude\": -5};\r\n  latlong[\"MC\"] = {\"latitude\": 43.7333, \"longitude\": 7.4};\r\n  latlong[\"MD\"] = {\"latitude\": 47, \"longitude\": 29};\r\n  latlong[\"ME\"] = {\"latitude\": 42.5, \"longitude\": 19.4};\r\n  latlong[\"MG\"] = {\"latitude\": -20, \"longitude\": 47};\r\n  latlong[\"MH\"] = {\"latitude\": 9, \"longitude\": 168};\r\n  latlong[\"MK\"] = {\"latitude\": 41.8333, \"longitude\": 22};\r\n  latlong[\"ML\"] = {\"latitude\": 17, \"longitude\": -4};\r\n  latlong[\"MM\"] = {\"latitude\": 22, \"longitude\": 98};\r\n  latlong[\"MN\"] = {\"latitude\": 46, \"longitude\": 105};\r\n  latlong[\"MO\"] = {\"latitude\": 22.1667, \"longitude\": 113.55};\r\n  latlong[\"MP\"] = {\"latitude\": 15.2, \"longitude\": 145.75};\r\n  latlong[\"MQ\"] = {\"latitude\": 14.6667, \"longitude\": -61};\r\n  latlong[\"MR\"] = {\"latitude\": 20, \"longitude\": -12};\r\n  latlong[\"MS\"] = {\"latitude\": 16.75, \"longitude\": -62.2};\r\n  latlong[\"MT\"] = {\"latitude\": 35.8333, \"longitude\": 14.5833};\r\n  latlong[\"MU\"] = {\"latitude\": -20.2833, \"longitude\": 57.55};\r\n  latlong[\"MV\"] = {\"latitude\": 3.25, \"longitude\": 73};\r\n  latlong[\"MW\"] = {\"latitude\": -13.5, \"longitude\": 34};\r\n  latlong[\"MX\"] = {\"latitude\": 23, \"longitude\": -102};\r\n  latlong[\"MY\"] = {\"latitude\": 2.5, \"longitude\": 112.5};\r\n  latlong[\"MZ\"] = {\"latitude\": -18.25, \"longitude\": 35};\r\n  latlong[\"NA\"] = {\"latitude\": -22, \"longitude\": 17};\r\n  latlong[\"NC\"] = {\"latitude\": -21.5, \"longitude\": 165.5};\r\n  latlong[\"NE\"] = {\"latitude\": 16, \"longitude\": 8};\r\n  latlong[\"NF\"] = {\"latitude\": -29.0333, \"longitude\": 167.95};\r\n  latlong[\"NG\"] = {\"latitude\": 10, \"longitude\": 8};\r\n  latlong[\"NI\"] = {\"latitude\": 13, \"longitude\": -85};\r\n  latlong[\"NL\"] = {\"latitude\": 52.5, \"longitude\": 5.75};\r\n  latlong[\"NO\"] = {\"latitude\": 62, \"longitude\": 10};\r\n  latlong[\"NP\"] = {\"latitude\": 28, \"longitude\": 84};\r\n  latlong[\"NR\"] = {\"latitude\": -0.5333, \"longitude\": 166.9167};\r\n  latlong[\"NU\"] = {\"latitude\": -19.0333, \"longitude\": -169.8667};\r\n  latlong[\"NZ\"] = {\"latitude\": -41, \"longitude\": 174};\r\n  latlong[\"OM\"] = {\"latitude\": 21, \"longitude\": 57};\r\n  latlong[\"PA\"] = {\"latitude\": 9, \"longitude\": -80};\r\n  latlong[\"PE\"] = {\"latitude\": -10, \"longitude\": -76};\r\n  latlong[\"PF\"] = {\"latitude\": -15, \"longitude\": -140};\r\n  latlong[\"PG\"] = {\"latitude\": -6, \"longitude\": 147};\r\n  latlong[\"PH\"] = {\"latitude\": 13, \"longitude\": 122};\r\n  latlong[\"PK\"] = {\"latitude\": 30, \"longitude\": 70};\r\n  latlong[\"PL\"] = {\"latitude\": 52, \"longitude\": 20};\r\n  latlong[\"PM\"] = {\"latitude\": 46.8333, \"longitude\": -56.3333};\r\n  latlong[\"PR\"] = {\"latitude\": 18.25, \"longitude\": -66.5};\r\n  latlong[\"PS\"] = {\"latitude\": 32, \"longitude\": 35.25};\r\n  latlong[\"PT\"] = {\"latitude\": 39.5, \"longitude\": -8};\r\n  latlong[\"PW\"] = {\"latitude\": 7.5, \"longitude\": 134.5};\r\n  latlong[\"PY\"] = {\"latitude\": -23, \"longitude\": -58};\r\n  latlong[\"QA\"] = {\"latitude\": 25.5, \"longitude\": 51.25};\r\n  latlong[\"RE\"] = {\"latitude\": -21.1, \"longitude\": 55.6};\r\n  latlong[\"RO\"] = {\"latitude\": 46, \"longitude\": 25};\r\n  latlong[\"RS\"] = {\"latitude\": 44, \"longitude\": 21};\r\n  latlong[\"RU\"] = {\"latitude\": 60, \"longitude\": 100};\r\n  latlong[\"RW\"] = {\"latitude\": -2, \"longitude\": 30};\r\n  latlong[\"SA\"] = {\"latitude\": 25, \"longitude\": 45};\r\n  latlong[\"SB\"] = {\"latitude\": -8, \"longitude\": 159};\r\n  latlong[\"SC\"] = {\"latitude\": -4.5833, \"longitude\": 55.6667};\r\n  latlong[\"SD\"] = {\"latitude\": 15, \"longitude\": 30};\r\n  latlong[\"SE\"] = {\"latitude\": 62, \"longitude\": 15};\r\n  latlong[\"SG\"] = {\"latitude\": 1.3667, \"longitude\": 103.8};\r\n  latlong[\"SH\"] = {\"latitude\": -15.9333, \"longitude\": -5.7};\r\n  latlong[\"SI\"] = {\"latitude\": 46, \"longitude\": 15};\r\n  latlong[\"SJ\"] = {\"latitude\": 78, \"longitude\": 20};\r\n  latlong[\"SK\"] = {\"latitude\": 48.6667, \"longitude\": 19.5};\r\n  latlong[\"SL\"] = {\"latitude\": 8.5, \"longitude\": -11.5};\r\n  latlong[\"SM\"] = {\"latitude\": 43.7667, \"longitude\": 12.4167};\r\n  latlong[\"SN\"] = {\"latitude\": 14, \"longitude\": -14};\r\n  latlong[\"SO\"] = {\"latitude\": 10, \"longitude\": 49};\r\n  latlong[\"SR\"] = {\"latitude\": 4, \"longitude\": -56};\r\n  latlong[\"ST\"] = {\"latitude\": 1, \"longitude\": 7};\r\n  latlong[\"SV\"] = {\"latitude\": 13.8333, \"longitude\": -88.9167};\r\n  latlong[\"SY\"] = {\"latitude\": 35, \"longitude\": 38};\r\n  latlong[\"SZ\"] = {\"latitude\": -26.5, \"longitude\": 31.5};\r\n  latlong[\"TC\"] = {\"latitude\": 21.75, \"longitude\": -71.5833};\r\n  latlong[\"TD\"] = {\"latitude\": 15, \"longitude\": 19};\r\n  latlong[\"TF\"] = {\"latitude\": -43, \"longitude\": 67};\r\n  latlong[\"TG\"] = {\"latitude\": 8, \"longitude\": 1.1667};\r\n  latlong[\"TH\"] = {\"latitude\": 15, \"longitude\": 100};\r\n  latlong[\"TJ\"] = {\"latitude\": 39, \"longitude\": 71};\r\n  latlong[\"TK\"] = {\"latitude\": -9, \"longitude\": -172};\r\n  latlong[\"TM\"] = {\"latitude\": 40, \"longitude\": 60};\r\n  latlong[\"TN\"] = {\"latitude\": 34, \"longitude\": 9};\r\n  latlong[\"TO\"] = {\"latitude\": -20, \"longitude\": -175};\r\n  latlong[\"TR\"] = {\"latitude\": 39, \"longitude\": 35};\r\n  latlong[\"TT\"] = {\"latitude\": 11, \"longitude\": -61};\r\n  latlong[\"TV\"] = {\"latitude\": -8, \"longitude\": 178};\r\n  latlong[\"TW\"] = {\"latitude\": 23.5, \"longitude\": 121};\r\n  latlong[\"TZ\"] = {\"latitude\": -6, \"longitude\": 35};\r\n  latlong[\"UA\"] = {\"latitude\": 49, \"longitude\": 32};\r\n  latlong[\"UG\"] = {\"latitude\": 1, \"longitude\": 32};\r\n  latlong[\"UM\"] = {\"latitude\": 19.2833, \"longitude\": 166.6};\r\n  latlong[\"US\"] = {\"latitude\": 38, \"longitude\": -97};\r\n  latlong[\"UY\"] = {\"latitude\": -33, \"longitude\": -56};\r\n  latlong[\"UZ\"] = {\"latitude\": 41, \"longitude\": 64};\r\n  latlong[\"VA\"] = {\"latitude\": 41.9, \"longitude\": 12.45};\r\n  latlong[\"VC\"] = {\"latitude\": 13.25, \"longitude\": -61.2};\r\n  latlong[\"VE\"] = {\"latitude\": 8, \"longitude\": -66};\r\n  latlong[\"VG\"] = {\"latitude\": 18.5, \"longitude\": -64.5};\r\n  latlong[\"VI\"] = {\"latitude\": 18.3333, \"longitude\": -64.8333};\r\n  latlong[\"VN\"] = {\"latitude\": 16, \"longitude\": 106};\r\n  latlong[\"VU\"] = {\"latitude\": -16, \"longitude\": 167};\r\n  latlong[\"WF\"] = {\"latitude\": -13.3, \"longitude\": -176.2};\r\n  latlong[\"WS\"] = {\"latitude\": -13.5833, \"longitude\": -172.3333};\r\n  latlong[\"YE\"] = {\"latitude\": 15, \"longitude\": 48};\r\n  latlong[\"YT\"] = {\"latitude\": -12.8333, \"longitude\": 45.1667};\r\n  latlong[\"ZA\"] = {\"latitude\": -29, \"longitude\": 24};\r\n  latlong[\"ZM\"] = {\"latitude\": -15, \"longitude\": 30};\r\n  latlong[\"ZW\"] = {\"latitude\": -20, \"longitude\": 30};\r\n\r\n  const mapData = [\r\n    {\"code\": \"AF\", \"name\": \"Afghanistan\", \"value\": 32358260, \"color\": \"#eea638\"},\r\n    {\"code\": \"AL\", \"name\": \"Albania\", \"value\": 3215988, \"color\": \"#d8854f\"},\r\n    {\"code\": \"DZ\", \"name\": \"Algeria\", \"value\": 35980193, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"AO\", \"name\": \"Angola\", \"value\": 19618432, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"AR\", \"name\": \"Argentina\", \"value\": 40764561, \"color\": \"#86a965\"},\r\n    {\"code\": \"AM\", \"name\": \"Armenia\", \"value\": 3100236, \"color\": \"#d8854f\"},\r\n    {\"code\": \"AU\", \"name\": \"Australia\", \"value\": 22605732, \"color\": \"#8aabb0\"},\r\n    {\"code\": \"AT\", \"name\": \"Austria\", \"value\": 8413429, \"color\": \"#d8854f\"},\r\n    {\"code\": \"AZ\", \"name\": \"Azerbaijan\", \"value\": 9306023, \"color\": \"#d8854f\"},\r\n    {\"code\": \"BH\", \"name\": \"Bahrain\", \"value\": 1323535, \"color\": \"#eea638\"},\r\n    {\"code\": \"BD\", \"name\": \"Bangladesh\", \"value\": 150493658, \"color\": \"#eea638\"},\r\n    {\"code\": \"BY\", \"name\": \"Belarus\", \"value\": 9559441, \"color\": \"#d8854f\"},\r\n    {\"code\": \"BE\", \"name\": \"Belgium\", \"value\": 10754056, \"color\": \"#d8854f\"},\r\n    {\"code\": \"BJ\", \"name\": \"Benin\", \"value\": 9099922, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"BT\", \"name\": \"Bhutan\", \"value\": 738267, \"color\": \"#eea638\"},\r\n    {\"code\": \"BO\", \"name\": \"Bolivia\", \"value\": 10088108, \"color\": \"#86a965\"},\r\n    {\"code\": \"BA\", \"name\": \"Bosnia and Herzegovina\", \"value\": 3752228, \"color\": \"#d8854f\"},\r\n    {\"code\": \"BW\", \"name\": \"Botswana\", \"value\": 2030738, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"BR\", \"name\": \"Brazil\", \"value\": 196655014, \"color\": \"#86a965\"},\r\n    {\"code\": \"BN\", \"name\": \"Brunei\", \"value\": 405938, \"color\": \"#eea638\"},\r\n    {\"code\": \"BG\", \"name\": \"Bulgaria\", \"value\": 7446135, \"color\": \"#d8854f\"},\r\n    {\"code\": \"BF\", \"name\": \"Burkina Faso\", \"value\": 16967845, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"BI\", \"name\": \"Burundi\", \"value\": 8575172, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"KH\", \"name\": \"Cambodia\", \"value\": 14305183, \"color\": \"#eea638\"},\r\n    {\"code\": \"CM\", \"name\": \"Cameroon\", \"value\": 20030362, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"CA\", \"name\": \"Canada\", \"value\": 34349561, \"color\": \"#a7a737\"},\r\n    {\"code\": \"CV\", \"name\": \"Cape Verde\", \"value\": 500585, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"CF\", \"name\": \"Central African Rep.\", \"value\": 4486837, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"TD\", \"name\": \"Chad\", \"value\": 11525496, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"CL\", \"name\": \"Chile\", \"value\": 17269525, \"color\": \"#86a965\"},\r\n    {\"code\": \"CN\", \"name\": \"China\", \"value\": 1347565324, \"color\": \"#eea638\"},\r\n    {\"code\": \"CO\", \"name\": \"Colombia\", \"value\": 46927125, \"color\": \"#86a965\"},\r\n    {\"code\": \"KM\", \"name\": \"Comoros\", \"value\": 753943, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"CD\", \"name\": \"Congo, Dem. Rep.\", \"value\": 67757577, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"CG\", \"name\": \"Congo, Rep.\", \"value\": 4139748, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"CR\", \"name\": \"Costa Rica\", \"value\": 4726575, \"color\": \"#a7a737\"},\r\n    {\"code\": \"CI\", \"name\": \"Cote d'Ivoire\", \"value\": 20152894, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"HR\", \"name\": \"Croatia\", \"value\": 4395560, \"color\": \"#d8854f\"},\r\n    {\"code\": \"CU\", \"name\": \"Cuba\", \"value\": 11253665, \"color\": \"#a7a737\"},\r\n    {\"code\": \"CY\", \"name\": \"Cyprus\", \"value\": 1116564, \"color\": \"#d8854f\"},\r\n    {\"code\": \"CZ\", \"name\": \"Czech Rep.\", \"value\": 10534293, \"color\": \"#d8854f\"},\r\n    {\"code\": \"DK\", \"name\": \"Denmark\", \"value\": 5572594, \"color\": \"#d8854f\"},\r\n    {\"code\": \"DJ\", \"name\": \"Djibouti\", \"value\": 905564, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"DO\", \"name\": \"Dominican Rep.\", \"value\": 10056181, \"color\": \"#a7a737\"},\r\n    {\"code\": \"EC\", \"name\": \"Ecuador\", \"value\": 14666055, \"color\": \"#86a965\"},\r\n    {\"code\": \"EG\", \"name\": \"Egypt\", \"value\": 82536770, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"SV\", \"name\": \"El Salvador\", \"value\": 6227491, \"color\": \"#a7a737\"},\r\n    {\"code\": \"GQ\", \"name\": \"Equatorial Guinea\", \"value\": 720213, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"ER\", \"name\": \"Eritrea\", \"value\": 5415280, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"EE\", \"name\": \"Estonia\", \"value\": 1340537, \"color\": \"#d8854f\"},\r\n    {\"code\": \"ET\", \"name\": \"Ethiopia\", \"value\": 84734262, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"FJ\", \"name\": \"Fiji\", \"value\": 868406, \"color\": \"#8aabb0\"},\r\n    {\"code\": \"FI\", \"name\": \"Finland\", \"value\": 5384770, \"color\": \"#d8854f\"},\r\n    {\"code\": \"FR\", \"name\": \"France\", \"value\": 63125894, \"color\": \"#d8854f\"},\r\n    {\"code\": \"GA\", \"name\": \"Gabon\", \"value\": 1534262, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"GM\", \"name\": \"Gambia\", \"value\": 1776103, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"GE\", \"name\": \"Georgia\", \"value\": 4329026, \"color\": \"#d8854f\"},\r\n    {\"code\": \"DE\", \"name\": \"Germany\", \"value\": 82162512, \"color\": \"#d8854f\"},\r\n    {\"code\": \"GH\", \"name\": \"Ghana\", \"value\": 24965816, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"GR\", \"name\": \"Greece\", \"value\": 11390031, \"color\": \"#d8854f\"},\r\n    {\"code\": \"GT\", \"name\": \"Guatemala\", \"value\": 14757316, \"color\": \"#a7a737\"},\r\n    {\"code\": \"GN\", \"name\": \"Guinea\", \"value\": 10221808, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"GW\", \"name\": \"Guinea-Bissau\", \"value\": 1547061, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"GY\", \"name\": \"Guyana\", \"value\": 756040, \"color\": \"#86a965\"},\r\n    {\"code\": \"HT\", \"name\": \"Haiti\", \"value\": 10123787, \"color\": \"#a7a737\"},\r\n    {\"code\": \"HN\", \"name\": \"Honduras\", \"value\": 7754687, \"color\": \"#a7a737\"},\r\n    {\"code\": \"HK\", \"name\": \"Hong Kong, China\", \"value\": 7122187, \"color\": \"#eea638\"},\r\n    {\"code\": \"HU\", \"name\": \"Hungary\", \"value\": 9966116, \"color\": \"#d8854f\"},\r\n    {\"code\": \"IS\", \"name\": \"Iceland\", \"value\": 324366, \"color\": \"#d8854f\"},\r\n    {\"code\": \"IN\", \"name\": \"India\", \"value\": 1241491960, \"color\": \"#eea638\"},\r\n    {\"code\": \"ID\", \"name\": \"Indonesia\", \"value\": 242325638, \"color\": \"#eea638\"},\r\n    {\"code\": \"IR\", \"name\": \"Iran\", \"value\": 74798599, \"color\": \"#eea638\"},\r\n    {\"code\": \"IQ\", \"name\": \"Iraq\", \"value\": 32664942, \"color\": \"#eea638\"},\r\n    {\"code\": \"IE\", \"name\": \"Ireland\", \"value\": 4525802, \"color\": \"#d8854f\"},\r\n    {\"code\": \"IL\", \"name\": \"Israel\", \"value\": 7562194, \"color\": \"#eea638\"},\r\n    {\"code\": \"IT\", \"name\": \"Italy\", \"value\": 60788694, \"color\": \"#d8854f\"},\r\n    {\"code\": \"JM\", \"name\": \"Jamaica\", \"value\": 2751273, \"color\": \"#a7a737\"},\r\n    {\"code\": \"JP\", \"name\": \"Japan\", \"value\": 126497241, \"color\": \"#eea638\"},\r\n    {\"code\": \"JO\", \"name\": \"Jordan\", \"value\": 6330169, \"color\": \"#eea638\"},\r\n    {\"code\": \"KZ\", \"name\": \"Kazakhstan\", \"value\": 16206750, \"color\": \"#eea638\"},\r\n    {\"code\": \"KE\", \"name\": \"Kenya\", \"value\": 41609728, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"KP\", \"name\": \"Korea, Dem. Rep.\", \"value\": 24451285, \"color\": \"#eea638\"},\r\n    {\"code\": \"KR\", \"name\": \"Korea, Rep.\", \"value\": 48391343, \"color\": \"#eea638\"},\r\n    {\"code\": \"KW\", \"name\": \"Kuwait\", \"value\": 2818042, \"color\": \"#eea638\"},\r\n    {\"code\": \"KG\", \"name\": \"Kyrgyzstan\", \"value\": 5392580, \"color\": \"#eea638\"},\r\n    {\"code\": \"LA\", \"name\": \"Laos\", \"value\": 6288037, \"color\": \"#eea638\"},\r\n    {\"code\": \"LV\", \"name\": \"Latvia\", \"value\": 2243142, \"color\": \"#d8854f\"},\r\n    {\"code\": \"LB\", \"name\": \"Lebanon\", \"value\": 4259405, \"color\": \"#eea638\"},\r\n    {\"code\": \"LS\", \"name\": \"Lesotho\", \"value\": 2193843, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"LR\", \"name\": \"Liberia\", \"value\": 4128572, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"LY\", \"name\": \"Libya\", \"value\": 6422772, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"LT\", \"name\": \"Lithuania\", \"value\": 3307481, \"color\": \"#d8854f\"},\r\n    {\"code\": \"LU\", \"name\": \"Luxembourg\", \"value\": 515941, \"color\": \"#d8854f\"},\r\n    {\"code\": \"MK\", \"name\": \"Macedonia, FYR\", \"value\": 2063893, \"color\": \"#d8854f\"},\r\n    {\"code\": \"MG\", \"name\": \"Madagascar\", \"value\": 21315135, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"MW\", \"name\": \"Malawi\", \"value\": 15380888, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"MY\", \"name\": \"Malaysia\", \"value\": 28859154, \"color\": \"#eea638\"},\r\n    {\"code\": \"ML\", \"name\": \"Mali\", \"value\": 15839538, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"MR\", \"name\": \"Mauritania\", \"value\": 3541540, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"MU\", \"name\": \"Mauritius\", \"value\": 1306593, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"MX\", \"name\": \"Mexico\", \"value\": 114793341, \"color\": \"#a7a737\"},\r\n    {\"code\": \"MD\", \"name\": \"Moldova\", \"value\": 3544864, \"color\": \"#d8854f\"},\r\n    {\"code\": \"MN\", \"name\": \"Mongolia\", \"value\": 2800114, \"color\": \"#eea638\"},\r\n    {\"code\": \"ME\", \"name\": \"Montenegro\", \"value\": 632261, \"color\": \"#d8854f\"},\r\n    {\"code\": \"MA\", \"name\": \"Morocco\", \"value\": 32272974, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"MZ\", \"name\": \"Mozambique\", \"value\": 23929708, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"MM\", \"name\": \"Myanmar\", \"value\": 48336763, \"color\": \"#eea638\"},\r\n    {\"code\": \"NA\", \"name\": \"Namibia\", \"value\": 2324004, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"NP\", \"name\": \"Nepal\", \"value\": 30485798, \"color\": \"#eea638\"},\r\n    {\"code\": \"NL\", \"name\": \"Netherlands\", \"value\": 16664746, \"color\": \"#d8854f\"},\r\n    {\"code\": \"NZ\", \"name\": \"New Zealand\", \"value\": 4414509, \"color\": \"#8aabb0\"},\r\n    {\"code\": \"NI\", \"name\": \"Nicaragua\", \"value\": 5869859, \"color\": \"#a7a737\"},\r\n    {\"code\": \"NE\", \"name\": \"Niger\", \"value\": 16068994, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"NG\", \"name\": \"Nigeria\", \"value\": 162470737, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"NO\", \"name\": \"Norway\", \"value\": 4924848, \"color\": \"#d8854f\"},\r\n    {\"code\": \"OM\", \"name\": \"Oman\", \"value\": 2846145, \"color\": \"#eea638\"},\r\n    {\"code\": \"PK\", \"name\": \"Pakistan\", \"value\": 176745364, \"color\": \"#eea638\"},\r\n    {\"code\": \"PA\", \"name\": \"Panama\", \"value\": 3571185, \"color\": \"#a7a737\"},\r\n    {\"code\": \"PG\", \"name\": \"Papua New Guinea\", \"value\": 7013829, \"color\": \"#8aabb0\"},\r\n    {\"code\": \"PY\", \"name\": \"Paraguay\", \"value\": 6568290, \"color\": \"#86a965\"},\r\n    {\"code\": \"PE\", \"name\": \"Peru\", \"value\": 29399817, \"color\": \"#86a965\"},\r\n    {\"code\": \"PH\", \"name\": \"Philippines\", \"value\": 94852030, \"color\": \"#eea638\"},\r\n    {\"code\": \"PL\", \"name\": \"Poland\", \"value\": 38298949, \"color\": \"#d8854f\"},\r\n    {\"code\": \"PT\", \"name\": \"Portugal\", \"value\": 10689663, \"color\": \"#d8854f\"},\r\n    {\"code\": \"PR\", \"name\": \"Puerto Rico\", \"value\": 3745526, \"color\": \"#a7a737\"},\r\n    {\"code\": \"QA\", \"name\": \"Qatar\", \"value\": 1870041, \"color\": \"#eea638\"},\r\n    {\"code\": \"RO\", \"name\": \"Romania\", \"value\": 21436495, \"color\": \"#d8854f\"},\r\n    {\"code\": \"RU\", \"name\": \"Russia\", \"value\": 142835555, \"color\": \"#d8854f\"},\r\n    {\"code\": \"RW\", \"name\": \"Rwanda\", \"value\": 10942950, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"SA\", \"name\": \"Saudi Arabia\", \"value\": 28082541, \"color\": \"#eea638\"},\r\n    {\"code\": \"SN\", \"name\": \"Senegal\", \"value\": 12767556, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"RS\", \"name\": \"Serbia\", \"value\": 9853969, \"color\": \"#d8854f\"},\r\n    {\"code\": \"SL\", \"name\": \"Sierra Leone\", \"value\": 5997486, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"SG\", \"name\": \"Singapore\", \"value\": 5187933, \"color\": \"#eea638\"},\r\n    {\"code\": \"SK\", \"name\": \"Slovak Republic\", \"value\": 5471502, \"color\": \"#d8854f\"},\r\n    {\"code\": \"SI\", \"name\": \"Slovenia\", \"value\": 2035012, \"color\": \"#d8854f\"},\r\n    {\"code\": \"SB\", \"name\": \"Solomon Islands\", \"value\": 552267, \"color\": \"#8aabb0\"},\r\n    {\"code\": \"SO\", \"name\": \"Somalia\", \"value\": 9556873, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"ZA\", \"name\": \"South Africa\", \"value\": 50459978, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"ES\", \"name\": \"Spain\", \"value\": 46454895, \"color\": \"#d8854f\"},\r\n    {\"code\": \"LK\", \"name\": \"Sri Lanka\", \"value\": 21045394, \"color\": \"#eea638\"},\r\n    {\"code\": \"SD\", \"name\": \"Sudan\", \"value\": 34735288, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"SR\", \"name\": \"Suriname\", \"value\": 529419, \"color\": \"#86a965\"},\r\n    {\"code\": \"SZ\", \"name\": \"Swaziland\", \"value\": 1203330, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"SE\", \"name\": \"Sweden\", \"value\": 9440747, \"color\": \"#d8854f\"},\r\n    {\"code\": \"CH\", \"name\": \"Switzerland\", \"value\": 7701690, \"color\": \"#d8854f\"},\r\n    {\"code\": \"SY\", \"name\": \"Syria\", \"value\": 20766037, \"color\": \"#eea638\"},\r\n    {\"code\": \"TW\", \"name\": \"Taiwan\", \"value\": 23072000, \"color\": \"#eea638\"},\r\n    {\"code\": \"TJ\", \"name\": \"Tajikistan\", \"value\": 6976958, \"color\": \"#eea638\"},\r\n    {\"code\": \"TZ\", \"name\": \"Tanzania\", \"value\": 46218486, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"TH\", \"name\": \"Thailand\", \"value\": 69518555, \"color\": \"#eea638\"},\r\n    {\"code\": \"TG\", \"name\": \"Togo\", \"value\": 6154813, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"TT\", \"name\": \"Trinidad and Tobago\", \"value\": 1346350, \"color\": \"#a7a737\"},\r\n    {\"code\": \"TN\", \"name\": \"Tunisia\", \"value\": 10594057, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"TR\", \"name\": \"Turkey\", \"value\": 73639596, \"color\": \"#d8854f\"},\r\n    {\"code\": \"TM\", \"name\": \"Turkmenistan\", \"value\": 5105301, \"color\": \"#eea638\"},\r\n    {\"code\": \"UG\", \"name\": \"Uganda\", \"value\": 34509205, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"UA\", \"name\": \"Ukraine\", \"value\": 45190180, \"color\": \"#d8854f\"},\r\n    {\"code\": \"AE\", \"name\": \"United Arab Emirates\", \"value\": 7890924, \"color\": \"#eea638\"},\r\n    {\"code\": \"GB\", \"name\": \"United Kingdom\", \"value\": 62417431, \"color\": \"#d8854f\"},\r\n    {\"code\": \"US\", \"name\": \"United States\", \"value\": 313085380, \"color\": \"#a7a737\"},\r\n    {\"code\": \"UY\", \"name\": \"Uruguay\", \"value\": 3380008, \"color\": \"#86a965\"},\r\n    {\"code\": \"UZ\", \"name\": \"Uzbekistan\", \"value\": 27760267, \"color\": \"#eea638\"},\r\n    {\"code\": \"VE\", \"name\": \"Venezuela\", \"value\": 29436891, \"color\": \"#86a965\"},\r\n    {\"code\": \"PS\", \"name\": \"West Bank and Gaza\", \"value\": 4152369, \"color\": \"#eea638\"},\r\n    {\"code\": \"VN\", \"name\": \"Vietnam\", \"value\": 88791996, \"color\": \"#eea638\"},\r\n    {\"code\": \"YE\", \"name\": \"Yemen, Rep.\", \"value\": 24799880, \"color\": \"#eea638\"},\r\n    {\"code\": \"ZM\", \"name\": \"Zambia\", \"value\": 13474959, \"color\": \"#de4c4f\"},\r\n    {\"code\": \"ZW\", \"name\": \"Zimbabwe\", \"value\": 12754378, \"color\": \"#de4c4f\"}];\r\n\r\n\r\n// get min and max values\r\n  const minBulletSize = 3;\r\n  const maxBulletSize = 70;\r\n  let min = Infinity;\r\n  let max = -Infinity;\r\n  for (let i = 0; i < mapData.length; i++) {\r\n    var value = mapData[i].value;\r\n    if (value < min) {\r\n      min = value;\r\n    }\r\n    if (value > max) {\r\n      max = value;\r\n    }\r\n  }\r\n\r\n// it's better to use circle square to show difference between values, not a radius\r\n  const maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI;\r\n  const minSquare = minBulletSize * minBulletSize * 2 * Math.PI;\r\n\r\n// create circle for each country\r\n  const images = [];\r\n  for (let i = 0; i < mapData.length; i++) {\r\n    const dataItem = mapData[i];\r\n    const value = dataItem.value;\r\n    // calculate size of a bubble\r\n    let square = ( value - min ) / ( max - min ) * ( maxSquare - minSquare ) + minSquare;\r\n    if (square < minSquare) {\r\n      square = minSquare;\r\n    }\r\n    const size = Math.sqrt(square / ( Math.PI * 2 ));\r\n    const id = dataItem.code;\r\n\r\n    images.push({\r\n      \"type\": \"circle\",\r\n      \"theme\": \"none\",\r\n\r\n      \"width\": size,\r\n      \"height\": size,\r\n      \"color\": dataItem.color,\r\n      \"longitude\": latlong[id].longitude,\r\n      \"latitude\": latlong[id].latitude,\r\n      \"title\": dataItem.name,\r\n      \"value\": value\r\n    });\r\n  }\r\n\r\n  const config = {\r\n    \"type\": \"map\",\r\n    \"projection\": \"eckert6\",\r\n    \"titles\": [{\r\n      \"text\": \"Population of the World in 2018\",\r\n      \"size\": 14\r\n    }, {\r\n      \"text\": \"source: Gapminder\",\r\n      \"size\": 11\r\n    }],\r\n    \"areasSettings\": {\r\n      //\"unlistedAreasColor\": \"#000000\",\r\n      //\"unlistedAreasAlpha\": 0.1\r\n    },\r\n    \"dataProvider\": {\r\n      \"map\": \"worldLow\",\r\n      \"images\": images\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MapWithBubbles;\r\n","import React from \"react\";\r\nimport {Card} from \"antd\";\r\n\r\nimport MapWithBubbles from \"./Components/MapWithBubbles\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\n\r\nconst Bubbles = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title={<IntlMessages id=\"sidebar.map.bubbles\"/>}>\r\n      <MapWithBubbles/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Bubbles;\r\n"],"sourceRoot":""}