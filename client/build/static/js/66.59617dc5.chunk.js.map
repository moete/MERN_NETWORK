{"version":3,"sources":["../node_modules/@amcharts/amcharts3-react/index.js","../node_modules/@amcharts/amcharts3-react/amcharts3-react.js","routes/extensions/map/ammap/curvedLines/Components/MapCurvedLines.js","routes/extensions/map/ammap/curvedLines/index.js"],"names":["window","React","__webpack_require__","ReactDOM","createReactClass","module","exports","AmCharts","getType","x","toString","call","hasOwnKey","obj","key","hasOwnProperty","copy","length","output","Array","i","copyArray","copyObject","Date","getTime","isNaN","removeChartListeners","chart","y","xLength","yLength","xValue","has","j","yValue","event","method","removeListener","update","didUpdate","xType","a","updateArray","updateObject","isNumberEqual","oldObj","newObj","id","getInitialState","componentDidMount","props","this","options","makeChart","state","delay","setState","componentDidUpdate","oldProps","validateNow","componentWillUnmount","clear","render","createElement","className","style","MapCurvedLines","targetSVG","config","type","theme","dataProvider","map","zoomLevel","zoomLongitude","zoomLatitude","lines","latitudes","longitudes","images","svgPath","title","latitude","longitude","scale","areasSettings","unlistedAreasColor","unlistedAreasAlpha","imagesSettings","color","rollOverColor","selectedColor","linesSettings","arc","arrow","alpha","arrowAlpha","arrowSize","zoomControl","gridHeight","draggerAlpha","gridAlpha","backgroundZoomsToTop","linesAboveImages","export","enabled","react_default","amcharts3_react_default","width","height","CurvedLines","card","IntlMessages","Components_MapCurvedLines"],"mappings":"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","file":"static/js/66.59617dc5.chunk.js","sourcesContent":["if (typeof window !== \"undefined\") {\n  window.React = require(\"react\");\n  window.ReactDOM = require(\"react-dom\");\n  window.createReactClass = require(\"create-react-class\");\n\n  require(\"./amcharts3-react.js\");\n\n  module.exports = window.AmCharts;\n} else {\n  module.exports = {};\n}","(function () {\n  function getType(x) {\n    // TODO make this faster ?\n    return {}.toString.call(x);\n  }\n\n  function hasOwnKey(obj, key) {\n    return {}.hasOwnProperty.call(obj, key);\n  }\n\n  function copyObject(x) {\n    var output = {}; // TODO use Object.keys ?\n\n    for (var key in x) {\n      if (hasOwnKey(x, key)) {\n        output[key] = copy(x[key]);\n      }\n    }\n\n    return output;\n  }\n\n  function copyArray(x) {\n    var length = x.length;\n    var output = new Array(length);\n\n    for (var i = 0; i < length; ++i) {\n      output[i] = copy(x[i]);\n    }\n\n    return output;\n  } // TODO can this be made faster ?\n  // TODO what about regexps, etc. ?\n\n\n  function copy(x) {\n    switch (getType(x)) {\n      case \"[object Array]\":\n        return copyArray(x);\n\n      case \"[object Object]\":\n        return copyObject(x);\n      // TODO is this necessary ?\n\n      case \"[object Date]\":\n        return new Date(x.getTime());\n\n      default:\n        return x;\n    }\n  }\n\n  function isNaN(x) {\n    return x !== x;\n  }\n\n  function isNumberEqual(x, y) {\n    return x === y || isNaN(x) && isNaN(y);\n  }\n\n  function removeChartListeners(chart, x, y) {\n    if (x !== y) {\n      // TODO is this necessary ?\n      if (x == null) {\n        x = [];\n      } // TODO is this necessary ?\n\n\n      if (y == null) {\n        y = [];\n      }\n\n      var xLength = x.length;\n      var yLength = y.length;\n\n      for (var i = 0; i < xLength; ++i) {\n        var xValue = x[i];\n        var has = false; // TODO make this faster ?\n\n        for (var j = 0; j < yLength; ++j) {\n          var yValue = y[j]; // TODO is this correct ?\n\n          if (xValue.event === yValue.event && xValue.method === yValue.method) {\n            has = true;\n            break;\n          }\n        }\n\n        if (!has) {\n          // TODO is this correct ?\n          chart.removeListener(chart, xValue.event, xValue.method);\n        }\n      }\n    }\n  }\n\n  function updateArray(a, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      var xLength = x.length;\n      var yLength = y.length;\n\n      if (xLength !== yLength) {\n        a.length = yLength;\n        didUpdate = true;\n      }\n\n      for (var i = 0; i < yLength; ++i) {\n        if (i < xLength) {\n          if (update(a, i, x[i], y[i])) {\n            didUpdate = true;\n          }\n        } else {\n          // TODO make this faster ?\n          a[i] = copy(y[i]); // TODO is this necessary ?\n\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function update(obj, key, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      // https://github.com/amcharts/amcharts3-react/issues/40\n      if (hasOwnKey(obj, key)) {\n        var xType = getType(x);\n        var yType = getType(y);\n\n        if (xType === yType) {\n          switch (xType) {\n            case \"[object Array]\":\n              // TODO hacky, remove this after the following bug is fixed:\n              //      Zendesk #28040\n              //      https://codepen.io/team/amcharts/pen/0d61f559cda74682c0ca55d9a24a0f77\n              //      https://www.amcharts.com/kbase/forcing-grouping-stock-chart-data-specific-periods/\n              if (key === \"groupToPeriods\") {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              } else {\n                if (updateArray(obj[key], x, y)) {\n                  didUpdate = true;\n                }\n              }\n\n              break;\n\n            case \"[object Object]\":\n              if (updateObject(obj[key], x, y)) {\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Date]\":\n              if (x.getTime() !== y.getTime()) {\n                // TODO make this faster ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Number]\":\n              if (!isNumberEqual(x, y)) {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            default:\n              // TODO is the copy necessary ?\n              obj[key] = copy(y);\n              didUpdate = true;\n              break;\n          } // TODO is this correct ?\n\n        } else {\n          // TODO make this faster ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function updateObject(chart, oldObj, newObj) {\n    var didUpdate = false;\n\n    if (oldObj !== newObj) {\n      // TODO use Object.keys ?\n      for (var key in newObj) {\n        if (hasOwnKey(newObj, key)) {\n          // TODO make this faster ?\n          if (hasOwnKey(oldObj, key)) {\n            // TODO should this count as an update ?\n            if (key === \"listeners\") {\n              // TODO make this faster ?\n              removeChartListeners(chart, oldObj[key], newObj[key]);\n            }\n\n            if (update(chart, key, oldObj[key], newObj[key])) {\n              didUpdate = true;\n            }\n          } else {\n            // TODO make this faster ?\n            chart[key] = copy(newObj[key]);\n            didUpdate = true;\n          }\n        }\n      } // TODO use Object.keys ?\n\n\n      for (var key in oldObj) {\n        if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\n          if (key === \"listeners\") {\n            removeChartListeners(chart, oldObj[key], []);\n          }\n\n          delete chart[key];\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  var id = 0;\n  AmCharts.React = createReactClass({\n    getInitialState: function getInitialState() {\n      return {\n        id: \"__AmCharts_React_\" + ++id + \"__\",\n        chart: null\n      };\n    },\n    componentDidMount: function componentDidMount() {\n      // AmCharts mutates the config object, so we have to make a deep copy to prevent that\n      var props = copy(this.props.options);\n      var chart = AmCharts.makeChart(this.state.id, props, this.props.delay);\n      this.setState({\n        chart: chart\n      });\n    },\n    // TODO is this correct ? should this use componentWillUpdate instead ?\n    componentDidUpdate: function componentDidUpdate(oldProps) {\n      if (this.state.chart) {\n        var didUpdate = updateObject(this.state.chart, oldProps.options, this.props.options); // TODO make this faster\n\n        if (didUpdate) {\n          this.state.chart.validateNow(true);\n        }\n      }\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      if (this.state.chart) {\n        this.state.chart.clear();\n      }\n    },\n    render: function render() {\n      return React.createElement(\"div\", {\n        id: this.state.id,\n        className: this.props.className,\n        style: this.props.style\n      });\n    }\n  });\n})();","import React from 'react';\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst MapCurvedLines = () => {\r\n\r\n  const targetSVG = \"M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z\";\r\n\r\n  const config = {\r\n    \"type\": \"map\",\r\n    \"theme\": \"light\",\r\n    \"dataProvider\": {\r\n      \"map\": \"worldLow\",\r\n      \"zoomLevel\": 3.5,\r\n      \"zoomLongitude\": -20.1341,\r\n      \"zoomLatitude\": 49.1712,\r\n\r\n      \"lines\": [{\r\n        \"latitudes\": [51.5002, 50.4422],\r\n        \"longitudes\": [-0.1262, 30.5367]\r\n      }, {\r\n        \"latitudes\": [51.5002, 46.9480],\r\n        \"longitudes\": [-0.1262, 7.4481]\r\n      }, {\r\n        \"latitudes\": [51.5002, 59.3328],\r\n        \"longitudes\": [-0.1262, 18.0645]\r\n      }, {\r\n        \"latitudes\": [51.5002, 40.4167],\r\n        \"longitudes\": [-0.1262, -3.7033]\r\n      }, {\r\n        \"latitudes\": [51.5002, 46.0514],\r\n        \"longitudes\": [-0.1262, 14.5060]\r\n      }, {\r\n        \"latitudes\": [51.5002, 48.2116],\r\n        \"longitudes\": [-0.1262, 17.1547]\r\n      }, {\r\n        \"latitudes\": [51.5002, 44.8048],\r\n        \"longitudes\": [-0.1262, 20.4781]\r\n      }, {\r\n        \"latitudes\": [51.5002, 55.7558],\r\n        \"longitudes\": [-0.1262, 37.6176]\r\n      }, {\r\n        \"latitudes\": [51.5002, 38.7072],\r\n        \"longitudes\": [-0.1262, -9.1355]\r\n      }, {\r\n        \"latitudes\": [51.5002, 54.6896],\r\n        \"longitudes\": [-0.1262, 25.2799]\r\n      }, {\r\n        \"latitudes\": [51.5002, 64.1353],\r\n        \"longitudes\": [-0.1262, -21.8952]\r\n      }, {\r\n        \"latitudes\": [51.5002, 40.4300],\r\n        \"longitudes\": [-0.1262, -74.0000]\r\n      }],\r\n      \"images\": [{\r\n        \"id\": \"london\",\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"London\",\r\n        \"latitude\": 51.5002,\r\n        \"longitude\": -0.1262,\r\n        \"scale\": 1\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Brussels\",\r\n        \"latitude\": 50.8371,\r\n        \"longitude\": 4.3676,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Prague\",\r\n        \"latitude\": 50.0878,\r\n        \"longitude\": 14.4205,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Athens\",\r\n        \"latitude\": 37.9792,\r\n        \"longitude\": 23.7166,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Reykjavik\",\r\n        \"latitude\": 64.1353,\r\n        \"longitude\": -21.8952,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Dublin\",\r\n        \"latitude\": 53.3441,\r\n        \"longitude\": -6.2675,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Oslo\",\r\n        \"latitude\": 59.9138,\r\n        \"longitude\": 10.7387,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Lisbon\",\r\n        \"latitude\": 38.7072,\r\n        \"longitude\": -9.1355,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Moscow\",\r\n        \"latitude\": 55.7558,\r\n        \"longitude\": 37.6176,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Belgrade\",\r\n        \"latitude\": 44.8048,\r\n        \"longitude\": 20.4781,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Bratislava\",\r\n        \"latitude\": 48.2116,\r\n        \"longitude\": 17.1547,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Ljubljana\",\r\n        \"latitude\": 46.0514,\r\n        \"longitude\": 14.5060,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Madrid\",\r\n        \"latitude\": 40.4167,\r\n        \"longitude\": -3.7033,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Stockholm\",\r\n        \"latitude\": 59.3328,\r\n        \"longitude\": 18.0645,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Bern\",\r\n        \"latitude\": 46.9480,\r\n        \"longitude\": 7.4481,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Kiev\",\r\n        \"latitude\": 50.4422,\r\n        \"longitude\": 30.5367,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"Paris\",\r\n        \"latitude\": 48.8567,\r\n        \"longitude\": 2.3510,\r\n        \"scale\": 0.5\r\n      }, {\r\n        \"svgPath\": targetSVG,\r\n        \"title\": \"New York\",\r\n        \"latitude\": 40.43,\r\n        \"longitude\": -74,\r\n        \"scale\": 0.5\r\n      }]\r\n    },\r\n\r\n    \"areasSettings\": {\r\n      \"unlistedAreasColor\": \"#FFCC00\",\r\n      \"unlistedAreasAlpha\": 0.9\r\n    },\r\n\r\n    \"imagesSettings\": {\r\n      \"color\": \"#CC0000\",\r\n      \"rollOverColor\": \"#CC0000\",\r\n      \"selectedColor\": \"#000000\"\r\n    },\r\n\r\n    \"linesSettings\": {\r\n      \"arc\": -0.7, // this makes lines curved. Use value from -1 to 1\r\n      \"arrow\": \"middle\",\r\n      \"color\": \"#CC0000\",\r\n      \"alpha\": 0.4,\r\n      \"arrowAlpha\": 1,\r\n      \"arrowSize\": 4\r\n    },\r\n    \"zoomControl\": {\r\n      \"gridHeight\": 100,\r\n      \"draggerAlpha\": 1,\r\n      \"gridAlpha\": 0.2\r\n    },\r\n\r\n    \"backgroundZoomsToTop\": true,\r\n    \"linesAboveImages\": true,\r\n\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MapCurvedLines;\r\n","import React from \"react\";\r\nimport {Card} from \"antd\";\r\n\r\nimport MapCurvedLines from \"./Components/MapCurvedLines\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\n\r\nconst CurvedLines = () => {\r\n  return (\r\n    <Card className=\"gx-card\" title={<IntlMessages id=\"sidebar.map.curved.lines\"/>}>\r\n      <MapCurvedLines/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CurvedLines;\r\n"],"sourceRoot":""}