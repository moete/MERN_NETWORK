{"version":3,"sources":["../node_modules/react-simple-maps/node_modules/d3-geo/src/adder.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/math.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/noop.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/stream.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/area.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/cartesian.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/bounds.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/centroid.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/constant.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/compose.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/rotation.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/circle.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/clip/buffer.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/clip/line.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/pointEqual.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/clip/polygon.js","../node_modules/react-simple-maps/node_modules/d3-array/src/ascending.js","../node_modules/react-simple-maps/node_modules/d3-array/src/bisect.js","../node_modules/react-simple-maps/node_modules/d3-array/src/bisector.js","../node_modules/react-simple-maps/node_modules/d3-array/src/cross.js","../node_modules/react-simple-maps/node_modules/d3-array/src/array.js","../node_modules/react-simple-maps/node_modules/d3-array/src/range.js","../node_modules/react-simple-maps/node_modules/d3-array/src/ticks.js","../node_modules/react-simple-maps/node_modules/d3-array/src/threshold/sturges.js","../node_modules/react-simple-maps/node_modules/d3-array/src/merge.js","../node_modules/react-simple-maps/node_modules/d3-array/src/zip.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/clip/extent.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/length.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/polygonContains.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/distance.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/contains.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/graticule.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/interpolate.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/path/area.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/identity.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/path/bounds.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/path/centroid.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/path/context.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/path/measure.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/path/string.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/path/index.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/clip/index.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/clip/circle.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/transform.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/fit.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/resample.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/index.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/conic.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/albers.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/mercator.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/identity.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/orthographic.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/stereographic.js","../node_modules/react-simple-maps/node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/react-simple-maps/node_modules/d3-geo/index.js","../node_modules/react-simple-maps/lib/utils.js","../node_modules/react-simple-maps/lib/MapGroup.js","../node_modules/antd/es/timeline/TimelineItem.js","../node_modules/antd/es/timeline/Timeline.js","../node_modules/antd/es/timeline/index.js","../node_modules/react-simple-maps/lib/projectionConfig.js","../node_modules/react-simple-maps/lib/index.js","../node_modules/react-simple-maps/lib/ComposableMap.js","../node_modules/react-simple-maps/lib/projections.js","../node_modules/react-simple-maps/lib/ZoomableGroup.js","../node_modules/react-simple-maps/lib/ZoomableGlobe.js","../node_modules/react-simple-maps/lib/Geographies.js","../node_modules/react-simple-maps/lib/Geography.js","../node_modules/react-simple-maps/lib/Marker.js","../node_modules/react-simple-maps/lib/Markers.js","../node_modules/react-simple-maps/lib/Line.js","../node_modules/react-simple-maps/lib/Lines.js","../node_modules/react-simple-maps/lib/Annotation.js","../node_modules/react-simple-maps/lib/Annotations.js","../node_modules/react-simple-maps/lib/Graticule.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/noop.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/math.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/adder.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/ascending.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/bisect.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/bisector.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/cross.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/array.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/range.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/ticks.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/merge.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/zip.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/constant.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/compose.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/circle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/identity.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/transform.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/stream.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo-projection/src/math.js","../node_modules/d3-geo-projection/src/airy.js","../node_modules/d3-geo-projection/src/aitoff.js","../node_modules/d3-geo-projection/src/armadillo.js","../node_modules/d3-geo-projection/src/august.js","../node_modules/d3-geo-projection/src/baker.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo-projection/src/berghaus.js","../node_modules/d3-geo-projection/src/mollweide.js","../node_modules/d3-geo-projection/src/boggs.js","../node_modules/d3-geo-projection/src/parallel1.js","../node_modules/d3-geo-projection/src/sinusoidal.js","../node_modules/d3-geo-projection/src/bonne.js","../node_modules/d3-geo-projection/src/bottomley.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo-projection/src/bromley.js","../node_modules/d3-geo-projection/src/chamberlin.js","../node_modules/d3-geo-projection/src/collignon.js","../node_modules/d3-geo-projection/src/craig.js","../node_modules/d3-geo-projection/src/craster.js","../node_modules/d3-geo-projection/src/cylindricalEqualArea.js","../node_modules/d3-geo-projection/src/cylindricalStereographic.js","../node_modules/d3-geo-projection/src/eckert1.js","../node_modules/d3-geo-projection/src/eckert2.js","../node_modules/d3-geo-projection/src/eckert3.js","../node_modules/d3-geo-projection/src/eckert4.js","../node_modules/d3-geo-projection/src/eckert5.js","../node_modules/d3-geo-projection/src/eckert6.js","../node_modules/d3-geo-projection/src/eisenlohr.js","../node_modules/d3-geo-projection/src/fahey.js","../node_modules/d3-geo-projection/src/foucaut.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo-projection/src/gilbert.js","../node_modules/d3-geo-projection/src/gingery.js","../node_modules/d3-geo-projection/src/ginzburgPolyconic.js","../node_modules/d3-geo-projection/src/ginzburg4.js","../node_modules/d3-geo-projection/src/ginzburg5.js","../node_modules/d3-geo-projection/src/ginzburg6.js","../node_modules/d3-geo-projection/src/ginzburg8.js","../node_modules/d3-geo-projection/src/ginzburg9.js","../node_modules/d3-geo-projection/src/square.js","../node_modules/d3-geo-projection/src/gringorten.js","../node_modules/d3-geo-projection/src/elliptic.js","../node_modules/d3-geo-projection/src/guyou.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo-projection/src/hammer.js","../node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","../node_modules/d3-geo-projection/src/healpix.js","../node_modules/d3-geo-projection/src/hill.js","../node_modules/d3-geo-projection/src/sinuMollweide.js","../node_modules/d3-geo-projection/src/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/index.js","../node_modules/d3-geo-projection/src/interrupted/boggs.js","../node_modules/d3-geo-projection/src/interrupted/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/mollweide.js","../node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js","../node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js","../node_modules/d3-geo-projection/src/interrupted/sinusoidal.js","../node_modules/d3-geo-projection/src/kavrayskiy7.js","../node_modules/d3-geo-projection/src/lagrange.js","../node_modules/d3-geo-projection/src/larrivee.js","../node_modules/d3-geo-projection/src/laskowski.js","../node_modules/d3-geo-projection/src/littrow.js","../node_modules/d3-geo-projection/src/loximuthal.js","../node_modules/d3-geo-projection/src/miller.js","../node_modules/d3-geo-projection/src/modifiedStereographic.js","../node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js","../node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js","../node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js","../node_modules/d3-geo-projection/src/naturalEarth.js","../node_modules/d3-geo-projection/src/nellHammer.js","../node_modules/d3-geo-projection/src/patterson.js","../node_modules/d3-geo-projection/src/polyconic.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/area.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo-projection/src/polyhedral/matrix.js","../node_modules/d3-geo-projection/src/polyhedral/index.js","../node_modules/d3-geo-projection/node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo-projection/src/polyhedral/octahedron.js","../node_modules/d3-geo-projection/src/polyhedral/butterfly.js","../node_modules/d3-geo-projection/src/polyhedral/collignon.js","../node_modules/d3-geo-projection/src/polyhedral/waterman.js","../node_modules/d3-geo-projection/src/noop.js","../node_modules/d3-geo-projection/src/project/index.js","../node_modules/d3-geo-projection/src/project/clockwise.js","../node_modules/d3-geo-projection/src/project/contains.js","../node_modules/d3-geo-projection/src/quincuncial/index.js","../node_modules/d3-geo-projection/src/quincuncial/gringorten.js","../node_modules/d3-geo-projection/src/quincuncial/peirce.js","../node_modules/d3-geo-projection/src/quantize.js","../node_modules/d3-geo-projection/src/rectangularPolyconic.js","../node_modules/d3-geo-projection/src/robinson.js","../node_modules/d3-geo-projection/src/satellite.js","../node_modules/d3-geo-projection/src/stitch.js","../node_modules/d3-geo-projection/src/times.js","../node_modules/d3-geo-projection/src/twoPoint.js","../node_modules/d3-geo-projection/src/twoPointAzimuthal.js","../node_modules/d3-geo-projection/src/twoPointEquidistant.js","../node_modules/d3-geo-projection/src/vanDerGrinten.js","../node_modules/d3-geo-projection/src/vanDerGrinten2.js","../node_modules/d3-geo-projection/src/vanDerGrinten3.js","../node_modules/d3-geo-projection/src/vanDerGrinten4.js","../node_modules/d3-geo-projection/src/wagner4.js","../node_modules/d3-geo-projection/src/wagner6.js","../node_modules/d3-geo-projection/src/wagner7.js","../node_modules/d3-geo-projection/src/wiechel.js","../node_modules/d3-geo-projection/src/winkel3.js","../node_modules/d3-geo-projection/index.js","../node_modules/topojson-client/src/identity.js","../node_modules/topojson-client/src/transform.js","../node_modules/topojson-client/src/bbox.js","../node_modules/topojson-client/src/reverse.js","../node_modules/topojson-client/src/feature.js","../node_modules/topojson-client/src/stitch.js","../node_modules/topojson-client/src/mesh.js","../node_modules/topojson-client/src/merge.js","../node_modules/topojson-client/src/bisect.js","../node_modules/topojson-client/src/neighbors.js","../node_modules/topojson-client/src/quantize.js","../node_modules/topojson-client/src/untransform.js","../node_modules/topojson-client/index.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/number.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/init.js"],"names":["adder","Adder","this","reset","prototype","constructor","s","t","add","y","_add","temp","valueOf","a","b","x","bv","av","epsilon","pi","Math","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","ceil","exp","log","floor","pow","sin","math_sign","sign","sqrt","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","i","n","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","push","bounds_linePoint","p","normal","inflection","phii","delta","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","merged","deltaMax","Infinity","sort","NaN","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","m","centroid","constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","src_circle","ring","center","precision","circle","c","apply","arguments","r","_","buffer","line","lines","rejoin","pop","concat","shift","result","clip_line","x0","y0","x1","y1","ax","ay","dx","dy","pointEqual","Intersection","points","other","entry","o","e","clip_polygon","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","polygon_link","start","current","isSubject","array","ascending","ascendingBisect","compare","f","left","lo","hi","mid","right","bisector","array_array","Array","src_range","slice","map","stop","max","merge","arrays","j","clipMax","clipMin","extent_clipExtent","visible","from","to","a1","corner","comparePoint","ca","cb","polygon","x__","y__","v__","x_","y_","v_","first","clean","activeStream","bufferStream","clipStream","linePoint","winding","a0","b0","b1","polygonInside","cleanInside","min","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","_stream","extent","polygonContains_sum","polygonContains","angle","point0","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","point1","phi1","absDelta","arc","intersection","phiArc","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","X","Y","DX","DY","graticule","filter","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","A","src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","join","src_path","projection","projectionStream","contextStream","path","src_clip","pointVisible","clipLine","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","ringSegments","validSegment","clip_antimeridian","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clip_circle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","polar","q1","code","c0","v0","v00","point2","src_transform","methods","transformer","TransformStream","key","fit_fitExtent","h","clipExtent","scale","translate","fit_fitSize","size","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","projection_projection","projectionMutator","projectAt","projectRotate","theta","preclip","postclip","projectResample","projectTransform","recenter","clipAngle","fitExtent","fitSize","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","fy","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","g","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","scaleTranslate","kx","ky","tx","ty","projection_identity","sx","sy","transform","reflectX","reflectY","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","__webpack_require__","__webpack_exports__","Object","defineProperty","exports","value","calculateResizeFactor","actualDimension","baseDimension","calculateMousePosition","props","zoom","resizeFactor","undefined","width","height","reference","canRotate","reverseRotation","item","returner","isChildOfType","createNewChildren","children","child","_react2","default","cloneElement","groupName","itemName","roundPath","replace","round","createConnectorPath","connectorType","endPoint","curve","e0","e1","createTextAnchor","computeBackdrop","backdrop","originalRotation","tl","br","obj","_react","__esModule","expectedTypes","indexOf","componentIdentifier","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","MapGroup","_Component","instance","TypeError","_classCallCheck","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","setPrototypeOf","_inherits","Component","_props","style","createElement","className","defaultProps","_extends","assign","source","_defineProperty","__rest","getOwnPropertySymbols","propertyIsEnumerable","TimelineItem_TimelineItem","react","_ref","_classNames","_classNames2","getPrefixCls","customizePrefixCls","prefixCls","_props$color","color","pending","dot","restProps","itemClassName","classnames_default","dotClassName","es","borderColor","test","position","timeline_TimelineItem","_typeof","Symbol","iterator","Timeline_extends","_toConsumableArray","arr","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","_iterableToArray","minLen","toString","name","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","Timeline_defineProperty","_defineProperties","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","_assertThisInitialized","Timeline_rest","Timeline_Timeline","_React$Component","Timeline","_super","_this","renderTimeline","_a","_a$pending","pendingDot","mode","pendingNode","classString","pendingItem","icon","timeLineItems","toArray","getPositionCls","ele","idx","truthyItems","itemsCount","count","lastCls","items","pendingClass","readyClass","Item","xOffset","yOffset","_ComposableMap","get","_interopRequireDefault","_ZoomableGroup","_ZoomableGlobe","_Geographies","_Geography","_Marker","_Markers","_Line","_Lines","_MapGroup","_Annotation","_Annotations","_Graticule","_projections2","_projectionConfig2","ComposableMap","bind","projectionConfig","_props2","showCenter","aspectRatio","viewBox","defs","preserveAspectRatio","fill","config","projectionName","baseProjection","projectionReference","_d3GeoProjection","_d3Geo","_projectionConfig","geoMercator","miller","geoMiller","times","geoTimes","robinson","geoRobinson","winkel3","geoWinkel3","eckert4","geoEckert4","geoAlbersUsa","geoOrthographic","_utils","ZoomableGroup","state","mouseX","mouseY","mouseXStart","mouseYStart","isPressed","resizeFactorX","resizeFactorY","handleMouseMove","handleMouseUp","handleMouseDown","handleTouchStart","handleTouchMove","handleResize","pageX","pageY","disablePanning","setState","_ref2","touches","onMoveEnd","_state","_ref3","_state2","onMoveStart","_ref4","evt","preventDefault","nextProps","_state3","_props3","zoomFactor","centerChanged","JSON","stringify","_props4","zoomableGroupNode","parentNode","getBoundingClientRect","xPercentageChange","yPercentageChange","_props5","window","addEventListener","preventTouchScroll","removeEventListener","_this2","_props6","_state4","ref","onMouseMove","onMouseUp","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","strokeWidth","ZoomableGlobe","initialRotation","clientX","clientY","differenceX","differenceY","sensitivity","newCenter","currentCenter","zoomableGlobeNode","_topojsonClient","Geographies","geographyPaths","shouldFetchGeographies","geography","parseGeographies","fetchGeographies","nextState","disableOptimization","geographyUrl","console","warn","cancelPendingRequest","objects","keys","request","XMLHttpRequest","open","onload","status","parse","responseText","onGeographyPathsLoaded","String","onerror","send","_xhr","abort","pathCache","Geography","hover","pressed","handleMouseEnter","handleMouseLeave","handleMouseClick","handleFocus","handleBlur","persist","onClick","onMouseEnter","onMouseLeave","_props7","onFocus","_props8","onBlur","_props9","cacheId","tabable","pathString","geoPath","renderPath","excludeProps","reduce","tabIndex","Marker","marker","preserveMarkerAspect","translation","lineString","isHidden","geoLength","_MapGroup2","Markers","_objectWithoutProperties","Line","end","buildPath","buildLineString","startLineString","endLineString","Lines","Annotation","hiddenStyle","stroke","markerEnd","connectorPath","textAnchor","Annotations","computeGraticule","geoGraticule","computeOutline","Graticule","renderGraticule","graticulePath","outlinePath","globe","pointerEvents","math_epsilon","rejoin_link","longitude","src_constant","clipRectangle","fit","fitBounds","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectRotateTransform","transformRotate","fitWidth","fitHeight","math_abs","math_atan","math_atan2","math_cos","math_exp","math_floor","math_log","math_max","math_min","math_pow","src_math_sign","math_sin","math_tan","src_math_epsilon","math_epsilon2","math_pi","math_halfPi","math_quarterPi","sqrt1_2","SQRT1_2","sqrt2","math_sqrt","sqrtPi","math_tau","math_degrees","math_radians","math_asin","math_acos","sinh","cosh","airyRaw","beta","tanBeta_2","cosx","cosy","siny","cosz","z_2","cosz_2","sinz_2","tanz_2","lnsecz_2","sinz","airy","aitoffRaw","sincia","sinci","sinx","sinx_2","cosx_2","sin_2y","sin2y","cos2y","sin2x_2","fx","dxdx","dxdy","dydx","dydy","aitoff","armadilloRaw","sPhi0","tanPhi0","cosLambda","sinLambda","dxdLambda","dxdPhi","dydLambda","dydPhi","denominator","dPhi","armadillo","stream_","parallel","rotateStream","sphereStream","augustRaw","tanPhi","sin3Eta","eta","xi","arcosh","arsinh","cosEta","coshXi","august","sqrt8","baker_phi0","bakerRaw","cosPhi_2","tanPhi_2","baker","berghausRaw","lobes","theta0","α","cotα","berghaus","sr","delta0","mollweideBromleyTheta","cp","cpsinPhi","mollweideBromleyRaw","mollweideRaw","mollweide","boggs_k","boggs_w","boggsRaw","boggs","parallel1","sinusoidalRaw","sinusoidal","bonneRaw","cotPhi0","rho","bonne","bottomleyRaw","sinPsi","centroid_z0","bottomley","fraction","bromleyRaw","bromley","chamberlin_distance","s1","s2","cosdLambda","sindPhi","sindLambda","chamberlin_angle","chamberlin_longitude","chamberlinRaw","p2","beta0","beta1","beta2","mean","chamberlinAfrica","chamberlin","R","collignonRaw","collignon","craigRaw","cosλ","craig","sqrt3","crasterRaw","craster","cylindricalEqualArea","cylindricalStereographicRaw","cylindricalStereographic","eckert1Raw","eckert1","eckert2Raw","eckert2","eckert3Raw","eckert3","eckert4Raw","eckert5Raw","eckert5","eckert6Raw","eckert6","eisenlohrK","eisenlohrRaw","s0","_0","_1","cos1","v2","vm1v","vp1v","deltatDeltaLambda","deltatDeltaPhi","deltacDeltat","deltacDeltaLambda","deltacDeltaPhi","deltavDeltaLambda","deltavDeltaPhi","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","eisenlohr","faheyK","faheyRaw","fahey","foucautRaw","cosk","foucaut","gilbertForward","gilbertInvert","src_gilbert","projectionType","gilbert","property","gingeryRaw","rho2","r2","rhoCosAlpha","k_","s_","gingeryLength","gingeryIntegrate","dTheta","x_halfPi","rhosinAlpha","sinRhoCosAlpha","halfPi_RhoCosAlpha","gingery","cRho","sRho","ginzburgPolyconic","xB","yB","m2","dAlphadLambda","xB2","dxBdPhi","dyBdPhi","dmdPhi","mcosAlpha","msinAlpha","dAlphadPhi","ginzburg4Raw","ginzburg4","ginzburg5Raw","ginzburg5","ginzburg6Raw","ginzburg6","ginzburg8Raw","lambda4","ginzburg8","ginzburg9Raw","ginzburg9","square","projectSquare","location","gringortenRaw","sLambda","sPhi","a2","secPhi","drdPhi","dp2dPhi","mu","nu","zeta","g2","zetaMug","f2","df","gringortenHexadecant","gringortenHexadecantInvert","gringorten","ellipticJ","twon","ellipticF","guyouRaw","K","psi","at","y_1","guyouComplexAtan","sinhPsi","cscPhi","cotPhi2","cotLambda2","ellipticFi","ellipticJi","tn","guyouComplexDivide","guyou","hammerRaw","hammerQuarticAuthalicRaw","hammer","coefficient","hammerRetroazimuthalRaw","hammerRetroazimuthalRotation","hammerRetroazimuthal","rotate_","healpixParallel","healpixLambert","healpixRaw","H","dy1","healpix","hillRaw","L","Bt","rho0","K2","L2","omega","sinTheta","cosTheta","Bt_Bt1","C","hill","ratio","sinuMollweidePhi","sinuMollweideY","sinuMollweideRaw","sinuMollweide","homolosineRaw","homolosine","interrupted_pointEqual","interpolateLine","resampled","interrupted","lobe","interpolateSphere","bound","boggs_lobes","interrupted_boggs","homolosine_lobes","interrupted_homolosine","mollweide_lobes","interrupted_mollweide","mollweideHemispheres_lobes","mollweideHemispheres","sinuMollweide_lobes","interrupted_sinuMollweide","sinusoidal_lobes","interrupted_sinusoidal","kavrayskiy7Raw","kavrayskiy7","lagrangeRaw","lagrange","spacing","pi_sqrt2","larriveeRaw","sqrtcosPhi","sinPhi_2","sinLambda_6","cosLambda_6","f0","f1","df0dPhi","df0dLambda","df1dPhi","df1dLambda","denom","larrivee","laskowskiRaw","lambdaPhi","laskowski","littrowRaw","y2_1","littrow","loximuthalRaw","loximuthal","millerRaw","modifiedStereographicRaw","zr","zi","ar","deltar","deltai","sinc","gs48","gs50","modifiedStereographic_miller","lee","modifiedStereographicAlaska","modifiedStereographic","modifiedStereographicGs48","modifiedStereographicGs50","modifiedStereographicMiller","modifiedStereographicLee","coefficients","sqrt6","sqrt7","mtFlatPolarParabolicRaw","mtFlatPolarParabolic","mtFlatPolarQuarticRaw","sinTheta_2","mtFlatPolarQuartic","mtFlatPolarSinusoidalRaw","mtFlatPolarSinusoidal","naturalEarthRaw","phi4","naturalEarth","nellHammerRaw","nellHammer","pattersonK1","pattersonK2","pattersonK3","pattersonK4","pattersonC1","pattersonC2","pattersonC3","pattersonC4","pattersonRaw","yc","patterson","polyconicRaw","area_phi00","polyconic","bounds_range","bounds_boundsStream","bounds_boundsPoint","src_bounds","polyhedral_matrix","subtract","matrix_angle","matrix_length","multiply","polyhedral","root","face","node","recurse","parent","edges","faceEdges","shared","found","sharedEdge","polyhedral_pointEqual","hasInverse","faceInvert","inverse","faceDegrees","proj","edge","multiPoint","notPoles","inside","some","octahedron","polyhedral_octahedron","butterfly","faceProjection","faces","collignonK","polyhedral_collignon","waterman","w5","xyz","waterman_cartesian","hexagon","waterman_spherical","cornerNormals","parents","normals","cosphi","src_noop","src_project","Error","projectFeature","projectFeatureCollection","projectGeometry","id","properties","projectGeometryCollection","sinkPoint","sinkLine","sinkPolygon","project_points","project_lines","polygons","holes","clockwise","hole","yi","pj","xj","yj","quincuncial","projectQuincuncial","quincuncial_gringorten","peirce","quantize","digits","quantizePoint","toFixed","quantizePoints","quantizePolygon","quantizeGeometry","quantizeFeature","rectangularPolyconicRaw","E","cotPhi","rectangularPolyconic","robinson_K","robinsonRaw","i0","di","bx","by","yy","satelliteRaw","P","vertical","satelliteVerticalRaw","cosOmega","sinOmega","satellite","tilt","epsilonInverse","stitch_x0","x0e","stitch_x1","x1e","stitch_y0","y0e","stitch_y1","y1e","normalizePoint","clampPoint","clampPoints","extractFragments","fragments","pointk","xk","yk","fragmentBefore","stitchFeature","stitchGeometry","fragment","startFragment","endFragment","fragmentByStart","fragmentByEnd","index","stitchFragments","stitch","timesRaw","twoPoint","raw","twoPointAzimuthalRaw","cosd","twoPointAzimuthalUsa","twoPointAzimuthal","twoPointEquidistantRaw","lambdaa","lambdab","z02","tanLambda0","S","za","zb","cosza","coszb","twoPointEquidistantUsa","twoPointEquidistant","vanDerGrintenRaw","A2","G","P2","P2_A2","G_P2","Q","x2_y2","c3","m1","theta1","vanDerGrinten","vanDerGrinten2Raw","vanDerGrinten2","vanDerGrinten3Raw","vanDerGrinten3","vanDerGrinten4Raw","B2","C2","BC","B_C2","B_3C","D","D2","C_","B_C","F_","sqrtF","vanDerGrinten4","wagner4_A","wagner4_B","wagner4Raw","wagner4","wagner6Raw","wagner6","wagner7Raw","wagner7","wiechelRaw","sin1_Phi","wiechel","winkel3Raw","F","sinphi","sin_2phi","sin2phi","cos2phi","sinlambda","coslambda_2","sinlambda_2","sin2lambda_2","dxdlambda","dxdphi","dydlambda","dydphi","dlambda","dphi","identity","topology","src_bbox","bbox","bboxPoint","bboxGeometry","arcs","feature_feature","feature_object","transformPoint","stitchedArcs","emptyIndex","flush","dp","ends","fg","unshift","gf","mesh","meshArcs","geom","geomsByArc","extract0","extract1","extract2","geoms","extractArcs","mergeArcs","polygonsByArc","groups","extract","planarRingArea","group","neighbors","ki","bisect","src_neighbors","indexesByArc","geometryType","indexes","ij","ik","splice","bb","untransform","e10","e5","e2","ticks","tickIncrement","isFinite","r1","_r","_r2","power","LN10","error","ascendingComparator","bisectRight","define","factory","extend","definition","Color","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color_color","format","trim","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","color_rgb","opacity","rgb_formatHex","hex","rgb_formatRgb","isNaN","Hsl","hslConvert","hsl2rgb","basis","v1","v3","t3","copy","channels","displayable","formatHsl","brighter","darker","linear","gamma","nogamma","exponential","src_rgb","rgbGamma","rgbSpline","spline","colors","values","numberArray","isNumberArray","ArrayBuffer","isView","DataView","genericArray","nb","na","src_value","src_number","reA","reB","am","bm","bs","lastIndex","one","string_zero","setTime","number_number","unit","normalize","bimap","domain","d0","d1","polymap","unknown","piecewise","output","input","clamp","rescale","clamper","rangeRound","re","formatSpecifier","specifier","match","FormatSpecifier","align","symbol","zero","comma","formatDecimalParts","toExponential","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","src_exponent","precisionPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toLocaleString","toPrecision","_p","toUpperCase","_x","prefixes","locale","grouping","thousands","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","percent","minus","nan","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","padding","formatPrefix","src_locale","precisionRound","precisionFixed","tickFormat","step0","step1","tickStep","linear_linear","nice","prestep","maxIter","linearish"],"mappings":"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","file":"static/js/13.dfa33b36.chunk.js","sourcesContent":["// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n  return clip = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = _stream);\n    },\n    extent: function extent(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    return this._circle = circle(_), this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n  if (clip != null) projection.clipExtent(clip);\n  return projection.scale(k * 150).translate([x, y]);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport { clipExtent } from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { degrees, radians, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  dx,\n      dy,\n      lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      projectRotate,\n      // rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // clip extent\n  delta2 = 0.5,\n      projectResample = resample(projectTransform, delta2),\n      // precision\n  cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { degrees, pi, radians } from \"../math\";\nimport { projectionMutator } from \"./index\";\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function (_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}","import { abs, asin, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0),\n      n = (sy0 + sin(y1)) / 2; // Are the parallels symmetrical around the Equator?\n\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n  var c = 1 + sy0 * (2 * n - sy0),\n      r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function (x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n}","import { asin, cos, sin } from \"../math\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}","import conicEqualArea from \"./conicEqualArea\";\nexport default function () {\n  return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n}","import { epsilon } from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport { fitExtent, fitSize } from \"./fit\"; // The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\n\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function point(x, y) {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].point(x, y);\n      }\n    },\n    sphere: function sphere() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].sphere();\n      }\n    },\n    lineStart: function lineStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineStart();\n      }\n    },\n    lineEnd: function lineEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineEnd();\n      }\n    },\n    polygonStart: function polygonStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonStart();\n      }\n    },\n    polygonEnd: function polygonEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonEnd();\n      }\n    }\n  };\n} // A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\n\nexport default function () {\n  var cache,\n      cacheStream,\n      lower48 = albers(),\n      lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n      alaskaPoint,\n      // EPSG:3338\n  hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n      hawaiiPoint,\n      // ESRI:102007\n  _point,\n      pointStream = {\n    point: function point(x, y) {\n      _point = [x, y];\n    }\n  };\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    return _point = null, (lower48Point.point(x, y), _point) || (alaskaPoint.point(x, y), _point) || (hawaiiPoint.point(x, y), _point);\n  }\n\n  albersUsa.invert = function (coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function (_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function (_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function (_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(),\n        x = +_[0],\n        y = +_[1];\n    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    return reset();\n  };\n\n  albersUsa.fitExtent = function (extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function (size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import { abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { mercatorRaw } from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) {\n      if (y < -halfPi + epsilon) y = -halfPi + epsilon;\n    } else {\n      if (y > halfPi - epsilon) y = halfPi - epsilon;\n    }\n\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function (x, y) {\n    var fy = f - y,\n        r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import { clipExtent as _clipExtent } from \"../clip/extent\";\nimport identity from \"../identity\";\nimport { transformer } from \"../transform\";\nimport { fitExtent as _fitExtent, fitSize as _fitSize } from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function point(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function () {\n  var k = 1,\n      tx = 0,\n      ty = 0,\n      sx = 1,\n      sy = 1,\n      transform = identity,\n      // scale, translate and reflect\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      clip = identity,\n      // clip extent\n  cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = transform(clip(cacheStream = _stream));\n    },\n    clipExtent: function clipExtent(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : _clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function scale(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function translate(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function reflectX(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function reflectY(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function fitExtent(extent, object) {\n      return _fitExtent(projection, extent, object);\n    },\n    fitSize: function fitSize(size, object) {\n      return _fitSize(projection, size, object);\n    }\n  };\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export { default as geoArea } from \"./src/area\";\nexport { default as geoBounds } from \"./src/bounds\";\nexport { default as geoCentroid } from \"./src/centroid\";\nexport { default as geoCircle } from \"./src/circle\";\nexport { default as geoClipExtent } from \"./src/clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\n\nexport { default as geoContains } from \"./src/contains\";\nexport { default as geoDistance } from \"./src/distance\";\nexport { default as geoGraticule, graticule10 as geoGraticule10 } from \"./src/graticule\";\nexport { default as geoInterpolate } from \"./src/interpolate\";\nexport { default as geoLength } from \"./src/length\";\nexport { default as geoPath } from \"./src/path/index\";\nexport { default as geoAlbers } from \"./src/projection/albers\";\nexport { default as geoAlbersUsa } from \"./src/projection/albersUsa\";\nexport { default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw } from \"./src/projection/azimuthalEqualArea\";\nexport { default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw } from \"./src/projection/azimuthalEquidistant\";\nexport { default as geoConicConformal, conicConformalRaw as geoConicConformalRaw } from \"./src/projection/conicConformal\";\nexport { default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw } from \"./src/projection/conicEqualArea\";\nexport { default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw } from \"./src/projection/conicEquidistant\";\nexport { default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw } from \"./src/projection/equirectangular\";\nexport { default as geoGnomonic, gnomonicRaw as geoGnomonicRaw } from \"./src/projection/gnomonic\";\nexport { default as geoIdentity } from \"./src/projection/identity\";\nexport { default as geoProjection, projectionMutator as geoProjectionMutator } from \"./src/projection/index\";\nexport { default as geoMercator, mercatorRaw as geoMercatorRaw } from \"./src/projection/mercator\";\nexport { default as geoOrthographic, orthographicRaw as geoOrthographicRaw } from \"./src/projection/orthographic\";\nexport { default as geoStereographic, stereographicRaw as geoStereographicRaw } from \"./src/projection/stereographic\";\nexport { default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw } from \"./src/projection/transverseMercator\";\nexport { default as geoRotation } from \"./src/rotation\";\nexport { default as geoStream } from \"./src/stream\";\nexport { default as geoTransform } from \"./src/transform\";","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateResizeFactor = calculateResizeFactor;\nexports.calculateMousePosition = calculateMousePosition;\nexports.isChildOfType = isChildOfType;\nexports.createNewChildren = createNewChildren;\nexports.roundPath = roundPath;\nexports.createConnectorPath = createConnectorPath;\nexports.createTextAnchor = createTextAnchor;\nexports.computeBackdrop = computeBackdrop;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction calculateResizeFactor(actualDimension, baseDimension) {\n  if (actualDimension === 0) return 1;\n  return 1 / 100 * (100 / actualDimension * baseDimension);\n}\n\nfunction calculateMousePosition(direction, projection, props, zoom, resizeFactor) {\n  var center = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : props.center;\n  var width = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : props.width;\n  var height = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : props.height;\n  var reference = {\n    x: 0,\n    y: 1\n  };\n  var canRotate = !!projection.rotate;\n  var reverseRotation = !!canRotate ? projection.rotate().map(function (item) {\n    return -item;\n  }) : false;\n  var point = !!reverseRotation ? projection.rotate(reverseRotation)([-center[0], -center[1]]) : projection([center[0], center[1]]);\n  var returner = point ? (point[reference[direction]] - (reference[direction] === 0 ? width : height) / 2) * zoom * (1 / resizeFactor) : 0;\n  if (canRotate) projection.rotate([-reverseRotation[0], -reverseRotation[1], -reverseRotation[2]]);\n  return !!reverseRotation ? returner : -returner;\n}\n\nfunction isChildOfType(child, expectedTypes) {\n  return expectedTypes.indexOf(child.props.componentIdentifier) !== -1;\n}\n\nfunction createNewChildren(children, props) {\n  if (!children) return;\n\n  if (!children.length) {\n    return isChildOfType(children, [\"Geographies\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection\n    }) : isChildOfType(children, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection,\n      zoom: props.zoom,\n      width: props.width,\n      height: props.height,\n      groupName: props.groupName,\n      itemName: props.itemName\n    }) : children;\n  } else {\n    return children.map(function (child, i) {\n      if (!child) return;\n      return isChildOfType(child, [\"Geographies\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection\n      }) : isChildOfType(child, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection,\n        zoom: props.zoom,\n        width: props.width,\n        height: props.height,\n        groupName: props.groupName,\n        itemName: props.itemName\n      }) : child;\n    });\n  }\n}\n\nfunction roundPath(path, precision) {\n  if (!path) return;\n  var query = /[\\d\\.-][\\d\\.e-]*/g;\n  return path.replace(query, function (n) {\n    return Math.round(n * (1 / precision)) / (1 / precision);\n  });\n}\n\nfunction createConnectorPath(connectorType, endPoint, curve) {\n  var e0 = endPoint[0];\n  var e1 = endPoint[1];\n  return \"M0,0 Q \" + (curve + 1) / 2 * e0 + \",\" + (e1 - (curve + 1) / 2 * e1) + \" \" + e0 + \",\" + e1;\n}\n\nfunction createTextAnchor(dx) {\n  if (dx > 0) return \"start\";else if (dx < 0) return \"end\";else return \"middle\";\n}\n\nfunction computeBackdrop(projection, backdrop) {\n  var canRotate = projection.rotate;\n  var originalRotation = canRotate ? projection.rotate() : null;\n  var tl = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[0], backdrop.y[0]]) : projection([backdrop.x[0], backdrop.y[0]]);\n  var br = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[1], backdrop.y[1]]) : projection([backdrop.x[1], backdrop.y[1]]);\n  var x = tl ? tl[0] : 0;\n  var x0 = br ? br[0] : 0;\n  var y = tl ? tl[1] : 0;\n  var y0 = br ? br[1] : 0;\n  var width = x0 - x;\n  var height = y0 - y;\n  if (originalRotation) projection.rotate(originalRotation);\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MapGroup = function (_Component) {\n  _inherits(MapGroup, _Component);\n\n  function MapGroup() {\n    _classCallCheck(this, MapGroup);\n\n    return _possibleConstructorReturn(this, (MapGroup.__proto__ || Object.getPrototypeOf(MapGroup)).apply(this, arguments));\n  }\n\n  _createClass(MapGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          projection = _props.projection,\n          style = _props.style,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          groupName = _props.groupName,\n          itemName = _props.itemName;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-\" + groupName,\n        style: style\n      }, !children ? null : children.length === undefined ? _react2.default.cloneElement(children, {\n        projection: projection,\n        zoom: zoom,\n        width: width,\n        height: height\n      }) : children.map(function (child, i) {\n        return !child ? null : _react2.default.cloneElement(child, {\n          key: child.key || itemName + \"-\" + i,\n          projection: projection,\n          zoom: zoom,\n          width: width,\n          height: height\n        });\n      }));\n    }\n  }]);\n\n  return MapGroup;\n}(_react.Component);\n\nMapGroup.defaultProps = {\n  componentIdentifier: \"Group\",\n  groupName: \"group\",\n  itemName: \"group-item\"\n};\nexports.default = MapGroup;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\n\nvar TimelineItem = function TimelineItem(props) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var _classNames, _classNames2;\n\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        className = props.className,\n        _props$color = props.color,\n        color = _props$color === void 0 ? '' : _props$color,\n        children = props.children,\n        pending = props.pending,\n        dot = props.dot,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"color\", \"children\", \"pending\", \"dot\"]);\n\n    var prefixCls = getPrefixCls('timeline', customizePrefixCls);\n    var itemClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-pending\"), pending), _classNames), className);\n    var dotClassName = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-head\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-head-custom\"), dot), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-head-\").concat(color), true), _classNames2));\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, omit(restProps, ['position']), {\n      className: itemClassName\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-item-tail\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: dotClassName,\n      style: {\n        borderColor: /blue|red|green|gray/.test(color) ? undefined : color\n      }\n    }, dot), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-item-content\")\n    }, children));\n  });\n};\n\nTimelineItem.defaultProps = {\n  color: 'blue',\n  pending: false,\n  position: ''\n};\nexport default TimelineItem;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TimelineItem from './TimelineItem';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\n\nvar Timeline = /*#__PURE__*/function (_React$Component) {\n  _inherits(Timeline, _React$Component);\n\n  var _super = _createSuper(Timeline);\n\n  function Timeline() {\n    var _this;\n\n    _classCallCheck(this, Timeline);\n\n    _this = _super.apply(this, arguments);\n\n    _this.renderTimeline = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          _a$pending = _a.pending,\n          pending = _a$pending === void 0 ? null : _a$pending,\n          pendingDot = _a.pendingDot,\n          children = _a.children,\n          className = _a.className,\n          reverse = _a.reverse,\n          mode = _a.mode,\n          restProps = __rest(_a, [\"prefixCls\", \"pending\", \"pendingDot\", \"children\", \"className\", \"reverse\", \"mode\"]);\n\n      var prefixCls = getPrefixCls('timeline', customizePrefixCls);\n      var pendingNode = typeof pending === 'boolean' ? null : pending;\n      var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-pending\"), !!pending), _defineProperty(_classNames, \"\".concat(prefixCls, \"-reverse\"), !!reverse), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(mode), !!mode), _classNames), className);\n      var pendingItem = pending ? /*#__PURE__*/React.createElement(TimelineItem, {\n        pending: !!pending,\n        dot: pendingDot || /*#__PURE__*/React.createElement(Icon, {\n          type: \"loading\"\n        })\n      }, pendingNode) : null;\n      var timeLineItems = reverse ? [pendingItem].concat(_toConsumableArray(React.Children.toArray(children).reverse())) : [].concat(_toConsumableArray(React.Children.toArray(children)), [pendingItem]);\n\n      var getPositionCls = function getPositionCls(ele, idx) {\n        if (mode === 'alternate') {\n          if (ele.props.position === 'right') return \"\".concat(prefixCls, \"-item-right\");\n          if (ele.props.position === 'left') return \"\".concat(prefixCls, \"-item-left\");\n          return idx % 2 === 0 ? \"\".concat(prefixCls, \"-item-left\") : \"\".concat(prefixCls, \"-item-right\");\n        }\n\n        if (mode === 'left') return \"\".concat(prefixCls, \"-item-left\");\n        if (mode === 'right') return \"\".concat(prefixCls, \"-item-right\");\n        if (ele.props.position === 'right') return \"\".concat(prefixCls, \"-item-right\");\n        return '';\n      }; // Remove falsy items\n\n\n      var truthyItems = timeLineItems.filter(function (item) {\n        return !!item;\n      });\n      var itemsCount = React.Children.count(truthyItems);\n      var lastCls = \"\".concat(prefixCls, \"-item-last\");\n      var items = React.Children.map(truthyItems, function (ele, idx) {\n        var pendingClass = idx === itemsCount - 2 ? lastCls : '';\n        var readyClass = idx === itemsCount - 1 ? lastCls : '';\n        return /*#__PURE__*/React.cloneElement(ele, {\n          className: classNames([ele.props.className, !reverse && !!pending ? pendingClass : readyClass, getPositionCls(ele, idx)])\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"ul\", _extends({}, restProps, {\n        className: classString\n      }), items);\n    };\n\n    return _this;\n  }\n\n  _createClass(Timeline, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, this.renderTimeline);\n    }\n  }]);\n\n  return Timeline;\n}(React.Component);\n\nexport { Timeline as default };\nTimeline.Item = TimelineItem;\nTimeline.defaultProps = {\n  reverse: false,\n  mode: ''\n};","import Timeline from './Timeline';\nexport default Timeline;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  scale: 160,\n  xOffset: 0,\n  yOffset: 0,\n  rotation: [0, 0, 0],\n  precision: 0.1\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ComposableMap = require(\"./ComposableMap\");\n\nObject.defineProperty(exports, \"ComposableMap\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ComposableMap).default;\n  }\n});\n\nvar _ZoomableGroup = require(\"./ZoomableGroup\");\n\nObject.defineProperty(exports, \"ZoomableGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGroup).default;\n  }\n});\n\nvar _ZoomableGlobe = require(\"./ZoomableGlobe\");\n\nObject.defineProperty(exports, \"ZoomableGlobe\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGlobe).default;\n  }\n});\n\nvar _Geographies = require(\"./Geographies\");\n\nObject.defineProperty(exports, \"Geographies\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geographies).default;\n  }\n});\n\nvar _Geography = require(\"./Geography\");\n\nObject.defineProperty(exports, \"Geography\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geography).default;\n  }\n});\n\nvar _Marker = require(\"./Marker\");\n\nObject.defineProperty(exports, \"Marker\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Marker).default;\n  }\n});\n\nvar _Markers = require(\"./Markers\");\n\nObject.defineProperty(exports, \"Markers\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Markers).default;\n  }\n});\n\nvar _Line = require(\"./Line\");\n\nObject.defineProperty(exports, \"Line\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Line).default;\n  }\n});\n\nvar _Lines = require(\"./Lines\");\n\nObject.defineProperty(exports, \"Lines\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Lines).default;\n  }\n});\n\nvar _MapGroup = require(\"./MapGroup\");\n\nObject.defineProperty(exports, \"MapGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MapGroup).default;\n  }\n});\n\nvar _Annotation = require(\"./Annotation\");\n\nObject.defineProperty(exports, \"Annotation\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotation).default;\n  }\n});\n\nvar _Annotations = require(\"./Annotations\");\n\nObject.defineProperty(exports, \"Annotations\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotations).default;\n  }\n});\n\nvar _Graticule = require(\"./Graticule\");\n\nObject.defineProperty(exports, \"Graticule\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Graticule).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _projections = require(\"./projections\");\n\nvar _projections2 = _interopRequireDefault(_projections);\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComposableMap = function (_Component) {\n  _inherits(ComposableMap, _Component);\n\n  function ComposableMap() {\n    _classCallCheck(this, ComposableMap);\n\n    var _this = _possibleConstructorReturn(this, (ComposableMap.__proto__ || Object.getPrototypeOf(ComposableMap)).call(this));\n\n    _this.projection = _this.projection.bind(_this);\n    return _this;\n  }\n\n  _createClass(ComposableMap, [{\n    key: \"projection\",\n    value: function projection() {\n      var _props = this.props,\n          projection = _props.projection,\n          projectionConfig = _props.projectionConfig,\n          width = _props.width,\n          height = _props.height;\n      return typeof projection !== \"function\" ? (0, _projections2.default)(width, height, projectionConfig, projection) : projection(width, height, projectionConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          style = _props2.style,\n          className = _props2.className,\n          showCenter = _props2.showCenter,\n          children = _props2.children,\n          aspectRatio = _props2.aspectRatio,\n          viewBox = _props2.viewBox,\n          defs = _props2.defs;\n      return _react2.default.createElement(\"svg\", {\n        width: width,\n        height: height,\n        viewBox: viewBox ? viewBox : \"0 0 \" + width + \" \" + height,\n        className: \"rsm-svg \" + (className || ''),\n        style: style,\n        preserveAspectRatio: aspectRatio\n      }, defs && _react2.default.createElement(\"defs\", null, defs), _react2.default.cloneElement(this.props.children, {\n        projection: this.projection(),\n        width: width,\n        height: height\n      }), showCenter && _react2.default.createElement(\"g\", null, _react2.default.createElement(\"rect\", {\n        x: width / 2 - 0.5,\n        y: 0,\n        width: 1,\n        height: height,\n        fill: \"#e91e63\"\n      }), _react2.default.createElement(\"rect\", {\n        x: 0,\n        y: height / 2 - 0.5,\n        width: width,\n        height: 1,\n        fill: \"#e91e63\"\n      })));\n    }\n  }]);\n\n  return ComposableMap;\n}(_react.Component);\n\nComposableMap.defaultProps = {\n  width: 800,\n  height: 450,\n  projection: \"times\",\n  projectionConfig: _projectionConfig2.default,\n  aspectRatio: \"xMidYMid\",\n  viewBox: null\n};\nexports.default = ComposableMap;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (width, height, config, projectionName) {\n  var scale = config.scale || _projectionConfig2.default.scale;\n  var xOffset = config.xOffset || _projectionConfig2.default.xOffset;\n  var yOffset = config.yOffset || _projectionConfig2.default.yOffset;\n  var rotation = config.rotation || _projectionConfig2.default.rotation;\n  var precision = config.precision || _projectionConfig2.default.precision;\n  var baseProjection = projectionReference[projectionName]().scale(scale).translate([xOffset + width / 2, yOffset + height / 2]).precision(precision);\n  return projectionName === \"albersUsa\" ? baseProjection : projectionName === \"orthographic\" ? baseProjection.rotate(rotation).clipAngle(90) : baseProjection.rotate(rotation);\n};\n\nvar _d3GeoProjection = require(\"d3-geo-projection\");\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar projectionReference = {\n  mercator: _d3Geo.geoMercator,\n  miller: _d3GeoProjection.geoMiller,\n  times: _d3GeoProjection.geoTimes,\n  robinson: _d3GeoProjection.geoRobinson,\n  winkel3: _d3GeoProjection.geoWinkel3,\n  eckert4: _d3GeoProjection.geoEckert4,\n  albersUsa: _d3Geo.geoAlbersUsa,\n  orthographic: _d3Geo.geoOrthographic\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ZoomableGroup = function (_Component) {\n  _inherits(ZoomableGroup, _Component);\n\n  function ZoomableGroup(props) {\n    _classCallCheck(this, ZoomableGroup);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGroup.__proto__ || Object.getPrototypeOf(ZoomableGroup)).call(this, props));\n\n    var backdrop = (0, _utils.computeBackdrop)(props.projection, props.backdrop);\n    _this.state = {\n      mouseX: (0, _utils.calculateMousePosition)(\"x\", props.projection, props, props.zoom, 1),\n      mouseY: (0, _utils.calculateMousePosition)(\"y\", props.projection, props, props.zoom, 1),\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      resizeFactorX: 1,\n      resizeFactorY: 1,\n      backdrop: {\n        width: Math.round(backdrop.width),\n        height: Math.round(backdrop.height),\n        x: Math.round(backdrop.x),\n        y: Math.round(backdrop.y)\n      }\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    _this.handleResize = _this.handleResize.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGroup, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY;\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        mouseX: pageX - this.state.mouseXStart,\n        mouseY: pageY - this.state.mouseYStart\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY,\n          resizeFactorX = _state.resizeFactorX,\n          resizeFactorY = _state.resizeFactorY;\n      var _props = this.props,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          projection = _props.projection,\n          onMoveEnd = _props.onMoveEnd;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var newCenter = projection.invert([x, y]);\n      onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY;\n      if (this.props.disablePanning) return;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY,\n          resizeFactorX = _state2.resizeFactorX,\n          resizeFactorY = _state2.resizeFactorY;\n      var _props2 = this.props,\n          zoom = _props2.zoom,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          onMoveStart = _props2.onMoveStart;\n      this.setState({\n        isPressed: true,\n        mouseXStart: pageX - mouseX,\n        mouseYStart: pageY - mouseY\n      });\n      if (!onMoveStart) return;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var currentCenter = projection.invert([x, y]);\n      onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state3 = this.state,\n          mouseX = _state3.mouseX,\n          mouseY = _state3.mouseY,\n          resizeFactorX = _state3.resizeFactorX,\n          resizeFactorY = _state3.resizeFactorY;\n      var _props3 = this.props,\n          projection = _props3.projection,\n          center = _props3.center,\n          zoom = _props3.zoom;\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n      this.setState({\n        zoom: nextProps.zoom,\n        mouseX: centerChanged ? (0, _utils.calculateMousePosition)(\"x\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorX) : mouseX * zoomFactor,\n        mouseY: centerChanged ? (0, _utils.calculateMousePosition)(\"y\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorY) : mouseY * zoomFactor\n      });\n    }\n  }, {\n    key: \"handleResize\",\n    value: function handleResize() {\n      var _props4 = this.props,\n          width = _props4.width,\n          height = _props4.height,\n          projection = _props4.projection,\n          zoom = _props4.zoom;\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n      var xPercentageChange = 1 / resizeFactorX * this.state.resizeFactorX;\n      var yPercentageChange = 1 / resizeFactorY * this.state.resizeFactorY;\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: this.state.mouseX * xPercentageChange,\n        mouseY: this.state.mouseY * yPercentageChange\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props5 = this.props,\n          width = _props5.width,\n          height = _props5.height,\n          projection = _props5.projection,\n          zoom = _props5.zoom;\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: (0, _utils.calculateMousePosition)(\"x\", projection, this.props, zoom, resizeFactorX),\n        mouseY: (0, _utils.calculateMousePosition)(\"y\", projection, this.props, zoom, resizeFactorY)\n      });\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props6 = this.props,\n          width = _props6.width,\n          height = _props6.height,\n          zoom = _props6.zoom,\n          style = _props6.style,\n          projection = _props6.projection,\n          children = _props6.children;\n      var _state4 = this.state,\n          mouseX = _state4.mouseX,\n          mouseY = _state4.mouseY,\n          resizeFactorX = _state4.resizeFactorX,\n          resizeFactorY = _state4.resizeFactorY;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-zoomable-group\",\n        ref: function ref(zoomableGroupNode) {\n          return _this2.zoomableGroupNode = zoomableGroupNode;\n        },\n        transform: \"\\n           translate(\\n             \" + Math.round((width / 2 + resizeFactorX * mouseX) * 100) / 100 + \"\\n             \" + Math.round((height / 2 + resizeFactorY * mouseY) * 100) / 100 + \"\\n           )\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleMouseUp,\n        style: style\n      }, _react2.default.createElement(\"rect\", {\n        x: this.state.backdrop.x,\n        y: this.state.backdrop.y,\n        width: this.state.backdrop.width,\n        height: this.state.backdrop.height,\n        fill: \"transparent\",\n        style: {\n          strokeWidth: 0\n        }\n      }), (0, _utils.createNewChildren)(children, this.props));\n    }\n  }]);\n\n  return ZoomableGroup;\n}(_react.Component);\n\nZoomableGroup.defaultProps = {\n  center: [0, 0],\n  backdrop: {\n    x: [-179.9, 179.9],\n    y: [89.9, -89.9]\n  },\n  zoom: 1,\n  disablePanning: false\n};\nexports.default = ZoomableGroup;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ZoomableGlobe = function (_Component) {\n  _inherits(ZoomableGlobe, _Component);\n\n  function ZoomableGlobe(props) {\n    _classCallCheck(this, ZoomableGlobe);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGlobe.__proto__ || Object.getPrototypeOf(ZoomableGlobe)).call(this, props));\n\n    var initialRotation = props.projection.rotate();\n    _this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      rotation: [initialRotation[0] - props.center[0], initialRotation[1] - props.center[1], initialRotation[2]]\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGlobe, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      var differenceX = clientX - this.state.mouseXStart;\n      var differenceY = clientY - this.state.mouseYStart;\n      this.setState({\n        mouseX: clientX,\n        mouseY: clientY,\n        mouseXStart: clientX,\n        mouseYStart: clientY,\n        rotation: [this.state.rotation[0] + differenceX * this.props.sensitivity, this.state.rotation[1] - differenceY * this.props.sensitivity, this.state.rotation[2]]\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var newCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY,\n          clientX = _ref3.clientX,\n          clientY = _ref3.clientY;\n      if (this.props.disablePanning) return;\n      this.setState({\n        isPressed: true,\n        mouseXStart: clientX,\n        mouseYStart: clientY\n      });\n      if (!this.props.onMoveStart) return;\n      var currentCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY;\n      var _props = this.props,\n          projection = _props.projection,\n          center = _props.center,\n          zoom = _props.zoom;\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n      this.setState({\n        zoom: nextProps.zoom,\n        rotation: centerChanged ? [-nextProps.center[0], -nextProps.center[1], this.state.rotation[2]] : this.state.rotation\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          zoom = _props2.zoom;\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          width = _props3.width,\n          height = _props3.height,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          projection = _props3.projection,\n          children = _props3.children;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-zoomable-globe\",\n        ref: function ref(zoomableGlobeNode) {\n          return _this2.zoomableGlobeNode = zoomableGlobeNode;\n        },\n        transform: \"\\n           translate(\" + width / 2 + \" \" + height / 2 + \")\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleMouseUp,\n        style: style\n      }, (0, _utils.createNewChildren)(children, {\n        width: width,\n        height: height,\n        center: this.center,\n        backdrop: this.backdrop,\n        zoom: this.props.zoom,\n        disablePanning: this.props.disablePanning,\n        children: children,\n        projection: projection.rotate(this.state.rotation)\n      }));\n    }\n  }]);\n\n  return ZoomableGlobe;\n}(_react.Component);\n\nZoomableGlobe.defaultProps = {\n  center: [0, 0],\n  zoom: 1,\n  disablePanning: false,\n  sensitivity: 0.25\n};\nexports.default = ZoomableGlobe;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _topojsonClient = require(\"topojson-client\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Geographies = function (_Component) {\n  _inherits(Geographies, _Component);\n\n  function Geographies(props) {\n    _classCallCheck(this, Geographies);\n\n    var _this = _possibleConstructorReturn(this, (Geographies.__proto__ || Object.getPrototypeOf(Geographies)).call(this, props));\n\n    _this.state = {\n      geographyPaths: _this.shouldFetchGeographies(props.geography) ? [] : _this.parseGeographies(props.geography)\n    };\n    return _this;\n  }\n\n  _createClass(Geographies, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.geography !== this.props.geography) {\n        if (this.shouldFetchGeographies(nextProps.geography)) {\n          this.fetchGeographies(nextProps.geography);\n        } else {\n          this.setState({\n            geographyPaths: this.parseGeographies(nextProps.geography)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var geoPathsChanged = nextState.geographyPaths.length !== this.state.geographyPaths.length;\n      return geoPathsChanged || nextProps.disableOptimization;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.geographyUrl || this.props.geographyPaths) {\n        console.warn(\"You are using the deprecated geographyUrl or geographyPaths props. Use the new geography prop instead. Check out the new docs here: https://github.com/zcreativelabs/react-simple-maps#Geographies-component\");\n      }\n\n      if (this.shouldFetchGeographies(this.props.geography)) {\n        this.fetchGeographies(this.props.geography);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelPendingRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          style = _props.style,\n          children = _props.children;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-geographies\",\n        style: style\n      }, children(this.state.geographyPaths || [], projection));\n    }\n  }, {\n    key: \"shouldFetchGeographies\",\n    value: function shouldFetchGeographies(geography) {\n      return typeof geography === 'string';\n    }\n  }, {\n    key: \"parseGeographies\",\n    value: function parseGeographies(geography) {\n      if (Array.isArray(geography)) {\n        return geography;\n      }\n\n      if (Object.prototype.toString.call(geography) === '[object Object]') {\n        return (0, _topojsonClient.feature)(geography, geography.objects[Object.keys(geography.objects)[0]]).features;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"fetchGeographies\",\n    value: function fetchGeographies(geography) {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open(\"GET\", geography, true);\n\n      request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n          var geographyPaths = JSON.parse(request.responseText);\n\n          _this2.setState({\n            geographyPaths: _this2.parseGeographies(geographyPaths)\n          }, function () {\n            if (_this2.props.onGeographyPathsLoaded) {\n              _this2.props.onGeographyPathsLoaded(String(request.status));\n            }\n          });\n        } else {\n          if (_this2.props.onGeographyPathsLoaded) {\n            _this2.props.onGeographyPathsLoaded(String(request.status));\n          }\n        }\n      };\n\n      request.onerror = function () {\n        console.log(\"There was a connection error...\");\n      };\n\n      request.send();\n      this.cancelPendingRequest();\n      this._xhr = request;\n    }\n  }, {\n    key: \"cancelPendingRequest\",\n    value: function cancelPendingRequest() {\n      if (this._xhr) {\n        this._xhr.abort();\n\n        this._xhr = null;\n      }\n    }\n  }]);\n\n  return Geographies;\n}(_react.Component);\n\nGeographies.defaultProps = {\n  componentIdentifier: \"Geographies\",\n  disableOptimization: false,\n  geography: \"\"\n};\nexports.default = Geographies;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar pathCache = {};\n\nvar renderPath = function renderPath(cacheId, geography, projection, round, precision) {\n  if (pathCache[cacheId]) return pathCache[cacheId];\n  var pathString = cacheId ? pathCache[cacheId] ? pathCache[cacheId] : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography) : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography);\n  if (cacheId) pathCache[cacheId] = pathString;\n  return pathString;\n};\n\nvar Geography = function (_Component) {\n  _inherits(Geography, _Component);\n\n  function Geography() {\n    _classCallCheck(this, Geography);\n\n    var _this = _possibleConstructorReturn(this, (Geography.__proto__ || Object.getPrototypeOf(Geography)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Geography, [{\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      evt.persist();\n      var _props = this.props,\n          onClick = _props.onClick,\n          geography = _props.geography;\n      return onClick && onClick(geography, evt);\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props2 = this.props,\n          onMouseEnter = _props2.onMouseEnter,\n          geography = _props2.geography;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props3 = this.props,\n          onMouseMove = _props3.onMouseMove,\n          geography = _props3.geography;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(geography, evt);\n        });\n      } else if (onMouseMove) onMouseMove(geography, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseLeave = _props4.onMouseLeave,\n          geography = _props4.geography;\n      this.setState({\n        hover: false,\n        pressed: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseDown = _props5.onMouseDown,\n          geography = _props5.geography;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props6 = this.props,\n          onMouseUp = _props6.onMouseUp,\n          geography = _props6.geography;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          geography = _props7.geography;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          geography = _props8.geography;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(geography, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props9 = this.props,\n          geography = _props9.geography,\n          projection = _props9.projection,\n          round = _props9.round,\n          cacheId = _props9.cacheId,\n          precision = _props9.precision,\n          tabable = _props9.tabable,\n          style = _props9.style;\n      var _state = this.state,\n          hover = _state.hover,\n          pressed = _state.pressed;\n      var pathString = renderPath(cacheId, geography, projection, round, precision);\n      var excludeProps = [\"geography\", \"projection\", \"round\", \"cacheId\", \"precision\", \"tabable\", \"style\", \"onClick\", \"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onMouseDown\", \"onMouseUp\", \"onFocus\", \"onBlur\"];\n      var restProps = Object.keys(this.props).filter(function (key) {\n        return excludeProps.indexOf(key) === -1;\n      }).reduce(function (obj, key) {\n        obj[key] = _this2.props[key];\n        return obj;\n      }, {});\n      return _react2.default.createElement(\"path\", _extends({\n        d: pathString,\n        className: \"rsm-geography\" + (pressed ? \" rsm-geography--pressed\" : \"\") + (hover ? \" rsm-geography--hover\" : \"\"),\n        style: style[pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onClick: this.handleMouseClick,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseMove: this.handleMouseMove,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, restProps));\n    }\n  }]);\n\n  return Geography;\n}(_react.Component);\n\nGeography.defaultProps = {\n  precision: 0.1,\n  cacheId: null,\n  round: false,\n  tabable: true,\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  }\n};\nexports.default = Geography;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Marker = function (_Component) {\n  _inherits(Marker, _Component);\n\n  function Marker() {\n    _classCallCheck(this, Marker);\n\n    var _this = _possibleConstructorReturn(this, (Marker.__proto__ || Object.getPrototypeOf(Marker)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Marker, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          marker = _props.marker;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          marker = _props2.marker;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(marker, evt);\n        });\n      } else if (onMouseMove) onMouseMove(marker, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          marker = _props3.marker;\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          marker = _props4.marker;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          marker = _props5.marker;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          marker = _props6.marker,\n          projection = _props6.projection;\n      return onClick && onClick(marker, projection(marker.coordinates), evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          marker = _props7.marker;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          marker = _props8.marker;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(marker, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          projection = _props9.projection,\n          marker = _props9.marker,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          children = _props9.children,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n      var translation = projection(marker.coordinates);\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), marker.coordinates]\n        }\n      };\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-marker\" + (pressed ? \" rsm-marker--pressed\" : \"\") + (hover ? \" rsm-marker--hover\" : \"\"),\n        transform: \"translate(\\n           \" + translation[0] + \"\\n           \" + translation[1] + \"\\n         ) \" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, children);\n    }\n  }]);\n\n  return Marker;\n}(_react.Component);\n\nMarker.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  marker: {\n    coordinates: [0, 0]\n  },\n  tabable: true,\n  preserveMarkerAspect: true\n};\nexports.default = Marker;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Markers = function Markers(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nMarkers.defaultProps = {\n  componentIdentifier: \"Markers\",\n  groupName: \"markers\",\n  itemName: \"marker\"\n};\nexports.default = Markers;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Line = function (_Component) {\n  _inherits(Line, _Component);\n\n  function Line(props) {\n    _classCallCheck(this, Line);\n\n    var _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, props));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Line, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          line = _props.line;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          line = _props2.line;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(line, evt);\n        });\n      } else if (onMouseMove) onMouseMove(line, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          line = _props3.line;\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          line = _props4.line;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          line = _props5.line;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          line = _props6.line,\n          projection = _props6.projection;\n      return onClick && onClick(line, [projection(line.coordinates.start), projection(line.coordinates.end)], evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          line = _props7.line;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(line, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          line = _props8.line;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(line, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          className = _props9.className,\n          projection = _props9.projection,\n          line = _props9.line,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height,\n          buildPath = _props9.buildPath,\n          strokeWidth = _props9.strokeWidth;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n\n      var buildLineString = function buildLineString(coordinates) {\n        return {\n          type: \"Feature\",\n          geometry: {\n            type: \"LineString\",\n            coordinates: [projection.invert([width / 2, height / 2]), coordinates]\n          }\n        };\n      };\n\n      var startLineString = buildLineString(line.coordinates.start);\n      var endLineString = buildLineString(line.coordinates.end);\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && ((0, _d3Geo.geoLength)(startLineString) > radians || (0, _d3Geo.geoLength)(endLineString) > radians);\n      var start = projection(line.coordinates.start);\n      var end = projection(line.coordinates.end);\n      var path = buildPath ? buildPath(start, end, line) : \"M \" + start.join(\" \") + \" L \" + end.join(\" \");\n      return _react2.default.createElement(\"path\", {\n        className: \"rsm-line\" + (pressed ? \" rsm-line--pressed\" : \"\") + (hover ? \" rsm-line--hover\" : \"\") + \" \" + className,\n        transform: \"\" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1,\n        d: path,\n        strokeWidth: strokeWidth\n      });\n    }\n  }]);\n\n  return Line;\n}(_react.Component);\n\nLine.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  line: {\n    coordinates: {\n      start: [0, 0],\n      end: [-99.1, 19.4]\n    }\n  },\n  tabable: true,\n  preserveMarkerAspect: true,\n  strokeWidth: 1,\n  className: \"\"\n};\nexports.default = Line;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Lines = function Lines(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nLines.defaultProps = {\n  componentIdentifier: \"Lines\",\n  groupName: \"lines\",\n  itemName: \"line\"\n};\nexports.default = Lines;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Annotation = function (_Component) {\n  _inherits(Annotation, _Component);\n\n  function Annotation() {\n    _classCallCheck(this, Annotation);\n\n    return _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).apply(this, arguments));\n  }\n\n  _createClass(Annotation, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          subject = _props.subject,\n          style = _props.style,\n          hiddenStyle = _props.hiddenStyle,\n          dx = _props.dx,\n          dy = _props.dy,\n          zoom = _props.zoom,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          children = _props.children,\n          curve = _props.curve,\n          markerEnd = _props.markerEnd,\n          width = _props.width,\n          height = _props.height;\n      var connectorPath = (0, _utils.createConnectorPath)(null, [-dx / zoom, -dy / zoom], curve);\n      var translation = projection(subject);\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), subject]\n        }\n      };\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-annotation\",\n        style: isHidden ? _extends({}, style, hiddenStyle) : style,\n        transform: \"translate(\\n          \" + (translation[0] + dx / zoom) + \"\\n          \" + (translation[1] + dy / zoom) + \"\\n        )\",\n        textAnchor: (0, _utils.createTextAnchor)(dx)\n      }, children, _react2.default.createElement(\"path\", {\n        d: connectorPath,\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        fill: \"none\",\n        markerEnd: markerEnd\n      }));\n    }\n  }]);\n\n  return Annotation;\n}(_react.Component);\n\nAnnotation.defaultProps = {\n  curve: 0,\n  markerEnd: \"none\",\n  componentIdentifier: \"Annotation\",\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  zoom: 1\n};\nexports.default = Annotation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Annotations = function Annotations(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nAnnotations.defaultProps = {\n  componentIdentifier: \"Annotations\",\n  groupName: \"annotations\",\n  itemName: \"annotation\"\n};\nexports.default = Annotations;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar computeGraticule = function computeGraticule(projection, step) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().step(step)());\n};\n\nvar computeOutline = function computeOutline(projection) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().outline());\n};\n\nvar Graticule = function (_Component) {\n  _inherits(Graticule, _Component);\n\n  function Graticule() {\n    _classCallCheck(this, Graticule);\n\n    var _this = _possibleConstructorReturn(this, (Graticule.__proto__ || Object.getPrototypeOf(Graticule)).call(this));\n\n    _this.state = {\n      renderGraticule: false,\n      graticulePath: \"\",\n      outlinePath: \"\"\n    };\n    _this.renderGraticule = _this.renderGraticule.bind(_this);\n    return _this;\n  }\n\n  _createClass(Graticule, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderGraticule();\n    }\n  }, {\n    key: \"renderGraticule\",\n    value: function renderGraticule() {\n      var _props = this.props,\n          step = _props.step,\n          projection = _props.projection,\n          round = _props.round,\n          precision = _props.precision;\n      this.setState({\n        renderGraticule: true,\n        graticulePath: round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n        outlinePath: round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _props2 = this.props,\n          step = _props2.step,\n          projection = _props2.projection,\n          round = _props2.round,\n          precision = _props2.precision,\n          globe = _props2.globe;\n\n      if (nextProps.round !== round || nextProps.precision !== precision || globe) {\n        this.setState({\n          graticulePath: nextProps.round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n          outlinePath: nextProps.round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.disableOptimization;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props3 = this.props,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          outline = _props3.outline,\n          fill = _props3.fill,\n          stroke = _props3.stroke;\n      return this.state.renderGraticule && _react2.default.createElement(\"g\", {\n        className: \"rsm-graticule\"\n      }, _react2.default.createElement(\"path\", {\n        fill: fill,\n        stroke: stroke,\n        d: this.state.graticulePath,\n        style: style\n      }), outline && _react2.default.createElement(\"path\", {\n        fill: fill,\n        stroke: stroke,\n        d: this.state.outlinePath,\n        style: style\n      }));\n    }\n  }]);\n\n  return Graticule;\n}(_react.Component);\n\nGraticule.defaultProps = {\n  componentIdentifier: \"Graticule\",\n  disableOptimization: true,\n  globe: false,\n  round: true,\n  precision: 0.1,\n  step: [10, 10],\n  outline: true,\n  stroke: \"#DDDDDD\",\n  fill: \"transparent\",\n  style: {\n    pointerEvents: \"none\"\n  }\n};\nexports.default = Graticule;","export default function noop() {}","import noop from \"../noop.js\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","import { abs, epsilon } from \"./math.js\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual.js\";\nimport { epsilon } from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n\n        for (i = 0; i < n; ++i) {\n          stream.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        stream.lineEnd();\n        return;\n      } // handle degenerate cases by moving the point\n\n\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","import { asin, atan2, cos, sin, sqrt } from \"./math.js\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder.js\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau } from \"./math.js\";\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi) return point[0];else return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function (polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { epsilon, halfPi } from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index.js\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math.js\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose.js\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math.js\";\nimport { rotateRadians } from \"./rotation.js\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian.js\";\nimport { circleStream } from \"../circle.js\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) point1[2] = 1;\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","export default function (x) {\n  return x;\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import noop from \"../noop.js\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { default as geoStream } from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math.js\";\nimport { transformer } from \"../transform.js\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math.js\";\nimport { rotateRadians } from \"../rotation.js\";\nimport { transformer } from \"../transform.js\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit.js\";\nimport resample from \"./resample.js\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate angle\n  sx = 1,\n      // reflectX\n  sy = 1,\n      // reflectX\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function (_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function (_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sin = Math.sin;\nexport var tan = Math.tan;\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan } from \"./math\";\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50,\n        delta;\n    if (!r) return [0, 0];\n\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = tan(z_2),\n          lnsecz_2 = log(1 / cosz_2);\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2));\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function (_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p.scale(179.976).clipAngle(147);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, pi, sin, sinci, sqrt } from \"./math\";\nexport function aitoffRaw(x, y) {\n  var cosy = cos(y),\n      sincia = sinci(acos(cosy * cos(x /= 2)));\n  return [2 * cosy * sin(x) * sincia, sin(y) * sincia];\n} // Abort if [x, y] is not within an ellipse centered at [0, 0] with\n// semi-major axis pi and semi-minor axis pi/2.\n\naitoffRaw.invert = function (x, y) {\n  if (x * x + 4 * y * y > pi * pi + epsilon) return;\n  var x1 = x,\n      y1 = y,\n      i = 25;\n\n  do {\n    var sinx = sin(x1),\n        sinx_2 = sin(x1 / 2),\n        cosx_2 = cos(x1 / 2),\n        siny = sin(y1),\n        cosy = cos(y1),\n        sin_2y = sin(2 * y1),\n        sin2y = siny * siny,\n        cos2y = cosy * cosy,\n        sin2x_2 = sinx_2 * sinx_2,\n        c = 1 - cos2y * cosx_2 * cosx_2,\n        e = c ? acos(cosy * cosx_2) * sqrt(f = 1 / c) : f = 0,\n        f,\n        fx = 2 * e * cosy * sinx_2 - x,\n        fy = e * siny - y,\n        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),\n        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),\n        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),\n        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),\n        z = dxdy * dydx - dydy * dxdx;\n    if (!z) break;\n    var dx = (fy * dxdy - fx * dydy) / z,\n        dy = (fx * dydx - fy * dxdx) / z;\n    x1 -= dx, y1 -= dy;\n  } while ((abs(dx) > epsilon || abs(dy) > epsilon) && --i > 0);\n\n  return [x1, y1];\n};\n\nexport default function () {\n  return projection(aitoffRaw).scale(152.63);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, atan2, cos, degrees, epsilon, radians, sin, tan } from \"./math\";\nexport function armadilloRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      k = (1 + sinPhi0 - cosPhi0) / 2;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        cosLambda = cos(lambda /= 2);\n    return [(1 + cosPhi) * sin(lambda), (sPhi0 * phi > -atan2(cosLambda, tanPhi0) - 1e-3 ? 0 : -sPhi0 * 10) + k + sin(phi) * cosPhi0 - (1 + cosPhi) * sinPhi0 * cosLambda // TODO D3 core should allow null or [NaN, NaN] to be returned.\n    ];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda = 0,\n        phi = 0,\n        i = 50;\n\n    do {\n      var cosLambda = cos(lambda),\n          sinLambda = sin(lambda),\n          cosPhi = cos(phi),\n          sinPhi = sin(phi),\n          A = 1 + cosPhi,\n          fx = A * sinLambda - x,\n          fy = k + sinPhi * cosPhi0 - A * sinPhi0 * cosLambda - y,\n          dxdLambda = A * cosLambda / 2,\n          dxdPhi = -sinLambda * sinPhi,\n          dydLambda = sinPhi0 * A * sinLambda / 2,\n          dydPhi = cosPhi0 * cosPhi + sinPhi0 * cosLambda * sinPhi,\n          denominator = dxdPhi * dydLambda - dydPhi * dxdLambda,\n          dLambda = (fy * dxdPhi - fx * dydPhi) / denominator / 2,\n          dPhi = (fx * dydLambda - fy * dxdLambda) / denominator;\n      lambda -= dLambda, phi -= dPhi;\n    } while ((abs(dLambda) > epsilon || abs(dPhi) > epsilon) && --i > 0);\n\n    return sPhi0 * phi > -atan2(cos(lambda), tanPhi0) - 1e-3 ? [lambda * 2, phi] : null;\n  };\n\n  return forward;\n}\nexport default function () {\n  var phi0 = 20 * radians,\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      m = projectionMutator(armadilloRaw),\n      p = m(phi0),\n      stream_ = p.stream;\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    tanPhi0 = tan((sPhi0 = (phi0 = _ * radians) >= 0 ? 1 : -1) * phi0);\n    return m(phi0);\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var lambda = sPhi0 * -180; sPhi0 * lambda < 180; lambda += sPhi0 * 90) {\n        sphereStream.point(lambda, sPhi0 * 90);\n      }\n\n      while (sPhi0 * (lambda -= phi0) >= -180) {\n        // TODO precision?\n        sphereStream.point(lambda, sPhi0 * -atan2(cos(lambda * radians / 2), tanPhi0) * degrees);\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(218.695).center([0, 28.0974]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, arcosh, arsinh, asin, atan2, cos, cosh, sign, sin, sinh, sqrt, tan } from \"./math\";\nexport function augustRaw(lambda, phi) {\n  var tanPhi = tan(phi / 2),\n      k = sqrt(1 - tanPhi * tanPhi),\n      c = 1 + k * cos(lambda /= 2),\n      x = sin(lambda) * k / c,\n      y = tanPhi / c,\n      x2 = x * x,\n      y2 = y * y;\n  return [4 / 3 * x * (3 + x2 - 3 * y2), 4 / 3 * y * (3 + 3 * x2 - y2)];\n}\n\naugustRaw.invert = function (x, y) {\n  x *= 3 / 8, y *= 3 / 8;\n  if (!x && abs(y) > 1) return null;\n  var x2 = x * x,\n      y2 = y * y,\n      s = 1 + x2 + y2,\n      sin3Eta = sqrt((s - sqrt(s * s - 4 * y * y)) / 2),\n      eta = asin(sin3Eta) / 3,\n      xi = sin3Eta ? arcosh(abs(y / sin3Eta)) / 3 : arsinh(abs(x)) / 3,\n      cosEta = cos(eta),\n      coshXi = cosh(xi),\n      d = coshXi * coshXi - cosEta * cosEta;\n  return [sign(x) * 2 * atan2(sinh(xi) * cosEta, 0.25 - d), sign(y) * 2 * atan2(coshXi * sin(eta), 0.25 + d)];\n};\n\nexport default function () {\n  return projection(augustRaw).scale(66.1603);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, atan, cos, epsilon2, exp, halfPi, log, quarterPi, sign, sin, sqrt, sqrt2, tan } from \"./math\";\nvar sqrt8 = sqrt(8),\n    phi0 = log(1 + sqrt2);\nexport function bakerRaw(lambda, phi) {\n  var phi0 = abs(phi);\n  return phi0 < quarterPi ? [lambda, log(tan(quarterPi + phi / 2))] : [lambda * cos(phi0) * (2 * sqrt2 - 1 / sin(phi0)), sign(phi) * (2 * sqrt2 * (phi0 - quarterPi) - log(tan(phi0 / 2)))];\n}\n\nbakerRaw.invert = function (x, y) {\n  if ((y0 = abs(y)) < phi0) return [x, 2 * atan(exp(y)) - halfPi];\n  var phi = quarterPi,\n      i = 25,\n      delta,\n      y0;\n\n  do {\n    var cosPhi_2 = cos(phi / 2),\n        tanPhi_2 = tan(phi / 2);\n    phi -= delta = (sqrt8 * (phi - quarterPi) - log(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));\n  } while (abs(delta) > epsilon2 && --i > 0);\n\n  return [x / (cos(phi) * (sqrt8 - 1 / sin(phi))), sign(y) * phi];\n};\n\nexport default function () {\n  return projection(bakerRaw).scale(112.314);\n}","import { asin, atan2, cos, sin, sqrt } from \"../math.js\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { acos, sin } from \"../math.js\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { geoProjectionMutator as projectionMutator, geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { abs, acos, asin, atan, atan2, cos, degrees, halfPi, pi, radians, round, sin, sqrt, tan } from \"./math\";\nexport function berghausRaw(lobes) {\n  var k = 2 * pi / lobes;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi);\n\n    if (abs(lambda) > halfPi) {\n      // back hemisphere\n      var theta = atan2(p[1], p[0]),\n          r = sqrt(p[0] * p[0] + p[1] * p[1]),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          α = atan2(sin(theta -= theta0), 2 - cos(theta)); // angle relative to lobe end\n\n      theta = theta0 + asin(pi / r * sin(α)) - α;\n      p[0] = r * cos(theta);\n      p[1] = r * sin(theta);\n    }\n\n    return p;\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y);\n\n    if (r > halfPi) {\n      var theta = atan2(y, x),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          s = theta > theta0 ? -1 : 1,\n          A = r * cos(theta0 - theta),\n          cotα = 1 / tan(s * acos((A - pi) / sqrt(pi * (pi - 2 * A) + r * r)));\n      theta = theta0 + 2 * atan((cotα + s * sqrt(cotα * cotα - 3)) / 3);\n      x = r * cos(theta), y = r * sin(theta);\n    }\n\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\nexport default function () {\n  var lobes = 5,\n      m = projectionMutator(berghausRaw),\n      p = m(lobes),\n      projectionStream = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.lobes = function (_) {\n    return arguments.length ? m(lobes = +_) : lobes;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = projectionStream(stream),\n        sphereStream = (p.rotate([0, 0]), projectionStream(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var i = 0, delta = 360 / lobes, delta0 = 2 * pi / lobes, phi = 90 - 180 / lobes, phi0 = halfPi; i < lobes; ++i, phi -= delta, phi0 -= delta0) {\n        sphereStream.point(atan2(sr * cos(phi0), cr) * degrees, asin(sr * sin(phi0)) * degrees);\n\n        if (phi < -90) {\n          sphereStream.point(-90, -180 - phi - epsilon);\n          sphereStream.point(-90, -180 - phi + epsilon);\n        } else {\n          sphereStream.point(90, phi + epsilon);\n          sphereStream.point(90, phi - epsilon);\n        }\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(87.8076).center([0, 17.1875]).clipAngle(180 - 1e-3);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2 } from \"./math\";\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi),\n      i = 30,\n      delta;\n\n  do {\n    phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return phi / 2;\n}\nexport function mollweideBromleyRaw(cx, cy, cp) {\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function (x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\nexport default function () {\n  return projection(mollweideRaw).scale(169.529);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { mollweideBromleyTheta } from \"./mollweide\";\nimport { abs, cos, epsilon, pi, quarterPi, sin, sqrt2 } from \"./math\";\nvar k = 2.00276,\n    w = 1.11072;\nexport function boggsRaw(lambda, phi) {\n  var theta = mollweideBromleyTheta(pi, phi);\n  return [k * lambda / (1 / cos(phi) + w / cos(theta)), (phi + sqrt2 * sin(theta)) / k];\n}\n\nboggsRaw.invert = function (x, y) {\n  var ky = k * y,\n      theta = y < 0 ? -quarterPi : quarterPi,\n      i = 25,\n      delta,\n      phi;\n\n  do {\n    phi = ky - sqrt2 * sin(theta);\n    theta -= delta = (sin(2 * theta) + 2 * theta - pi * sin(phi)) / (2 * cos(2 * theta) + 2 + pi * cos(phi) * sqrt2 * cos(theta));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  phi = ky - sqrt2 * sin(theta);\n  return [x * (1 / cos(phi) + w / cos(theta)) / k, phi];\n};\n\nexport default function () {\n  return projection(boggsRaw).scale(160.857);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { degrees, radians } from \"./math\";\nexport default function (projectAt) {\n  var phi0 = 0,\n      m = projectionMutator(projectAt),\n      p = m(phi0);\n\n  p.parallel = function (_) {\n    return arguments.length ? m(phi0 = _ * radians) : phi0 * degrees;\n  };\n\n  return p;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { cos } from \"./math\";\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function (x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function () {\n  return projection(sinusoidalRaw).scale(152.63);\n}","import parallel1 from \"./parallel1\";\nimport { atan2, cos, sin, sqrt, tan } from \"./math\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nexport function bonneRaw(phi0) {\n  if (!phi0) return sinusoidalRaw;\n  var cotPhi0 = 1 / tan(phi0);\n\n  function forward(lambda, phi) {\n    var rho = cotPhi0 + phi0 - phi,\n        e = rho ? lambda * cos(phi) / rho : rho;\n    return [rho * sin(e), cotPhi0 - rho * cos(e)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + (y = cotPhi0 - y) * y),\n        phi = cotPhi0 + phi0 - rho;\n    return [rho / cos(phi) * atan2(x, y), phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(bonneRaw).scale(123.082).center([0, 26.1441]).parallel(45);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { atan2, cos, halfPi, sin, sqrt } from \"./math\";\nexport function bottomleyRaw(sinPsi) {\n  function forward(lambda, phi) {\n    var rho = halfPi - phi,\n        eta = rho ? lambda * sinPsi * sin(rho) / rho : rho;\n    return [rho * sin(eta) / sinPsi, halfPi - rho * cos(eta)];\n  }\n\n  forward.invert = function (x, y) {\n    var x1 = x * sinPsi,\n        y1 = halfPi - y,\n        rho = sqrt(x1 * x1 + y1 * y1),\n        eta = atan2(x1, y1);\n    return [(rho ? rho / sin(rho) : 1) * eta / sinPsi, halfPi - rho];\n  };\n\n  return forward;\n}\nexport default function () {\n  var sinPsi = 0.5,\n      m = projectionMutator(bottomleyRaw),\n      p = m(sinPsi);\n\n  p.fraction = function (_) {\n    return arguments.length ? m(sinPsi = +_) : sinPsi;\n  };\n\n  return p.scale(158.837);\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi } from \"./math\";\nimport { mollweideBromleyRaw } from \"./mollweide\";\nexport var bromleyRaw = mollweideBromleyRaw(1, 4 / pi, pi);\nexport default function () {\n  return projection(bromleyRaw).scale(152.63);\n}","import { geoCentroid as centroid, geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon, floor, pi, radians, sin, sqrt } from \"./math\"; // Azimuthal distance.\n\nfunction distance(dPhi, c1, s1, c2, s2, dLambda) {\n  var cosdLambda = cos(dLambda),\n      r;\n\n  if (abs(dPhi) > 1 || abs(dLambda) > 1) {\n    r = acos(s1 * s2 + c1 * c2 * cosdLambda);\n  } else {\n    var sindPhi = sin(dPhi / 2),\n        sindLambda = sin(dLambda / 2);\n    r = 2 * asin(sqrt(sindPhi * sindPhi + c1 * c2 * sindLambda * sindLambda));\n  }\n\n  return abs(r) > epsilon ? [r, atan2(c2 * sin(dLambda), c1 * s2 - s1 * c2 * cosdLambda)] : [0, 0];\n} // Angle opposite a, and contained between sides of lengths b and c.\n\n\nfunction angle(b, c, a) {\n  return acos((b * b + c * c - a * a) / (2 * b * c));\n} // Normalize longitude.\n\n\nfunction longitude(lambda) {\n  return lambda - 2 * pi * floor((lambda + pi) / (2 * pi));\n}\n\nexport function chamberlinRaw(p0, p1, p2) {\n  var points = [[p0[0], p0[1], sin(p0[1]), cos(p0[1])], [p1[0], p1[1], sin(p1[1]), cos(p1[1])], [p2[0], p2[1], sin(p2[1]), cos(p2[1])]];\n\n  for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {\n    b = points[i];\n    a.v = distance(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);\n    a.point = [0, 0];\n  }\n\n  var beta0 = angle(points[0].v[0], points[2].v[0], points[1].v[0]),\n      beta1 = angle(points[0].v[0], points[1].v[0], points[2].v[0]),\n      beta2 = pi - beta0;\n  points[2].point[1] = 0;\n  points[0].point[0] = -(points[1].point[0] = points[0].v[0] / 2);\n  var mean = [points[2].point[0] = points[0].point[0] + points[2].v[0] * cos(beta0), 2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * sin(beta0))];\n\n  function forward(lambda, phi) {\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        v = new Array(3),\n        i; // Compute distance and azimuth from control points.\n\n    for (i = 0; i < 3; ++i) {\n      var p = points[i];\n      v[i] = distance(phi - p[1], p[3], p[2], cosPhi, sinPhi, lambda - p[0]);\n      if (!v[i][0]) return p.point;\n      v[i][1] = longitude(v[i][1] - p.v[1]);\n    } // Arithmetic mean of interception points.\n\n\n    var point = mean.slice();\n\n    for (i = 0; i < 3; ++i) {\n      var j = i == 2 ? 0 : i + 1;\n      var a = angle(points[i].v[0], v[i][0], v[j][0]);\n      if (v[i][1] < 0) a = -a;\n\n      if (!i) {\n        point[0] += v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else if (i == 1) {\n        a = beta1 - a;\n        point[0] -= v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else {\n        a = beta2 - a;\n        point[0] += v[i][0] * cos(a);\n        point[1] += v[i][0] * sin(a);\n      }\n    }\n\n    point[0] /= 3, point[1] /= 3;\n    return point;\n  }\n\n  return forward;\n}\n\nfunction pointRadians(p) {\n  return p[0] *= radians, p[1] *= radians, p;\n}\n\nexport function chamberlinAfrica() {\n  return chamberlin([0, 22], [45, 22], [22.5, -22]).scale(380).center([22.5, 2]);\n}\nexport default function chamberlin(p0, p1, p2) {\n  // TODO order matters!\n  var c = centroid({\n    type: \"MultiPoint\",\n    coordinates: [p0, p1, p2]\n  }),\n      R = [-c[0], -c[1]],\n      r = rotation(R),\n      p = projection(chamberlinRaw(pointRadians(r(p0)), pointRadians(r(p1)), pointRadians(r(p2)))).rotate(R),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p.clipAngle(90);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, pi, sin, sqrt, sqrtPi } from \"./math\";\nexport function collignonRaw(lambda, phi) {\n  var alpha = sqrt(1 - sin(phi));\n  return [2 / sqrtPi * lambda * alpha, sqrtPi * (1 - alpha)];\n}\n\ncollignonRaw.invert = function (x, y) {\n  var lambda = (lambda = y / sqrtPi - 1) * lambda;\n  return [lambda > 0 ? x * sqrt(pi / lambda) / 2 : 0, asin(1 - lambda)];\n};\n\nexport default function () {\n  return projection(collignonRaw).scale(95.6464).center([0, 30]);\n}","import { asin, atan2, cos, sin, sqrt, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function craigRaw(phi0) {\n  var tanPhi0 = tan(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda, (lambda ? lambda / sin(lambda) : 1) * (sin(phi) * cos(lambda) - tanPhi0 * cos(phi))];\n  }\n\n  forward.invert = tanPhi0 ? function (x, y) {\n    if (x) y *= sin(x) / x;\n    var cosλ = cos(x);\n    return [x, 2 * atan2(sqrt(cosλ * cosλ + tanPhi0 * tanPhi0 - y * y) - cosλ, tanPhi0 - y)];\n  } : function (x, y) {\n    return [x, asin(x ? y * tan(x) / x : y)];\n  };\n  return forward;\n}\nexport default function () {\n  return parallel1(craigRaw).scale(249.828).clipAngle(90);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt, sqrtPi } from \"./math\";\nvar sqrt3 = sqrt(3);\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function (x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function () {\n  return projection(crasterRaw).scale(156.19);\n}","import { asin, cos, sin } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalEqualAreaRaw).parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n  .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}","import { atan, cos, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalStereographicRaw).scale(124.75);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, pi, sqrt } from \"./math\";\nexport function eckert1Raw(lambda, phi) {\n  var alpha = sqrt(8 / (3 * pi));\n  return [alpha * lambda * (1 - abs(phi) / pi), alpha * phi];\n}\n\neckert1Raw.invert = function (x, y) {\n  var alpha = sqrt(8 / (3 * pi)),\n      phi = y / alpha;\n  return [x / (alpha * (1 - abs(phi) / pi)), phi];\n};\n\nexport default function () {\n  return projection(eckert1Raw).scale(165.664);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, pi, sign, sin, sqrt } from \"./math\";\nexport function eckert2Raw(lambda, phi) {\n  var alpha = sqrt(4 - 3 * sin(abs(phi)));\n  return [2 / sqrt(6 * pi) * lambda * alpha, sign(phi) * sqrt(2 * pi / 3) * (2 - alpha)];\n}\n\neckert2Raw.invert = function (x, y) {\n  var alpha = 2 - abs(y) / sqrt(2 * pi / 3);\n  return [x * sqrt(6 * pi) / (2 * alpha), sign(y) * asin((4 - alpha * alpha) / 3)];\n};\n\nexport default function () {\n  return projection(eckert2Raw).scale(165.664);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))), 4 / k * phi];\n}\n\neckert3Raw.invert = function (x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))), y * k / 2];\n};\n\nexport default function () {\n  return projection(eckert3Raw).scale(180.739);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n\n  return [2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)), 2 * sqrt(pi / (4 + pi)) * sin(phi)];\n}\n\neckert4Raw.invert = function (x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [x / (2 / sqrt(pi * (4 + pi)) * (1 + c)), asin((k + A * (c + 2)) / (2 + halfPi))];\n};\n\nexport default function () {\n  return projection(eckert4Raw).scale(180.739);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { cos, pi, sqrt } from \"./math\";\nexport function eckert5Raw(lambda, phi) {\n  return [lambda * (1 + cos(phi)) / sqrt(2 + pi), 2 * phi / sqrt(2 + pi)];\n}\n\neckert5Raw.invert = function (x, y) {\n  var k = sqrt(2 + pi),\n      phi = y * k / 2;\n  return [k * x / (1 + cos(phi)), phi];\n};\n\nexport default function () {\n  return projection(eckert5Raw).scale(173.044);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n\n  k = sqrt(2 + pi);\n  return [lambda * (1 + cos(phi)) / k, 2 * phi / k];\n}\n\neckert6Raw.invert = function (x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [x * 2 * k / (1 + cos(y *= k)), asin((y + sin(y)) / j)];\n};\n\nexport default function () {\n  return projection(eckert6Raw).scale(173.044);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { augustRaw } from \"./august\";\nimport { abs, atan, cos, epsilon, halfPi, log, max, min, sin, sqrt, sqrt1_2, sqrt2 } from \"./math\";\nvar eisenlohrK = 3 + 2 * sqrt2;\nexport function eisenlohrRaw(lambda, phi) {\n  var s0 = sin(lambda /= 2),\n      c0 = cos(lambda),\n      k = sqrt(cos(phi)),\n      c1 = cos(phi /= 2),\n      t = sin(phi) / (c1 + sqrt2 * c0 * k),\n      c = sqrt(2 / (1 + t * t)),\n      v = sqrt((sqrt2 * c1 + (c0 + s0) * k) / (sqrt2 * c1 + (c0 - s0) * k));\n  return [eisenlohrK * (c * (v - 1 / v) - 2 * log(v)), eisenlohrK * (c * t * (v + 1 / v) - 2 * atan(t))];\n}\n\neisenlohrRaw.invert = function (x, y) {\n  if (!(p = augustRaw.invert(x / 1.2, y * 1.065))) return null;\n  var lambda = p[0],\n      phi = p[1],\n      i = 20,\n      p;\n  x /= eisenlohrK, y /= eisenlohrK;\n\n  do {\n    var _0 = lambda / 2,\n        _1 = phi / 2,\n        s0 = sin(_0),\n        c0 = cos(_0),\n        s1 = sin(_1),\n        c1 = cos(_1),\n        cos1 = cos(phi),\n        k = sqrt(cos1),\n        t = s1 / (c1 + sqrt2 * c0 * k),\n        t2 = t * t,\n        c = sqrt(2 / (1 + t2)),\n        v0 = sqrt2 * c1 + (c0 + s0) * k,\n        v1 = sqrt2 * c1 + (c0 - s0) * k,\n        v2 = v0 / v1,\n        v = sqrt(v2),\n        vm1v = v - 1 / v,\n        vp1v = v + 1 / v,\n        fx = c * vm1v - 2 * log(v) - x,\n        fy = c * t * vp1v - 2 * atan(t) - y,\n        deltatDeltaLambda = s1 && sqrt1_2 * k * s0 * t2 / s1,\n        deltatDeltaPhi = (sqrt2 * c0 * c1 + k) / (2 * (c1 + sqrt2 * c0 * k) * (c1 + sqrt2 * c0 * k) * k),\n        deltacDeltat = -0.5 * t * c * c * c,\n        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,\n        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,\n        A = (A = 2 * c1 + sqrt2 * k * (c0 - s0)) * A * v,\n        deltavDeltaLambda = (sqrt2 * c0 * c1 * k + cos1) / A,\n        deltavDeltaPhi = -(sqrt2 * s0 * s1) / (k * A),\n        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),\n        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),\n        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),\n        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n\n    if (!denominator) break;\n    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda;\n    phi = max(-halfPi, min(halfPi, phi - deltaPhi));\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return abs(abs(phi) - halfPi) < epsilon ? [0, phi] : i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(eisenlohrRaw).scale(62.5271);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, radians, sqrt, tan } from \"./math\";\nvar faheyK = cos(35 * radians);\nexport function faheyRaw(lambda, phi) {\n  var t = tan(phi / 2);\n  return [lambda * faheyK * sqrt(1 - t * t), (1 + faheyK) * t];\n}\n\nfaheyRaw.invert = function (x, y) {\n  var t = y / (1 + faheyK);\n  return [x && x / (faheyK * sqrt(1 - t * t)), 2 * atan(t)];\n};\n\nexport default function () {\n  return projection(faheyRaw).scale(137.152);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, sqrtPi, tan } from \"./math\";\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2,\n      cosk = cos(k);\n  return [2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function (x, y) {\n  var k = atan(y / sqrtPi),\n      cosk = cos(k),\n      phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function () {\n  return projection(foucautRaw).scale(135.264);\n}","import { asin, cos, epsilon, sin } from \"../math.js\";\nimport { azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import projection from \"./index.js\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { geoEquirectangular, geoOrthographic } from \"d3-geo\";\nimport { asin, atan, degrees, radians, sin, tan } from \"./math\";\n\nfunction gilbertForward(point) {\n  return [point[0] / 2, asin(tan(point[1] / 2 * radians)) * degrees];\n}\n\nfunction gilbertInvert(point) {\n  return [point[0] * 2, 2 * atan(sin(point[1] * radians)) * degrees];\n}\n\nexport default function (projectionType) {\n  if (projectionType == null) projectionType = geoOrthographic;\n  var projection = projectionType(),\n      equirectangular = geoEquirectangular().scale(degrees).precision(0).clipAngle(null).translate([0, 0]); // antimeridian cutting\n\n  function gilbert(point) {\n    return projection(gilbertForward(point));\n  }\n\n  if (projection.invert) gilbert.invert = function (point) {\n    return gilbertInvert(projection.invert(point));\n  };\n\n  gilbert.stream = function (stream) {\n    var s1 = projection.stream(stream),\n        s0 = equirectangular.stream({\n      point: function point(lambda, phi) {\n        s1.point(lambda / 2, asin(tan(-phi / 2 * radians)) * degrees);\n      },\n      lineStart: function lineStart() {\n        s1.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        s1.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        s1.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        s1.polygonEnd();\n      }\n    });\n    s0.sphere = s1.sphere;\n    return s0;\n  };\n\n  function property(name) {\n    gilbert[name] = function (_) {\n      return arguments.length ? (projection[name](_), gilbert) : projection[name]();\n    };\n  }\n\n  gilbert.rotate = function (_) {\n    return arguments.length ? (equirectangular.rotate(_), gilbert) : equirectangular.rotate();\n  };\n\n  gilbert.center = function (_) {\n    return arguments.length ? (projection.center(gilbertForward(_)), gilbert) : gilbertInvert(projection.center());\n  };\n\n  property(\"clipAngle\");\n  property(\"clipExtent\");\n  property(\"scale\");\n  property(\"translate\");\n  property(\"precision\");\n  return gilbert.scale(249.5);\n}","import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, epsilon2, halfPi, pi, radians, round, sin, sqrt } from \"./math\";\nexport function gingeryRaw(rho, n) {\n  var k = 2 * pi / n,\n      rho2 = rho * rho;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi),\n        x = p[0],\n        y = p[1],\n        r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          alpha = theta - theta0,\n          rhoCosAlpha = rho * cos(alpha),\n          k_ = (rho * sin(alpha) - alpha * sin(rhoCosAlpha)) / (halfPi - rhoCosAlpha),\n          s_ = gingeryLength(alpha, k_),\n          e = (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      x = r;\n      var i = 50,\n          delta;\n\n      do {\n        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);\n      } while (abs(delta) > epsilon && --i > 0);\n\n      y = alpha * sin(x);\n      if (x < halfPi) y -= k_ * (x - halfPi);\n      var s = sin(theta0),\n          c = cos(theta0);\n      p[0] = x * c - y * s;\n      p[1] = x * s + y * c;\n    }\n\n    return p;\n  }\n\n  forward.invert = function (x, y) {\n    var r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          dTheta = theta - theta0;\n      x = r * cos(dTheta);\n      y = r * sin(dTheta);\n      var x_halfPi = x - halfPi,\n          sinx = sin(x),\n          alpha = y / sinx,\n          delta = x < halfPi ? Infinity : 0,\n          i = 10;\n\n      while (true) {\n        var rhosinAlpha = rho * sin(alpha),\n            rhoCosAlpha = rho * cos(alpha),\n            sinRhoCosAlpha = sin(rhoCosAlpha),\n            halfPi_RhoCosAlpha = halfPi - rhoCosAlpha,\n            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,\n            s_ = gingeryLength(alpha, k_);\n        if (abs(delta) < epsilon2 || ! --i) break;\n        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (sinx - x_halfPi * 2 * (halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * cos(rhoCosAlpha) - sinRhoCosAlpha) - rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));\n      }\n\n      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      theta = theta0 + alpha;\n      x = r * cos(theta);\n      y = r * sin(theta);\n    }\n\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction gingeryLength(alpha, k) {\n  return function (x) {\n    var y_ = alpha * cos(x);\n    if (x < halfPi) y_ -= k;\n    return sqrt(1 + y_ * y_);\n  };\n} // Numerical integration: trapezoidal rule.\n\n\nfunction gingeryIntegrate(f, a, b) {\n  var n = 50,\n      h = (b - a) / n,\n      s = f(a) + f(b);\n\n  for (var i = 1, x = a; i < n; ++i) {\n    s += 2 * f(x += h);\n  }\n\n  return s * 0.5 * h;\n}\n\nexport default function () {\n  var n = 6,\n      rho = 30 * radians,\n      cRho = cos(rho),\n      sRho = sin(rho),\n      m = projectionMutator(gingeryRaw),\n      p = m(rho, n),\n      stream_ = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.radius = function (_) {\n    if (!arguments.length) return rho * degrees;\n    cRho = cos(rho = _ * radians);\n    sRho = sin(rho);\n    return m(rho, n);\n  };\n\n  p.lobes = function (_) {\n    if (!arguments.length) return n;\n    return m(rho, n = +_);\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var i = 0, delta = 2 * pi / n, phi = 0; i < n; ++i, phi -= delta) {\n        sphereStream.point(atan2(sr * cos(phi), cr) * degrees, asin(sr * sin(phi)) * degrees);\n        sphereStream.point(atan2(sRho * cos(phi - delta / 2), cRho) * degrees, asin(sRho * sin(phi - delta / 2)) * degrees);\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.rotate([90, -40]).scale(91.7095).clipAngle(180 - 1e-3);\n}","import { abs, asin, cos, epsilon, pi, sin, sqrt } from \"./math\";\nexport default function (a, b, c, d, e, f, g, h) {\n  if (arguments.length < 8) h = 0;\n\n  function forward(lambda, phi) {\n    if (!phi) return [a * lambda / pi, 0];\n    var phi2 = phi * phi,\n        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n        m = (xB * xB + yB * yB) / (2 * yB),\n        alpha = lambda * asin(xB / m) / pi;\n    return [m * sin(alpha), phi * (1 + phi2 * h) + m * (1 - cos(alpha))];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda = pi * x / a,\n        phi = y,\n        deltaLambda,\n        deltaPhi,\n        i = 50;\n\n    do {\n      var phi2 = phi * phi,\n          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n          p = xB * xB + yB * yB,\n          q = 2 * yB,\n          m = p / q,\n          m2 = m * m,\n          dAlphadLambda = asin(xB / m) / pi,\n          alpha = lambda * dAlphadLambda,\n          xB2 = xB * xB,\n          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,\n          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),\n          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),\n          dqdPhi = 2 * (dyBdPhi - 1),\n          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),\n          cosAlpha = cos(alpha),\n          sinAlpha = sin(alpha),\n          mcosAlpha = m * cosAlpha,\n          msinAlpha = m * sinAlpha,\n          dAlphadPhi = lambda / pi * (1 / sqrt(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi) / m2,\n          fx = msinAlpha - x,\n          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,\n          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,\n          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,\n          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),\n          deltayDeltaLambda = msinAlpha * dAlphadLambda,\n          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n      if (!denominator) break;\n      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;\n      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n    return [lambda, phi];\n  };\n\n  return forward;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg4Raw = ginzburgPolyconicRaw(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);\nexport default function () {\n  return projection(ginzburg4Raw).scale(149.995);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg5Raw = ginzburgPolyconicRaw(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435, 0.082742);\nexport default function () {\n  return projection(ginzburg5Raw).scale(153.93);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nimport { pi } from \"./math\";\nexport var ginzburg6Raw = ginzburgPolyconicRaw(5 / 6 * pi, -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);\nexport default function () {\n  return projection(ginzburg6Raw).scale(130.945);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\";\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2), phi * (1 + phi2 / 12)];\n}\n\nginzburg8Raw.invert = function (x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50,\n      delta;\n\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  i = 50;\n  x /= 1 - 0.162388 * phi2;\n\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [lambda, phi];\n};\n\nexport default function () {\n  return projection(ginzburg8Raw).scale(131.747);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg9Raw = ginzburgPolyconicRaw(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965, 0.031762);\nexport default function () {\n  return projection(ginzburg9Raw).scale(131.087);\n}","import { halfPi, pi } from \"./math\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectSquare(lambda, phi) {\n    var s = lambda > 0 ? -0.5 : 0.5,\n        point = project(lambda + s * pi, phi);\n    point[0] -= s * dx;\n    return point;\n  }\n\n  if (project.invert) projectSquare.invert = function (x, y) {\n    var s = x > 0 ? -0.5 : 0.5,\n        location = project.invert(x + s * dx, y),\n        lambda = location[0] - s * pi;\n    if (lambda < -pi) lambda += 2 * pi;else if (lambda > pi) lambda -= 2 * pi;\n    location[0] = lambda;\n    return location;\n  };\n  return projectSquare;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan2, cos, sign, epsilon, epsilon2, halfPi, pi, sin, sqrt } from \"./math\";\nimport squareRaw from \"./square\";\nexport function gringortenRaw(lambda, phi) {\n  var sLambda = sign(lambda),\n      sPhi = sign(phi),\n      cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(sPhi * phi);\n  lambda = abs(atan2(y, z));\n  phi = asin(x);\n  if (abs(lambda - halfPi) > epsilon) lambda %= halfPi;\n  var point = gringortenHexadecant(lambda > pi / 4 ? halfPi - lambda : lambda, phi);\n  if (lambda > pi / 4) z = point[0], point[0] = -point[1], point[1] = -z;\n  return point[0] *= sLambda, point[1] *= -sPhi, point;\n}\n\ngringortenRaw.invert = function (x, y) {\n  var sx = sign(x),\n      sy = sign(y),\n      x0 = -sx * x,\n      y0 = -sy * y,\n      t = y0 / x0 < 1,\n      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),\n      lambda = p[0],\n      phi = p[1],\n      cosPhi = cos(phi);\n  if (t) lambda = -halfPi - lambda;\n  return [sx * (atan2(sin(lambda) * cosPhi, -sin(phi)) + pi), sy * asin(cos(lambda) * cosPhi)];\n};\n\nfunction gringortenHexadecant(lambda, phi) {\n  if (phi === halfPi) return [0, 0];\n  var sinPhi = sin(phi),\n      r = sinPhi * sinPhi,\n      r2 = r * r,\n      j = 1 + r2,\n      k = 1 + 3 * r2,\n      q = 1 - r2,\n      z = asin(1 / sqrt(j)),\n      v = q + r * j * z,\n      p2 = (1 - sinPhi) / v,\n      p = sqrt(p2),\n      a2 = p2 * j,\n      a = sqrt(a2),\n      h = p * q,\n      x,\n      i;\n  if (lambda === 0) return [0, -(h + r * a)];\n  var cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * k) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,\n      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * dra2dPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      lambda1 = 4 * lambda / pi,\n      delta; // Slower but accurate bisection method.\n\n  if (lambda > 0.222 * pi || phi < pi / 4 && lambda > 0.175 * pi) {\n    x = (h + r * sqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\n    if (lambda > pi / 4) return [x, x];\n    var x1 = x,\n        x0 = 0.5 * x;\n    x = 0.5 * (x0 + x1), i = 50;\n\n    do {\n      var g = sqrt(a2 - x * x),\n          f = x * (zeta + mu * g) + nu * asin(x / a) - lambda1;\n      if (!f) break;\n      if (f < 0) x0 = x;else x1 = x;\n      x = 0.5 * (x0 + x1);\n    } while (abs(x1 - x0) > epsilon && --i > 0);\n  } // Newton-Raphson.\n  else {\n      x = epsilon, i = 25;\n\n      do {\n        var x2 = x * x,\n            g2 = sqrt(a2 - x2),\n            zetaMug = zeta + mu * g2,\n            f2 = x * zetaMug + nu * asin(x / a) - lambda1,\n            df = zetaMug + (nu - mu * x2) / g2;\n        x -= delta = g2 ? f2 / df : 0;\n      } while (abs(delta) > epsilon && --i > 0);\n    }\n\n  return [x, -h - r * sqrt(a2 - x * x)];\n}\n\nfunction gringortenHexadecantInvert(x, y) {\n  var x0 = 0,\n      x1 = 1,\n      r = 0.5,\n      i = 50;\n\n  while (true) {\n    var r2 = r * r,\n        sinPhi = sqrt(r),\n        z = asin(1 / sqrt(1 + r2)),\n        v = 1 - r2 + r * (1 + r2) * z,\n        p2 = (1 - sinPhi) / v,\n        p = sqrt(p2),\n        a2 = p2 * (1 + r2),\n        h = p * (1 - r2),\n        g2 = a2 - x * x,\n        g = sqrt(g2),\n        y0 = y + h + r * g;\n    if (abs(x1 - x0) < epsilon2 || --i === 0 || y0 === 0) break;\n    if (y0 > 0) x0 = r;else x1 = r;\n    r = 0.5 * (x0 + x1);\n  }\n\n  if (!i) return null;\n  var phi = asin(sinPhi),\n      cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);\n  return [pi / 4 * (x * (zeta + mu * g) + nu * asin(x / sqrt(a2))), phi];\n}\n\nexport default function () {\n  return projection(squareRaw(gringortenRaw)).scale(239.75);\n}","import { abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh } from \"./math\"; // Returns [sn, cn, dn](u + iv|m).\n\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [[0, b[0] / b[1]], [1 / b[1], 0], [b[2] / b[1], 0]];\n  }\n\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [[a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c], [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c], [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]];\n} // Returns [sn, cn, dn, ph](u|m).\n\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [t - ai * b, b + ai * t, 1 - m * t * t / 2, u - ai];\n  }\n\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [t + ai * (twon - u) / (b * b), phi - ai * t * phi * (twon - u), phi + ai * t * phi * (twon + u), 2 * atan(exp(u)) - halfPi + ai * (twon - u) / b];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n} // Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\n\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi), ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)];\n  }\n\n  return [0, ellipticF(atan(sinhPsi), 1 - m) * sign(psi)];\n} // Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\n\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n\n  return phi / (pow(2, i) * a);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { ellipticF, ellipticFi, ellipticJi } from \"./elliptic\";\nimport { abs, atan, atan2, cos, exp, halfPi, log, pi, sin, sqrt, sqrt2, tan } from \"./math\";\nimport squareRaw from \"./square\";\nexport function guyouRaw(lambda, phi) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      psi = log(tan(pi / 4 + abs(phi) / 2)),\n      r = exp(f * psi) / sqrt(k_),\n      at = guyouComplexAtan(r * cos(f * lambda), r * sin(f * lambda)),\n      t = ellipticFi(at[0], at[1], k * k);\n  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];\n}\n\nfunction guyouComplexAtan(x, y) {\n  var x2 = x * x,\n      y_1 = y + 1,\n      t = 1 - x2 - y * y;\n  return [0.5 * ((x >= 0 ? halfPi : -halfPi) - atan2(t, 2 * x)), -0.25 * log(t * t + 4 * x2) + 0.5 * log(y_1 * y_1 + x2)];\n}\n\nfunction guyouComplexDivide(a, b) {\n  var denominator = b[0] * b[0] + b[1] * b[1];\n  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nguyouRaw.invert = function (x, y) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      j = ellipticJi(0.5 * K - y, -x, k * k),\n      tn = guyouComplexDivide(j[0], j[1]),\n      lambda = atan2(tn[1], tn[0]) / f;\n  return [lambda, 2 * atan(exp(0.5 / f * log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfPi];\n};\n\nexport default function () {\n  return projection(squareRaw(guyouRaw)).scale(151.496);\n}","import { asin, sqrt } from \"../math.js\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { asin, cos, sin } from \"./math\";\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [lambda * cos(phi) / cos(phi /= 2), 2 * sin(phi)];\n}\n\nhammerQuarticAuthalicRaw.invert = function (x, y) {\n  var phi = 2 * asin(y / 2);\n  return [x * cos(phi / 2) / cos(phi), phi];\n};\n\nexport default function () {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function (_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p.scale(169.529);\n}","import { geoProjectionMutator as projectionMutator, geoCircle } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin } from \"./math\";\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [K * cosPhi0 * sin(lambda), (abs(lambda) > halfPi ? K : -K) * ( // rotate for back hemisphere\n    sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n} // Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\n\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n  return function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [atan2(y, x * cosPhi0 - z * sinPhi0), asin(z * cosPhi0 + x * sinPhi0)];\n  };\n}\n\nexport default function () {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  }; // Temporary hack; see hammerRetroazimuthalRotation.\n\n\n  p.rotate = function (_) {\n    if (!arguments.length) return _ = rotate_.call(p), _[1] += phi0 * degrees, _;\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function (stream) {\n    stream = stream_(stream);\n\n    stream.sphere = function () {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n\n      while (++i < n) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n\n      while (--i >= 0) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n\n    return stream;\n  };\n\n  return p.scale(79.4187).parallel(45).clipAngle(180 - 1e-3);\n}","import { range } from \"d3-array\";\nimport { geoStream, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { collignonRaw } from \"./collignon\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nimport { abs, floor, max, min, pi, radians, sqrtPi, tau } from \"./math\";\nvar healpixParallel = 41 + 48 / 36 + 37 / 3600,\n    // for K=3; TODO automate\nhealpixLambert = cylindricalEqualAreaRaw(0);\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + dy1 * dy1 * 4 / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function (x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphere(step) {\n  return {\n    type: \"Polygon\",\n    coordinates: [range(-180, 180 + step / 2, step).map(function (x, i) {\n      return [x, i & 1 ? 90 - 1e-6 : healpixParallel];\n    }).concat(range(180, -180 - step / 2, -step).map(function (x, i) {\n      return [x, i & 1 ? -90 + 1e-6 : -healpixParallel];\n    }))]\n  };\n}\n\nexport default function () {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function (_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere(180 / H), sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(239.75);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt } from \"./math\";\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n\n    if (t && t < 2) {\n      var theta = halfPi - phi,\n          i = 25,\n          delta;\n\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 - 0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n\n    return [rho * sin(omega), rho0 - rho * cos(omega)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [asin(x / sqrt(rho2)) * pi / Bt_Bt1, asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function (_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p.scale(167.774).center([0, 18.67]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { mollweideRaw } from \"./mollweide\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nexport var sinuMollweidePhi = 0.7109889596207567;\nexport var sinuMollweideY = 0.0528035274542;\nexport function sinuMollweideRaw(lambda, phi) {\n  return phi > -sinuMollweidePhi ? (lambda = mollweideRaw(lambda, phi), lambda[1] += sinuMollweideY, lambda) : sinusoidalRaw(lambda, phi);\n}\n\nsinuMollweideRaw.invert = function (x, y) {\n  return y > -sinuMollweidePhi ? mollweideRaw.invert(x, y - sinuMollweideY) : sinusoidalRaw.invert(x, y);\n};\n\nexport default function () {\n  return projection(sinuMollweideRaw).rotate([-20, -55]).scale(164.263).center([0, -5.4036]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs } from \"./math\";\nimport { mollweideRaw } from \"./mollweide\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nimport { sinuMollweidePhi, sinuMollweideY } from \"./sinuMollweide\";\nexport function homolosineRaw(lambda, phi) {\n  return abs(phi) > sinuMollweidePhi ? (lambda = mollweideRaw(lambda, phi), lambda[1] -= phi > 0 ? sinuMollweideY : -sinuMollweideY, lambda) : sinusoidalRaw(lambda, phi);\n}\n\nhomolosineRaw.invert = function (x, y) {\n  return abs(y) > sinuMollweidePhi ? mollweideRaw.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY)) : sinusoidalRaw.invert(x, y);\n};\n\nexport default function () {\n  return projection(homolosineRaw).scale(152.63);\n}","import { merge } from \"d3-array\";\nimport { geoStream, geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, radians } from \"../math\";\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction interpolateLine(coordinates, m) {\n  var i = -1,\n      n = coordinates.length,\n      p0 = coordinates[0],\n      p1,\n      dx,\n      dy,\n      resampled = [];\n\n  while (++i < n) {\n    p1 = coordinates[i];\n    dx = (p1[0] - p0[0]) / m;\n    dy = (p1[1] - p0[1]) / m;\n\n    for (var j = 0; j < m; ++j) {\n      resampled.push([p0[0] + j * dx, p0[1] + j * dy]);\n    }\n\n    p0 = p1;\n  }\n\n  resampled.push(p1);\n  return resampled;\n}\n\nfunction interpolateSphere(lobes) {\n  var coordinates = [],\n      lobe,\n      lambda0,\n      phi0,\n      phi1,\n      lambda2,\n      phi2,\n      i,\n      n = lobes[0].length; // Northern Hemisphere\n\n  for (i = 0; i < n; ++i) {\n    lobe = lobes[0][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([[lambda0 + epsilon, phi0 + epsilon], [lambda0 + epsilon, phi1 - epsilon], [lambda2 - epsilon, phi1 - epsilon], [lambda2 - epsilon, phi2 + epsilon]], 30));\n  } // Southern Hemisphere\n\n\n  for (i = lobes[1].length - 1; i >= 0; --i) {\n    lobe = lobes[1][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([[lambda2 - epsilon, phi2 - epsilon], [lambda2 - epsilon, phi1 + epsilon], [lambda0 + epsilon, phi1 + epsilon], [lambda0 + epsilon, phi0 - epsilon]], 30));\n  }\n\n  return {\n    type: \"Polygon\",\n    coordinates: [merge(coordinates)]\n  };\n}\n\nexport default function (project, lobes) {\n  var sphere = interpolateSphere(lobes);\n  lobes = lobes.map(function (lobe) {\n    return lobe.map(function (l) {\n      return [[l[0][0] * radians, l[0][1] * radians], [l[1][0] * radians, l[1][1] * radians], [l[2][0] * radians, l[2][1] * radians]];\n    });\n  });\n  var bounds = lobes.map(function (lobe) {\n    return lobe.map(function (l) {\n      var x0 = project(l[0][0], l[0][1])[0],\n          x1 = project(l[2][0], l[2][1])[0],\n          y0 = project(l[1][0], l[0][1])[1],\n          y1 = project(l[1][0], l[1][1])[1],\n          t;\n      if (y0 > y1) t = y0, y0 = y1, y1 = t;\n      return [[x0, y0], [x1, y1]];\n    });\n  });\n\n  function forward(lambda, phi) {\n    var sign = phi < 0 ? -1 : +1,\n        lobe = lobes[+(phi < 0)];\n\n    for (var i = 0, n = lobe.length - 1; i < n && lambda > lobe[i][2][0]; ++i) {\n      ;\n    }\n\n    var p = project(lambda - lobe[i][1][0], phi);\n    p[0] += project(lobe[i][1][0], sign * phi > sign * lobe[i][0][1] ? lobe[i][0][1] : phi)[0];\n    return p;\n  } // Assumes mutually exclusive bounding boxes for lobes.\n\n\n  if (project.invert) forward.invert = function (x, y) {\n    var bound = bounds[+(y < 0)],\n        lobe = lobes[+(y < 0)];\n\n    for (var i = 0, n = bound.length; i < n; ++i) {\n      var b = bound[i];\n\n      if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n        var p = project.invert(x - project(lobe[i][1][0], 0)[0], y);\n        p[0] += lobe[i][1][0];\n        return pointEqual(forward(p[0], p[1]), [x, y]) ? p : null;\n      }\n    }\n  };\n  var p = projection(forward),\n      stream_ = p.stream;\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere, sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p;\n}","import { boggsRaw } from \"../boggs\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(boggsRaw, lobes).scale(160.857);\n}","import { homolosineRaw } from \"../homolosine\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(homolosineRaw, lobes).scale(152.63);\n}","import { mollweideRaw } from \"../mollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(mollweideRaw, lobes).scale(169.529);\n}","import { mollweideRaw } from \"../mollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-90, 90], [0, 0]], [[0, 0], [90, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-90, -90], [0, 0]], [[0, 0], [90, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(mollweideRaw, lobes).scale(169.529).rotate([20, 0]);\n}","import { sinuMollweideRaw } from \"../sinuMollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 35], [-30, 90], [0, 35]], [[0, 35], [30, 90], [180, 35]]], [// southern hemisphere\n[[-180, -10], [-102, -90], [-65, -10]], [[-65, -10], [5, -90], [77, -10]], [[77, -10], [103, -90], [180, -10]]]];\nexport default function () {\n  return interrupt(sinuMollweideRaw, lobes).rotate([-20, -55]).scale(164.263).center([0, -5.4036]);\n}","import { sinusoidalRaw } from \"../sinusoidal\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-110, 90], [-40, 0]], [[-40, 0], [0, 90], [40, 0]], [[40, 0], [110, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-110, -90], [-40, 0]], [[-40, 0], [0, -90], [40, 0]], [[40, 0], [110, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(sinusoidalRaw, lobes).scale(152.63).rotate([-20, 0]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt, tau } from \"./math\";\nexport function kavrayskiy7Raw(lambda, phi) {\n  return [3 / tau * lambda * sqrt(pi * pi / 3 - phi * phi), phi];\n}\n\nkavrayskiy7Raw.invert = function (x, y) {\n  return [tau / 3 * x / sqrt(pi * pi / 3 - y * y), y];\n};\n\nexport default function () {\n  return projection(kavrayskiy7Raw).scale(158.837);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin } from \"./math\";\nexport function lagrangeRaw(n) {\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [2 * sin(lambda) / c, (v - 1 / v) / c];\n  }\n\n  forward.invert = function (x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [atan2(2 * x, 1 - x2 - y2) / n, asin((t - 1) / (t + 1))];\n  };\n\n  return forward;\n}\nexport default function () {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function (_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p.scale(124.75);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2 } from \"./math\";\nvar pi_sqrt2 = pi / sqrt2;\nexport function larriveeRaw(lambda, phi) {\n  return [lambda * (1 + sqrt(cos(phi))) / 2, phi / (cos(phi / 2) * cos(lambda / 6))];\n}\n\nlarriveeRaw.invert = function (x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;else lambda += 6 * acos(pi_sqrt2 / y0);\n\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = phi / cosPhi_2 * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function () {\n  return projection(larriveeRaw).scale(97.2672);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, pi, sign } from \"./math\";\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)), phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))];\n}\n\nlaskowskiRaw.invert = function (x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(laskowskiRaw).scale(139.98);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2 } from \"./math\";\nexport function littrowRaw(lambda, phi) {\n  return [sin(lambda) / cos(phi), tan(phi) * cos(lambda)];\n}\n\nlittrowRaw.invert = function (x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      cosPhi = x ? sqrt1_2 * sqrt((y2_1 - sqrt(x2 * x2 + 2 * x2 * (y2 - 1) + y2_1 * y2_1)) / x2 + 1) : 1 / sqrt(y2_1);\n  return [asin(x * cosPhi), sign(y) * acos(cosPhi)];\n};\n\nexport default function () {\n  return projection(littrowRaw).scale(144.049).clipAngle(90 - 1e-3);\n}","import parallel1 from \"./parallel1\";\nimport { abs, cos, epsilon, halfPi, log, quarterPi, tan } from \"./math\";\nexport function loximuthalRaw(phi0) {\n  var cosPhi0 = cos(phi0),\n      tanPhi0 = tan(quarterPi + phi0 / 2);\n\n  function forward(lambda, phi) {\n    var y = phi - phi0,\n        x = abs(y) < epsilon ? lambda * cosPhi0 : abs(x = quarterPi + phi / 2) < epsilon || abs(abs(x) - halfPi) < epsilon ? 0 : lambda * y / log(tan(x) / tanPhi0);\n    return [x, y];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda,\n        phi = y + phi0;\n    return [abs(y) < epsilon ? x / cosPhi0 : abs(lambda = quarterPi + phi / 2) < epsilon || abs(abs(lambda) - halfPi) < epsilon ? 0 : x * log(tan(lambda) / tanPhi0) / y, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(loximuthalRaw).parallel(40).scale(158.837);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, exp, log, quarterPi, pi, tan } from \"./math\";\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function (x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function () {\n  return projection(millerRaw).scale(108.318);\n}","import { geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { abs, asin, atan, atan2, cos, epsilon, sin, sqrt } from \"./math\";\nexport function modifiedStereographicRaw(C) {\n  var m = C.length - 1;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = 2 / (1 + cosPhi * cos(lambda)),\n        zr = k * cosPhi * sin(lambda),\n        zi = k * sin(phi),\n        i = m,\n        w = C[i],\n        ar = w[0],\n        ai = w[1],\n        t;\n\n    while (--i >= 0) {\n      w = C[i];\n      ar = w[0] + zr * (t = ar) - zi * ai;\n      ai = w[1] + zr * ai + zi * t;\n    }\n\n    ar = zr * (t = ar) - zi * ai;\n    ai = zr * ai + zi * t;\n    return [ar, ai];\n  }\n\n  forward.invert = function (x, y) {\n    var i = 20,\n        zr = x,\n        zi = y;\n\n    do {\n      var j = m,\n          w = C[j],\n          ar = w[0],\n          ai = w[1],\n          br = 0,\n          bi = 0,\n          t;\n\n      while (--j >= 0) {\n        w = C[j];\n        br = ar + zr * (t = br) - zi * bi;\n        bi = ai + zr * bi + zi * t;\n        ar = w[0] + zr * (t = ar) - zi * ai;\n        ai = w[1] + zr * ai + zi * t;\n      }\n\n      br = ar + zr * (t = br) - zi * bi;\n      bi = ai + zr * bi + zi * t;\n      ar = zr * (t = ar) - zi * ai - x;\n      ai = zr * ai + zi * t - y;\n      var denominator = br * br + bi * bi,\n          deltar,\n          deltai;\n      zr -= deltar = (ar * br + ai * bi) / denominator;\n      zi -= deltai = (ai * br - ar * bi) / denominator;\n    } while (abs(deltar) + abs(deltai) > epsilon * epsilon && --i > 0);\n\n    if (i) {\n      var rho = sqrt(zr * zr + zi * zi),\n          c = 2 * atan(rho * 0.5),\n          sinc = sin(c);\n      return [atan2(zr * sinc, rho * cos(c)), rho ? asin(zi * sinc / rho) : 0];\n    }\n  };\n\n  return forward;\n}\nvar alaska = [[0.9972523, 0], [0.0052513, -0.0041175], [0.0074606, 0.0048125], [-0.0153783, -0.1968253], [0.0636871, -0.1408027], [0.3660976, -0.2937382]],\n    gs48 = [[0.98879, 0], [0, 0], [-0.050909, 0], [0, 0], [0.075528, 0]],\n    gs50 = [[0.9842990, 0], [0.0211642, 0.0037608], [-0.1036018, -0.0575102], [-0.0329095, -0.0320119], [0.0499471, 0.1223335], [0.0260460, 0.0899805], [0.0007388, -0.1435792], [0.0075848, -0.1334108], [-0.0216473, 0.0776645], [-0.0225161, 0.0853673]],\n    miller = [[0.9245, 0], [0, 0], [0.01943, 0]],\n    lee = [[0.721316, 0], [0, 0], [-0.00881625, -0.00617325]];\nexport function modifiedStereographicAlaska() {\n  return modifiedStereographic(alaska, [152, -64]).scale(1500).center([-160.908, 62.4864]).clipAngle(25);\n}\nexport function modifiedStereographicGs48() {\n  return modifiedStereographic(gs48, [95, -38]).scale(1000).clipAngle(55).center([-96.5563, 38.8675]);\n}\nexport function modifiedStereographicGs50() {\n  return modifiedStereographic(gs50, [120, -45]).scale(359.513).clipAngle(55).center([-117.474, 53.0628]);\n}\nexport function modifiedStereographicMiller() {\n  return modifiedStereographic(miller, [-20, -18]).scale(209.091).center([20, 16.7214]).clipAngle(82);\n}\nexport function modifiedStereographicLee() {\n  return modifiedStereographic(lee, [165, 10]).scale(250).clipAngle(130).center([-165, -10]);\n}\nexport default function modifiedStereographic(coefficients, rotate) {\n  var p = projection(modifiedStereographicRaw(coefficients)).rotate(rotate).clipAngle(90),\n      r = rotation(rotate),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt } from \"./math\";\nvar sqrt6 = sqrt(6),\n    sqrt7 = sqrt(7);\nexport function mtFlatPolarParabolicRaw(lambda, phi) {\n  var theta = asin(7 * sin(phi) / (3 * sqrt6));\n  return [sqrt6 * lambda * (2 * cos(2 * theta / 3) - 1) / sqrt7, 9 * sin(theta / 3) / sqrt7];\n}\n\nmtFlatPolarParabolicRaw.invert = function (x, y) {\n  var theta = 3 * asin(y * sqrt7 / 9);\n  return [x * sqrt7 / (sqrt6 * (2 * cos(2 * theta / 3) - 1)), asin(sin(theta) * 3 * sqrt6 / 7)];\n};\n\nexport default function () {\n  return projection(mtFlatPolarParabolicRaw).scale(164.859);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, sin, sqrt, sqrt1_2, sqrt2 } from \"./math\";\nexport function mtFlatPolarQuarticRaw(lambda, phi) {\n  var k = (1 + sqrt1_2) * sin(phi),\n      theta = phi;\n\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (sin(theta / 2) + sin(theta) - k) / (0.5 * cos(theta / 2) + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n\n  return [lambda * (1 + 2 * cos(theta) / cos(theta / 2)) / (3 * sqrt2), 2 * sqrt(3) * sin(theta / 2) / sqrt(2 + sqrt2)];\n}\n\nmtFlatPolarQuarticRaw.invert = function (x, y) {\n  var sinTheta_2 = y * sqrt(2 + sqrt2) / (2 * sqrt(3)),\n      theta = 2 * asin(sinTheta_2);\n  return [3 * sqrt2 * x / (1 + 2 * cos(theta) / cos(theta / 2)), asin((sinTheta_2 + sin(theta)) / (1 + sqrt1_2))];\n};\n\nexport default function () {\n  return projection(mtFlatPolarQuarticRaw).scale(188.209);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function mtFlatPolarSinusoidalRaw(lambda, phi) {\n  var A = sqrt(6 / (4 + pi)),\n      k = (1 + pi / 4) * sin(phi),\n      theta = phi / 2;\n\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (theta / 2 + sin(theta) - k) / (0.5 + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n\n  return [A * (0.5 + cos(theta)) * lambda / 1.5, A * theta];\n}\n\nmtFlatPolarSinusoidalRaw.invert = function (x, y) {\n  var A = sqrt(6 / (4 + pi)),\n      theta = y / A;\n  if (abs(abs(theta) - halfPi) < epsilon) theta = theta < 0 ? -halfPi : halfPi;\n  return [1.5 * x / (A * (0.5 + cos(theta))), asin((theta / 2 + sin(theta)) / (1 + pi / 4))];\n};\n\nexport default function () {\n  return projection(mtFlatPolarSinusoidalRaw).scale(166.518);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\";\nexport function naturalEarthRaw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarthRaw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarthRaw).scale(175.295);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, cos, epsilon, tan } from \"./math\";\nexport function nellHammerRaw(lambda, phi) {\n  return [lambda * (1 + cos(phi)) / 2, 2 * (phi - tan(phi / 2))];\n}\n\nnellHammerRaw.invert = function (x, y) {\n  var p = y / 2;\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; ++i) {\n    var c = cos(y / 2);\n    y -= delta = (y - tan(y / 2) - p) / (1 - 0.5 / (c * c));\n  }\n\n  return [2 * x / (1 + cos(y)), y];\n};\n\nexport default function () {\n  return projection(nellHammerRaw).scale(152.63);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\"; // Based on Java implementation by Bojan Savric.\n// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java\n\nvar pattersonK1 = 1.0148,\n    pattersonK2 = 0.23185,\n    pattersonK3 = -0.14499,\n    pattersonK4 = 0.02406,\n    pattersonC1 = pattersonK1,\n    pattersonC2 = 5 * pattersonK2,\n    pattersonC3 = 7 * pattersonK3,\n    pattersonC4 = 9 * pattersonK4,\n    pattersonYmax = 1.790857183;\nexport function pattersonRaw(lambda, phi) {\n  var phi2 = phi * phi;\n  return [lambda, phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))];\n}\n\npattersonRaw.invert = function (x, y) {\n  if (y > pattersonYmax) y = pattersonYmax;else if (y < -pattersonYmax) y = -pattersonYmax;\n  var yc = y,\n      delta;\n\n  do {\n    // Newton-Raphson\n    var y2 = yc * yc;\n    yc -= delta = (yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\n  } while (abs(delta) > epsilon);\n\n  return [x, yc];\n};\n\nexport default function () {\n  return projection(pattersonRaw).scale(139.319);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan } from \"./math\";\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [sin(k) / tanPhi, phi + (1 - cos(k)) / tanPhi];\n}\n\npolyconicRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10,\n      delta;\n\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  tanPhi = tan(phi);\n  return [(abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi), phi];\n};\n\nexport default function () {\n  return projection(polyconicRaw).scale(103.74);\n}","import adder from \"./adder.js\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import adder from \"./adder.js\";\nimport { areaStream, areaRingSum } from \"./area.js\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian.js\";\nimport { abs, degrees, epsilon, radians } from \"./math.js\";\nimport stream from \"./stream.js\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function sphere() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math.js\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import { atan2, cos, sin, sqrt } from \"../math\"; // Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\n// [a, b, c,\n//  d, e, f,\n//  0, 0, 1] - this redundant row is left out.\n// Transform matrix for [a0, a1] -> [b0, b1].\n\nexport default function (a, b) {\n  var u = subtract(a[1], a[0]),\n      v = subtract(b[1], b[0]),\n      phi = angle(u, v),\n      s = length(u) / length(v);\n  return multiply([1, 0, a[0][0], 0, 1, a[0][1]], multiply([s, 0, 0, 0, s, 0], multiply([cos(phi), sin(phi), 0, -sin(phi), cos(phi), 0], [1, 0, -b[0][0], 0, 1, -b[0][1]])));\n} // Inverts a transform matrix.\n\nexport function inverse(m) {\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\n  return [k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]), -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])];\n} // Multiplies two 3x2 matrices.\n\nexport function multiply(a, b) {\n  return [a[0] * b[0] + a[1] * b[3], a[0] * b[1] + a[1] * b[4], a[0] * b[2] + a[1] * b[5] + a[2], a[3] * b[0] + a[4] * b[3], a[3] * b[1] + a[4] * b[4], a[3] * b[2] + a[4] * b[5] + a[5]];\n} // Subtracts 2D vectors.\n\nfunction subtract(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n} // Magnitude of a 2D vector.\n\n\nfunction length(v) {\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\n} // Angle between two 2D vectors.\n\n\nfunction angle(a, b) {\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\n}","import { geoBounds as bounds, geoCentroid as centroid, geoInterpolate as interpolate, geoProjection as projection } from \"d3-geo\";\nimport { abs, cos, degrees, epsilon, pi, radians, sin } from \"../math\";\nimport { default as matrix, multiply, inverse } from \"./matrix\"; // Creates a polyhedral projection.\n//  * root: a spanning tree of polygon faces.  Nodes are automatically\n//    augmented with a transform matrix.\n//  * face: a function that returns the appropriate node for a given {lambda, phi}\n//    point (radians).\n//  * r: rotation angle for final polyhedral net.  Defaults to -pi / 6 (for\n//    butterflies).\n\nexport default function (root, face, r) {\n  r = r == null ? -pi / 6 : r; // TODO automate\n\n  recurse(root, {\n    transform: [cos(r), sin(r), 0, -sin(r), cos(r), 0]\n  });\n\n  function recurse(node, parent) {\n    node.edges = faceEdges(node.face); // Find shared edge.\n\n    if (parent.face) {\n      var shared = node.shared = sharedEdge(node.face, parent.face),\n          m = matrix(shared.map(parent.project), shared.map(node.project));\n      node.transform = parent.transform ? multiply(parent.transform, m) : m; // Replace shared edge in parent edges array.\n\n      var edges = parent.edges;\n\n      for (var i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = node;\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = node;\n      }\n\n      edges = node.edges;\n\n      for (i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = parent;\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = parent;\n      }\n    } else {\n      node.transform = parent.transform;\n    }\n\n    if (node.children) {\n      node.children.forEach(function (child) {\n        recurse(child, node);\n      });\n    }\n\n    return node;\n  }\n\n  function forward(lambda, phi) {\n    var node = face(lambda, phi),\n        point = node.project([lambda * degrees, phi * degrees]),\n        t;\n\n    if (t = node.transform) {\n      return [t[0] * point[0] + t[1] * point[1] + t[2], -(t[3] * point[0] + t[4] * point[1] + t[5])];\n    }\n\n    point[1] = -point[1];\n    return point;\n  } // Naive inverse!  A faster solution would use bounding boxes, or even a\n  // polygonal quadtree.\n\n\n  if (hasInverse(root)) forward.invert = function (x, y) {\n    var coordinates = faceInvert(root, [x, -y]);\n    return coordinates && (coordinates[0] *= radians, coordinates[1] *= radians, coordinates);\n  };\n\n  function faceInvert(node, coordinates) {\n    var invert = node.project.invert,\n        t = node.transform,\n        point = coordinates;\n\n    if (t) {\n      t = inverse(t);\n      point = [t[0] * point[0] + t[1] * point[1] + t[2], t[3] * point[0] + t[4] * point[1] + t[5]];\n    }\n\n    if (invert && node === faceDegrees(p = invert(point))) return p;\n    var p,\n        children = node.children;\n\n    for (var i = 0, n = children && children.length; i < n; ++i) {\n      if (p = faceInvert(children[i], coordinates)) return p;\n    }\n  }\n\n  function faceDegrees(coordinates) {\n    return face(coordinates[0] * radians, coordinates[1] * radians);\n  }\n\n  var proj = projection(forward),\n      stream_ = proj.stream;\n\n  proj.stream = function (stream) {\n    var rotate = proj.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (proj.rotate([0, 0]), stream_(stream));\n    proj.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart();\n      sphereStream.lineStart();\n      outline(sphereStream, root);\n      sphereStream.lineEnd();\n      sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return proj;\n}\n\nfunction outline(stream, node, parent) {\n  var point,\n      edges = node.edges,\n      n = edges.length,\n      edge,\n      multiPoint = {\n    type: \"MultiPoint\",\n    coordinates: node.face\n  },\n      notPoles = node.face.filter(function (d) {\n    return abs(d[1]) !== 90;\n  }),\n      b = bounds({\n    type: \"MultiPoint\",\n    coordinates: notPoles\n  }),\n      inside = false,\n      j = -1,\n      dx = b[1][0] - b[0][0]; // TODO\n\n  var c = dx === 180 || dx === 360 ? [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2] : centroid(multiPoint); // First find the shared edge…\n\n  if (parent) while (++j < n) {\n    if (edges[j] === parent) break;\n  }\n  ++j;\n\n  for (var i = 0; i < n; ++i) {\n    edge = edges[(i + j) % n];\n\n    if (Array.isArray(edge)) {\n      if (!inside) {\n        stream.point((point = interpolate(edge[0], c)(epsilon))[0], point[1]);\n        inside = true;\n      }\n\n      stream.point((point = interpolate(edge[1], c)(epsilon))[0], point[1]);\n    } else {\n      inside = false;\n      if (edge !== parent) outline(stream, edge, node);\n    }\n  }\n} // Tests equality of two spherical points.\n\n\nfunction pointEqual(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n} // Finds a shared edge given two clockwise polygons.\n\n\nfunction sharedEdge(a, b) {\n  var x,\n      y,\n      n = a.length,\n      found = null;\n\n  for (var i = 0; i < n; ++i) {\n    x = a[i];\n\n    for (var j = b.length; --j >= 0;) {\n      y = b[j];\n\n      if (x[0] === y[0] && x[1] === y[1]) {\n        if (found) return [found, x];\n        found = x;\n      }\n    }\n  }\n} // Converts an array of n face vertices to an array of n + 1 edges.\n\n\nfunction faceEdges(face) {\n  var n = face.length,\n      edges = [];\n\n  for (var a = face[n - 1], i = 0; i < n; ++i) {\n    edges.push([a, a = face[i]]);\n  }\n\n  return edges;\n}\n\nfunction hasInverse(node) {\n  return node.project.invert || node.children && node.children.some(hasInverse);\n}","import { atan, cos, sin } from \"../math.js\";\nimport { azimuthalInvert } from \"./azimuthal.js\";\nimport projection from \"./index.js\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","// TODO generate on-the-fly to avoid external modification.\nvar octahedron = [[0, 90], [-90, 0], [0, 0], [90, 0], [180, 0], [0, -90]];\nexport default [[0, 2, 1], [0, 3, 2], [5, 1, 2], [5, 2, 3], [0, 1, 4], [0, 4, 3], [5, 4, 1], [5, 3, 4]].map(function (face) {\n  return face.map(function (i) {\n    return octahedron[i];\n  });\n});","import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { pi } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).scale(101.858).center([0, 45]);\n}","import { geoCentroid as centroid, geoProjection as projection } from \"d3-geo\";\nimport { collignonRaw } from \"../collignon\";\nimport { pi, sqrt } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function (x, y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).scale(121.906).center([0, 48.5904]);\n}","import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { asin, atan2, cos, degrees, max, min, pi, radians, sin } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = face.length === 6 ? centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    }) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function (face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794, a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794, a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794]), spherical([b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794, b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794, b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794]));\n      a = b;\n    }\n\n    return hexagon;\n  });\n  var cornerNormals = [];\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n  w5.forEach(function (hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n\n    for (var i = 0; i < n; ++i) {\n      w5.push([face[i], hexagon[(i * 2 + 2) % (2 * n)], hexagon[(i * 2 + 1) % (2 * n)]]);\n      parents.push(j);\n      normals.push(cross(cartesian(hexagon[(i * 2 + 2) % (2 * n)]), cartesian(hexagon[(i * 2 + 1) % (2 * n)])));\n    }\n  });\n  var faces = w5.map(function (face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n  parents.forEach(function (d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5;\n    var n = cornerNormals[hexagon];\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1 : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2 : hexagon];\n  }\n\n  return polyhedral(faces[0], face).scale(110.625).center([0, 45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) {\n    s += a[i] * b[i];\n  }\n\n  return s;\n}\n\nfunction cross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // Converts 3D Cartesian to spherical coordinates (degrees).\n\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]) * degrees, asin(max(-1, min(1, cartesian[2]))) * degrees];\n} // Converts spherical coordinates (degrees) to 3D Cartesian.\n\n\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n}","export default function () {}","import { geoStream } from \"d3-geo\";\nimport noop from \"../noop\";\nimport clockwise from \"./clockwise\";\nimport contains from \"./contains\";\nexport default function (object, projection) {\n  var stream = projection.stream,\n      project;\n  if (!stream) throw new Error(\"invalid projection\");\n\n  switch (object && object.type) {\n    case \"Feature\":\n      project = projectFeature;\n      break;\n\n    case \"FeatureCollection\":\n      project = projectFeatureCollection;\n      break;\n\n    default:\n      project = projectGeometry;\n      break;\n  }\n\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function (f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function (o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n\n  switch (o.type) {\n    case \"Point\":\n      sink = sinkPoint;\n      break;\n\n    case \"MultiPoint\":\n      sink = sinkPoint;\n      break;\n\n    case \"LineString\":\n      sink = sinkLine;\n      break;\n\n    case \"MultiLineString\":\n      sink = sinkLine;\n      break;\n\n    case \"Polygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"MultiPolygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"Sphere\":\n      sink = sinkPolygon;\n      break;\n\n    default:\n      return null;\n  }\n\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\nvar sinkPoint = {\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  result: function result() {\n    var result = !points.length ? null : points.length < 2 ? {\n      type: \"Point\",\n      coordinates: points[0]\n    } : {\n      type: \"MultiPoint\",\n      coordinates: points\n    };\n    points = [];\n    return result;\n  }\n};\nvar sinkLine = {\n  lineStart: noop,\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function lineEnd() {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function result() {\n    var result = !lines.length ? null : lines.length < 2 ? {\n      type: \"LineString\",\n      coordinates: lines[0]\n    } : {\n      type: \"MultiLineString\",\n      coordinates: lines\n    };\n    lines = [];\n    return result;\n  }\n};\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function lineEnd() {\n    var n = points.length;\n\n    if (n) {\n      do {\n        points.push(points[0].slice());\n      } while (++n < 4);\n\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function result() {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = []; // https://github.com/d3/d3/issues/1558\n\n    lines.forEach(function (ring) {\n      if (clockwise(ring)) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      var point = hole[0];\n      polygons.some(function (polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n    lines = [];\n    return !polygons.length ? null : polygons.length > 1 ? {\n      type: \"MultiPolygon\",\n      coordinates: polygons\n    } : {\n      type: \"Polygon\",\n      coordinates: polygons[0]\n    };\n  }\n};","export default function (ring) {\n  if ((n = ring.length) < 4) return false;\n  var i = 0,\n      n,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n  while (++i < n) {\n    area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  }\n\n  return area <= 0;\n}","export default function (ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = false;\n\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i],\n        xi = pi[0],\n        yi = pi[1],\n        pj = ring[j],\n        xj = pj[0],\n        yj = pj[1];\n    if (yi > y ^ yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = !contains;\n  }\n\n  return contains;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, halfPi, pi, sign, sqrt1_2 } from \"../math\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function (x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * (x0 + (y > 0 ? 1 : -1) * d),\n          y1 = -s * (y0 + (x > 0 ? 1 : -1) * d);\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n  return projection(projectQuincuncial).rotate([-90, -90, 45]).clipAngle(180 - 1e-3);\n}","import { gringortenRaw } from \"../gringorten\";\nimport quincuncial from \"./index\";\nexport default function () {\n  return quincuncial(gringortenRaw).scale(176.423);\n}","import { guyouRaw } from \"../guyou\";\nimport quincuncial from \"./index\";\nexport default function () {\n  return quincuncial(guyouRaw).scale(111.48);\n}","export default function (o, digits) {\n  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error(\"invalid digits\");\n\n  function quantizePoint(coordinates) {\n    coordinates[0] = +coordinates[0].toFixed(digits);\n    coordinates[1] = +coordinates[1].toFixed(digits);\n  }\n\n  function quantizePoints(coordinates) {\n    coordinates.forEach(quantizePoint);\n  }\n\n  function quantizePolygon(coordinates) {\n    coordinates.forEach(quantizePoints);\n  }\n\n  function quantizeGeometry(o) {\n    if (o) switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n      case \"LineString\":\n        quantizePoints(o.coordinates);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        quantizePolygon(o.coordinates);\n        break;\n\n      case \"MultiPolygon\":\n        o.coordinates.forEach(quantizePolygon);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  function quantizeFeature(o) {\n    quantizeGeometry(o.geometry);\n  }\n\n  if (o) switch (o.type) {\n    case \"Feature\":\n      quantizeFeature(o);\n      break;\n\n    case \"FeatureCollection\":\n      o.features.forEach(quantizeFeature);\n      break;\n\n    default:\n      quantizeGeometry(o);\n      break;\n  }\n  return o;\n}","import { abs, acos, asin, atan, cos, epsilon, pi, sin, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [sin(E) * cotPhi, phi + (1 - cos(E)) * cotPhi - phi0];\n  } // TODO return null for points outside outline.\n\n\n  forward.invert = function (x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10,\n        delta;\n\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(rectangularPolyconicRaw).scale(131.215);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians } from \"./math\";\nvar K = [[0.9986, -0.062], [1.0000, 0.0000], [0.9986, 0.0620], [0.9954, 0.1240], [0.9900, 0.1860], [0.9822, 0.2480], [0.9730, 0.3100], [0.9600, 0.3720], [0.9427, 0.4340], [0.9216, 0.4958], [0.8962, 0.5571], [0.8679, 0.6176], [0.8350, 0.6769], [0.7986, 0.7346], [0.7597, 0.7903], [0.7186, 0.8435], [0.6732, 0.8936], [0.6213, 0.9394], [0.5722, 0.9761], [0.5322, 1.0000]];\nK.forEach(function (d) {\n  d[1] *= 1.0144;\n});\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)];\n}\n\nrobinsonRaw.invert = function (x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50,\n          delta;\n\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n\n      break;\n    }\n  } while (--i0 >= 0);\n\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), phi * radians];\n};\n\nexport default function () {\n  return projection(robinsonRaw).scale(152.63);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { acos, asin, atan2, cos, degrees, radians, sin, sqrt } from \"./math\";\n\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [k * cosPhi * sin(lambda), k * sin(phi)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho2 = x * x + y * y,\n        rho = sqrt(rho2),\n        sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [atan2(x * sinc, rho * sqrt(1 - sinc * sinc)), rho ? asin(y * sinc / rho) : 0];\n  };\n\n  return forward;\n}\n\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n      sinOmega = sin(omega);\n\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n        y = coordinates[1],\n        A = y * sinOmega / (P - 1) + cosOmega;\n    return [coordinates[0] * cosOmega / A, y / A];\n  }\n\n  forward.invert = function (x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n\n  return forward;\n}\nexport default function () {\n  var distance = 2,\n      omega = 0,\n      m = projectionMutator(satelliteRaw),\n      p = m(distance, omega); // As a multiple of radius.\n\n  p.distance = function (_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n\n  p.tilt = function (_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n\n  return p.scale(432.147).clipAngle(acos(1 / distance) * degrees - 1e-6);\n}","var epsilon = 1e-4,\n    epsilonInverse = 1e4,\n    x0 = -180,\n    x0e = x0 + epsilon,\n    x1 = 180,\n    x1e = x1 - epsilon,\n    y0 = -90,\n    y0e = y0 + epsilon,\n    y1 = 90,\n    y1e = y1 - epsilon;\n\nfunction quantize(x) {\n  return Math.floor(x * epsilonInverse) / epsilonInverse;\n}\n\nfunction normalizePoint(y) {\n  return y === y0 || y === y1 ? [0, y] // pole\n  : [x0, quantize(y)]; // antimeridian\n}\n\nfunction clampPoint(p) {\n  if (p[0] <= x0e) p[0] = x0;else if (p[0] >= x1e) p[0] = x1;\n  if (p[1] <= y0e) p[1] = y0;else if (p[1] >= y1e) p[1] = y1;\n}\n\nfunction clampPoints(points) {\n  points.forEach(clampPoint);\n} // For each ring, detect where it crosses the antimeridian or pole.\n\n\nfunction extractFragments(polygon, fragments) {\n  for (var j = 0, m = polygon.length; j < m; ++j) {\n    var ring = polygon[j];\n    ring.polygon = polygon; // By default, assume that this ring doesn’t need any stitching.\n\n    fragments.push(ring);\n\n    for (var i = 0, n = ring.length; i < n; ++i) {\n      var point = ring[i],\n          x = point[0],\n          y = point[1]; // If this is an antimeridian or polar point…\n\n      if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n        clampPoint(point); // Advance through any antimeridian or polar points…\n\n        for (var k = i + 1; k < n; ++k) {\n          var pointk = ring[k],\n              xk = pointk[0],\n              yk = pointk[1];\n          if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n        } // If this was just a single antimeridian or polar point,\n        // we don’t need to cut this ring into a fragment;\n        // we can just leave it as-is.\n\n\n        if (k === i + 1) continue; // Otherwise, if this is not the first point in the ring,\n        // cut the current fragment so that it ends at the current point.\n        // The current point is also normalized for later joining.\n\n        if (i) {\n          var fragmentBefore = ring.slice(0, i + 1);\n          fragmentBefore.polygon = polygon;\n          fragmentBefore[fragmentBefore.length - 1] = normalizePoint(y);\n          fragments[fragments.length - 1] = fragmentBefore;\n        } // If the ring started with an antimeridian fragment,\n        // we can ignore that fragment entirely.\n        else fragments.pop(); // If the remainder of the ring is an antimeridian fragment,\n        // move on to the next ring.\n\n\n        if (k >= n) break; // Otherwise, add the remaining ring fragment and continue.\n\n        fragments.push(ring = ring.slice(k - 1));\n        ring[0] = normalizePoint(ring[0][1]);\n        ring.polygon = polygon;\n        i = -1;\n        n = ring.length;\n      }\n    }\n  }\n\n  polygon.length = 0;\n} // Now stitch the fragments back together into rings.\n// TODO remove empty polygons.\n\n\nfunction stitchFragments(fragments) {\n  var i,\n      n = fragments.length; // To connect the fragments start-to-end, create a simple index by end.\n\n  var fragmentByStart = {},\n      fragmentByEnd = {},\n      fragment,\n      start,\n      startFragment,\n      end,\n      endFragment; // For each fragment…\n\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    start = fragment[0];\n    end = fragment[fragment.length - 1]; // If this fragment is closed, add it as a standalone ring.\n\n    if (start[0] === end[0] && start[1] === end[1]) {\n      fragment.polygon.push(fragment);\n      fragments[i] = null;\n      continue;\n    }\n\n    fragment.index = i;\n    fragmentByStart[start] = fragmentByEnd[end] = fragment;\n  } // For each open fragment…\n\n\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n\n    if (fragment) {\n      start = fragment[0];\n      end = fragment[fragment.length - 1];\n      startFragment = fragmentByEnd[start];\n      endFragment = fragmentByStart[end];\n      delete fragmentByStart[start];\n      delete fragmentByEnd[end]; // If this fragment is closed, add it as a standalone ring.\n\n      if (start[0] === end[0] && start[1] === end[1]) {\n        fragment.polygon.push(fragment);\n        continue;\n      }\n\n      if (startFragment) {\n        delete fragmentByEnd[start];\n        delete fragmentByStart[startFragment[0]];\n        startFragment.pop(); // drop the shared coordinate\n\n        fragments[startFragment.index] = null;\n        fragment = startFragment.concat(fragment);\n        fragment.polygon = startFragment.polygon;\n\n        if (startFragment === endFragment) {\n          // Connect both ends to this single fragment to create a ring.\n          fragment.polygon.push(fragment);\n        } else {\n          fragment.index = n++;\n          fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n        }\n      } else if (endFragment) {\n        delete fragmentByStart[end];\n        delete fragmentByEnd[endFragment[endFragment.length - 1]];\n        fragment.pop(); // drop the shared coordinate\n\n        fragment = fragment.concat(endFragment);\n        fragment.polygon = endFragment.polygon;\n        fragment.index = n++;\n        fragments[endFragment.index] = null;\n        fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n      } else {\n        fragment.push(fragment[0]); // close ring\n\n        fragment.polygon.push(fragment);\n      }\n    }\n  }\n}\n\nfunction stitchFeature(o) {\n  stitchGeometry(o.geometry);\n}\n\nfunction stitchGeometry(o) {\n  if (!o) return;\n  var fragments, i, n;\n\n  switch (o.type) {\n    case \"GeometryCollection\":\n      {\n        o.geometries.forEach(stitchGeometry);\n        return;\n      }\n\n    case \"Point\":\n      {\n        clampPoint(o.coordinates);\n        break;\n      }\n\n    case \"MultiPoint\":\n    case \"LineString\":\n      {\n        clampPoints(o.coordinates);\n        break;\n      }\n\n    case \"MultiLineString\":\n      {\n        o.coordinates.forEach(clampPoints);\n        break;\n      }\n\n    case \"Polygon\":\n      {\n        extractFragments(o.coordinates, fragments = []);\n        break;\n      }\n\n    case \"MultiPolygon\":\n      {\n        fragments = [], i = -1, n = o.coordinates.length;\n\n        while (++i < n) {\n          extractFragments(o.coordinates[i], fragments);\n        }\n\n        break;\n      }\n\n    default:\n      return;\n  }\n\n  stitchFragments(fragments);\n}\n\nexport default function (o) {\n  if (o) switch (o.type) {\n    case \"Feature\":\n      stitchFeature(o);\n      break;\n\n    case \"FeatureCollection\":\n      o.features.forEach(stitchFeature);\n      break;\n\n    default:\n      stitchGeometry(o);\n      break;\n  }\n  return o;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, quarterPi, sin, tan } from \"./math\";\nexport function timesRaw(lambda, phi) {\n  var t = tan(phi / 2),\n      s = sin(quarterPi * t);\n  return [lambda * (0.74482 - 0.34588 * s * s), 1.70711 * t];\n}\n\ntimesRaw.invert = function (x, y) {\n  var t = y / 1.70711,\n      s = sin(quarterPi * t);\n  return [x / (0.74482 - 0.34588 * s * s), 2 * atan(t)];\n};\n\nexport default function () {\n  return projection(timesRaw).scale(146.153);\n}","import { geoInterpolate as interpolate, geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { asin, degrees, pi, sin, radians } from \"./math\"; // Compute the origin as the midpoint of the two reference points.\n// Rotate one of the reference points by the origin.\n// Apply the spherical law of sines to compute gamma rotation.\n\nexport default function (raw, p0, p1) {\n  var i = interpolate(p0, p1),\n      o = i(0.5),\n      a = rotation([-o[0], -o[1]])(p0),\n      b = i.distance / 2,\n      y = -asin(sin(a[1] * radians) / sin(b)),\n      R = [-o[0], -o[1], -(a[0] > 0 ? pi - y : y) * degrees],\n      p = projection(raw(b)).rotate(R),\n      r = rotation(R),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p.clipAngle(90);\n}","import { geoGnomonicRaw as gnomonicRaw } from \"d3-geo\";\nimport { cos } from \"./math\";\nimport twoPoint from \"./twoPoint\";\nexport function twoPointAzimuthalRaw(d) {\n  var cosd = cos(d);\n\n  function forward(lambda, phi) {\n    var coordinates = gnomonicRaw(lambda, phi);\n    coordinates[0] *= cosd;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    return gnomonicRaw.invert(x / cosd, y);\n  };\n\n  return forward;\n}\nexport function twoPointAzimuthalUsa() {\n  return twoPointAzimuthal([-158, 21.5], [-77, 39]).clipAngle(60).scale(400);\n}\nexport default function twoPointAzimuthal(p0, p1) {\n  return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}","import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { acos, atan2, cos, sin, sqrt, tan } from \"./math\";\nimport twoPoint from \"./twoPoint\"; // TODO clip to ellipse\n\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [(za - zb) / (2 * z0), ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)];\n  }\n\n  forward.invert = function (x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0), (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)];\n  };\n\n  return forward;\n}\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39]).clipAngle(130).scale(122.571);\n}\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrintenRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      G = cosTheta / (sinTheta + cosTheta - 1),\n      P = G * (2 / sinTheta - 1),\n      P2 = P * P,\n      P2_A2 = P2 + A2,\n      G_P2 = G - P2,\n      Q = A2 + G;\n  return [sign(lambda) * pi * (A * G_P2 + sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2, sign(phi) * pi * (P * Q - A * sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2];\n}\n\nvanDerGrintenRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  if (abs(x) < epsilon) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x2 = (x /= pi) * x,\n      y2 = (y /= pi) * y,\n      x2_y2 = x2 + y2,\n      z = x2_y2 * x2_y2,\n      c1 = -abs(y) * (1 + x2_y2),\n      c2 = c1 - 2 * y2 + x2,\n      c3 = -2 * c1 + 1 + 2 * y2 + z,\n      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,\n      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,\n      m1 = 2 * sqrt(-a1 / 3),\n      theta1 = acos(3 * d / (a1 * m1)) / 3;\n  return [pi * (x2_y2 - 1 + sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x), sign(y) * pi * (-m1 * cos(theta1 + pi / 3) - c2 / (3 * c3))];\n};\n\nexport default function () {\n  return projection(vanDerGrintenRaw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, atan2, cos, halfPi, epsilon, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrinten2Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      x1 = cosTheta * (sqrt(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);\n  return [sign(lambda) * pi * x1, sign(phi) * pi * sqrt(1 - x1 * (2 * A + x1))];\n}\n\nvanDerGrinten2Raw.invert = function (x, y) {\n  if (!x) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x1 = abs(x / pi),\n      A = (1 - x1 * x1 - (y /= pi) * y) / (2 * x1),\n      A2 = A * A,\n      B = sqrt(A2 + 1);\n  return [sign(x) * pi * (B - A), sign(y) * halfPi * sin(2 * atan2(sqrt((1 - 2 * A * x1) * (A + B) - x1), sqrt(B + A + x1)))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten2Raw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A), pi * y1];\n}\n\nvanDerGrinten3Raw.invert = function (x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0, halfPi * sin(2 * atan(y1))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten3Raw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, halfPi, pi, sign, sqrt } from \"./math\";\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [sign(lambda) * halfPi * x1, sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)];\n}\n\nvanDerGrinten4Raw.invert = function (x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = 2 * y,\n      i = 50;\n\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n\n  return [sign(x) * (sqrt(D * D + 4) + D) * pi / 4, halfPi * B];\n};\n\nexport default function () {\n  return projection(vanDerGrinten4Raw).scale(127.16);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { sqrt, pi } from \"./math\";\nimport { mollweideBromleyRaw } from \"./mollweide\";\nvar A = 4 * pi + 3 * sqrt(3),\n    B = 2 * sqrt(2 * pi * sqrt(3) / A);\nexport var wagner4Raw = mollweideBromleyRaw(B * sqrt(3) / pi, B, A / 6);\nexport default function () {\n  return projection(wagner4Raw).scale(176.84);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function wagner6Raw(lambda, phi) {\n  return [lambda * sqrt(1 - 3 * phi * phi / (pi * pi)), phi];\n}\n\nwagner6Raw.invert = function (x, y) {\n  return [x / sqrt(1 - 3 * y * y / (pi * pi)), y];\n};\n\nexport default function () {\n  return projection(wagner6Raw).scale(152.63);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt, tan } from \"./math\";\nexport function wagner7Raw(lambda, phi) {\n  var s = 0.90631 * sin(phi),\n      c0 = sqrt(1 - s * s),\n      c1 = sqrt(2 / (1 + c0 * cos(lambda /= 3)));\n  return [2.66723 * c0 * c1 * sin(lambda), 1.24104 * s * c1];\n}\n\nwagner7Raw.invert = function (x, y) {\n  var t1 = x / 2.66723,\n      t2 = y / 1.24104,\n      p = sqrt(t1 * t1 + t2 * t2),\n      c = 2 * asin(p / 2);\n  return [3 * atan2(x * tan(c), 2.66723 * p), p && asin(y * sin(c) / (1.24104 * 0.90631 * p))];\n};\n\nexport default function () {\n  return projection(wagner7Raw).scale(172.632);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [sinLambda * cosPhi - cosLambda * sin1_Phi, -cosLambda * cosPhi - sinLambda * sin1_Phi];\n}\n\nwiechelRaw.invert = function (x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [atan2(k * b, D * (1 + w)), D ? -asin(k * a / D) : 0];\n};\n\nexport default function () {\n  return projection(wiechelRaw).rotate([0, -90, 45]).scale(124.75).clipAngle(180 - 1e-3);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { aitoffRaw } from \"./aitoff\";\nimport { halfPi, epsilon, sin, cos, sqrt, abs, acos } from \"./math\";\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [(coordinates[0] + lambda / halfPi) / 2, (coordinates[1] + phi) / 2];\n}\n\nwinkel3Raw.invert = function (x, y) {\n  var lambda = x,\n      phi = y,\n      i = 25;\n\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n\n  return [lambda, phi];\n};\n\nexport default function () {\n  return projection(winkel3Raw).scale(158.837);\n}","export { default as geoAiry, airyRaw as geoAiryRaw } from \"./src/airy\";\nexport { default as geoAitoff, aitoffRaw as geoAitoffRaw } from \"./src/aitoff\";\nexport { default as geoArmadillo, armadilloRaw as geoArmadilloRaw } from \"./src/armadillo\";\nexport { default as geoAugust, augustRaw as geoAugustRaw } from \"./src/august\";\nexport { default as geoBaker, bakerRaw as geoBakerRaw } from \"./src/baker\";\nexport { default as geoBerghaus, berghausRaw as geoBerghausRaw } from \"./src/berghaus\";\nexport { default as geoBoggs, boggsRaw as geoBoggsRaw } from \"./src/boggs\";\nexport { default as geoBonne, bonneRaw as geoBonneRaw } from \"./src/bonne\";\nexport { default as geoBottomley, bottomleyRaw as geoBottomleyRaw } from \"./src/bottomley\";\nexport { default as geoBromley, bromleyRaw as geoBromleyRaw } from \"./src/bromley\";\nexport { default as geoChamberlin, chamberlinRaw as geoChamberlinRaw, chamberlinAfrica as geoChamberlinAfrica } from \"./src/chamberlin\";\nexport { default as geoCollignon, collignonRaw as geoCollignonRaw } from \"./src/collignon\";\nexport { default as geoCraig, craigRaw as geoCraigRaw } from \"./src/craig\";\nexport { default as geoCraster, crasterRaw as geoCrasterRaw } from \"./src/craster\";\nexport { default as geoCylindricalEqualArea, cylindricalEqualAreaRaw as geoCylindricalEqualAreaRaw } from \"./src/cylindricalEqualArea\";\nexport { default as geoCylindricalStereographic, cylindricalStereographicRaw as geoCylindricalStereographicRaw } from \"./src/cylindricalStereographic\";\nexport { default as geoEckert1, eckert1Raw as geoEckert1Raw } from \"./src/eckert1.js\";\nexport { default as geoEckert2, eckert2Raw as geoEckert2Raw } from \"./src/eckert2.js\";\nexport { default as geoEckert3, eckert3Raw as geoEckert3Raw } from \"./src/eckert3.js\";\nexport { default as geoEckert4, eckert4Raw as geoEckert4Raw } from \"./src/eckert4.js\";\nexport { default as geoEckert5, eckert5Raw as geoEckert5Raw } from \"./src/eckert5.js\";\nexport { default as geoEckert6, eckert6Raw as geoEckert6Raw } from \"./src/eckert6.js\";\nexport { default as geoEisenlohr, eisenlohrRaw as geoEisenlohrRaw } from \"./src/eisenlohr.js\";\nexport { default as geoFahey, faheyRaw as geoFaheyRaw } from \"./src/fahey.js\";\nexport { default as geoFoucaut, foucautRaw as geoFoucautRaw } from \"./src/foucaut.js\";\nexport { default as geoGilbert } from \"./src/gilbert.js\";\nexport { default as geoGingery, gingeryRaw as geoGingeryRaw } from \"./src/gingery.js\";\nexport { default as geoGinzburg4, ginzburg4Raw as geoGinzburg4Raw } from \"./src/ginzburg4.js\";\nexport { default as geoGinzburg5, ginzburg5Raw as geoGinzburg5Raw } from \"./src/ginzburg5.js\";\nexport { default as geoGinzburg6, ginzburg6Raw as geoGinzburg6Raw } from \"./src/ginzburg6.js\";\nexport { default as geoGinzburg8, ginzburg8Raw as geoGinzburg8Raw } from \"./src/ginzburg8.js\";\nexport { default as geoGinzburg9, ginzburg9Raw as geoGinzburg9Raw } from \"./src/ginzburg9.js\";\nexport { default as geoGringorten, gringortenRaw as geoGringortenRaw } from \"./src/gringorten.js\";\nexport { default as geoGuyou, guyouRaw as geoGuyouRaw } from \"./src/guyou.js\";\nexport { default as geoHammer, hammerRaw as geoHammerRaw } from \"./src/hammer.js\";\nexport { default as geoHammerRetroazimuthal, hammerRetroazimuthalRaw as geoHammerRetroazimuthalRaw } from \"./src/hammerRetroazimuthal.js\";\nexport { default as geoHealpix, healpixRaw as geoHealpixRaw } from \"./src/healpix.js\";\nexport { default as geoHill, hillRaw as geoHillRaw } from \"./src/hill.js\";\nexport { default as geoHomolosine, homolosineRaw as geoHomolosineRaw } from \"./src/homolosine.js\";\nexport { default as geoInterrupt } from \"./src/interrupted/index\";\nexport { default as geoInterruptedBoggs } from \"./src/interrupted/boggs\";\nexport { default as geoInterruptedHomolosine } from \"./src/interrupted/homolosine\";\nexport { default as geoInterruptedMollweide } from \"./src/interrupted/mollweide\";\nexport { default as geoInterruptedMollweideHemispheres } from \"./src/interrupted/mollweideHemispheres\";\nexport { default as geoInterruptedSinuMollweide } from \"./src/interrupted/sinuMollweide\";\nexport { default as geoInterruptedSinusoidal } from \"./src/interrupted/sinusoidal\";\nexport { default as geoKavrayskiy7, kavrayskiy7Raw as geoKavrayskiy7Raw } from \"./src/kavrayskiy7.js\";\nexport { default as geoLagrange, lagrangeRaw as geoLagrangeRaw } from \"./src/lagrange.js\";\nexport { default as geoLarrivee, larriveeRaw as geoLarriveeRaw } from \"./src/larrivee\";\nexport { default as geoLaskowski, laskowskiRaw as geoLaskowskiRaw } from \"./src/laskowski\";\nexport { default as geoLittrow, littrowRaw as geoLittrowRaw } from \"./src/littrow.js\";\nexport { default as geoLoximuthal, loximuthalRaw as geoLoximuthalRaw } from \"./src/loximuthal.js\";\nexport { default as geoMiller, millerRaw as geoMillerRaw } from \"./src/miller\";\nexport { default as geoModifiedStereographic, modifiedStereographicRaw as geoModifiedStereographicRaw, modifiedStereographicAlaska as geoModifiedStereographicAlaska, modifiedStereographicGs48 as geoModifiedStereographicGs48, modifiedStereographicGs50 as geoModifiedStereographicGs50, modifiedStereographicMiller as geoModifiedStereographicMiller, modifiedStereographicLee as geoModifiedStereographicLee } from \"./src/modifiedStereographic\";\nexport { default as geoMollweide, mollweideRaw as geoMollweideRaw } from \"./src/mollweide\";\nexport { default as geoMtFlatPolarParabolic, mtFlatPolarParabolicRaw as geoMtFlatPolarParabolicRaw } from \"./src/mtFlatPolarParabolic\";\nexport { default as geoMtFlatPolarQuartic, mtFlatPolarQuarticRaw as geoMtFlatPolarQuarticRaw } from \"./src/mtFlatPolarQuartic\";\nexport { default as geoMtFlatPolarSinusoidal, mtFlatPolarSinusoidalRaw as geoMtFlatPolarSinusoidalRaw } from \"./src/mtFlatPolarSinusoidal\";\nexport { default as geoNaturalEarth, naturalEarthRaw as geoNaturalEarthRaw } from \"./src/naturalEarth\";\nexport { default as geoNellHammer, nellHammerRaw as geoNellHammerRaw } from \"./src/nellHammer\";\nexport { default as geoPatterson, pattersonRaw as geoPattersonRaw } from \"./src/patterson\";\nexport { default as geoPolyconic, polyconicRaw as geoPolyconicRaw } from \"./src/polyconic\";\nexport { default as geoPolyhedral } from \"./src/polyhedral/index.js\";\nexport { default as geoPolyhedralButterfly } from \"./src/polyhedral/butterfly.js\";\nexport { default as geoPolyhedralCollignon } from \"./src/polyhedral/collignon.js\";\nexport { default as geoPolyhedralWaterman } from \"./src/polyhedral/waterman.js\";\nexport { default as geoProject } from \"./src/project/index\";\nexport { default as geoGringortenQuincuncial } from \"./src/quincuncial/gringorten.js\";\nexport { default as geoPeirceQuincuncial } from \"./src/quincuncial/peirce.js\";\nexport { default as geoPierceQuincuncial } from \"./src/quincuncial/peirce.js\"; // DEPRECATED misspelling\n\nexport { default as geoQuantize } from \"./src/quantize\";\nexport { default as geoQuincuncial } from \"./src/quincuncial/index.js\";\nexport { default as geoRectangularPolyconic, rectangularPolyconicRaw as geoRectangularPolyconicRaw } from \"./src/rectangularPolyconic\";\nexport { default as geoRobinson, robinsonRaw as geoRobinsonRaw } from \"./src/robinson\";\nexport { default as geoSatellite, satelliteRaw as geoSatelliteRaw } from \"./src/satellite\";\nexport { default as geoSinuMollweide, sinuMollweideRaw as geoSinuMollweideRaw } from \"./src/sinuMollweide\";\nexport { default as geoSinusoidal, sinusoidalRaw as geoSinusoidalRaw } from \"./src/sinusoidal\";\nexport { default as geoStitch } from \"./src/stitch\";\nexport { default as geoTimes, timesRaw as geoTimesRaw } from \"./src/times\";\nexport { default as geoTwoPointAzimuthal, twoPointAzimuthalRaw as geoTwoPointAzimuthalRaw, twoPointAzimuthalUsa as geoTwoPointAzimuthalUsa } from \"./src/twoPointAzimuthal\";\nexport { default as geoTwoPointEquidistant, twoPointEquidistantRaw as geoTwoPointEquidistantRaw, twoPointEquidistantUsa as geoTwoPointEquidistantUsa } from \"./src/twoPointEquidistant\";\nexport { default as geoVanDerGrinten, vanDerGrintenRaw as geoVanDerGrintenRaw } from \"./src/vanDerGrinten\";\nexport { default as geoVanDerGrinten2, vanDerGrinten2Raw as geoVanDerGrinten2Raw } from \"./src/vanDerGrinten2\";\nexport { default as geoVanDerGrinten3, vanDerGrinten3Raw as geoVanDerGrinten3Raw } from \"./src/vanDerGrinten3\";\nexport { default as geoVanDerGrinten4, vanDerGrinten4Raw as geoVanDerGrinten4Raw } from \"./src/vanDerGrinten4\";\nexport { default as geoWagner4, wagner4Raw as geoWagner4Raw } from \"./src/wagner4.js\";\nexport { default as geoWagner6, wagner6Raw as geoWagner6Raw } from \"./src/wagner6.js\";\nexport { default as geoWagner7, wagner7Raw as geoWagner7Raw } from \"./src/wagner7.js\";\nexport { default as geoWiechel, wiechelRaw as geoWiechelRaw } from \"./src/wiechel.js\";\nexport { default as geoWinkel3, winkel3Raw as geoWinkel3Raw } from \"./src/winkel3\";","export default function (x) {\n  return x;\n}","import identity from \"./identity\";\nexport default function (topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n    return point;\n  };\n}","import transform from \"./transform\";\nexport default function (topology) {\n  var bbox = topology.bbox;\n\n  function bboxPoint(p0) {\n    p1[0] = p0[0], p1[1] = p0[1], t(p1);\n    if (p1[0] < x0) x0 = p1[0];\n    if (p1[0] > x1) x1 = p1[0];\n    if (p1[1] < y0) y0 = p1[1];\n    if (p1[1] > y1) y1 = p1[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(bboxGeometry);\n        break;\n\n      case \"Point\":\n        bboxPoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(bboxPoint);\n        break;\n    }\n  }\n\n  if (!bbox) {\n    var t = transform(topology),\n        p0,\n        p1 = new Array(2),\n        name,\n        x0 = Infinity,\n        y0 = x0,\n        x1 = -x0,\n        y1 = -x0;\n    topology.arcs.forEach(function (arc) {\n      var i = -1,\n          n = arc.length;\n\n      while (++i < n) {\n        p0 = arc[i], p1[0] = p0[0], p1[1] = p0[1], t(p1, i);\n        if (p1[0] < x0) x0 = p1[0];\n        if (p1[0] > x1) x1 = p1[0];\n        if (p1[1] < y0) y0 = p1[1];\n        if (p1[1] > y1) y1 = p1[1];\n      }\n    });\n\n    for (name in topology.objects) {\n      bboxGeometry(topology.objects[name]);\n    }\n\n    bbox = topology.bbox = [x0, y0, x1, y1];\n  }\n\n  return bbox;\n}","export default function (array, n) {\n  var t,\n      j = array.length,\n      i = j - n;\n\n  while (i < --j) {\n    t = array[i], array[i++] = array[j], array[j] = t;\n  }\n}","import reverse from \"./reverse\";\nimport transform from \"./transform\";\nexport default function (topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\nexport function object(topology, o) {\n  var transformPoint = transform(topology),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k].slice(), k));\n    }\n\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p.slice());\n  }\n\n  function line(arcs) {\n    var points = [];\n\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      arc(arcs[i], points);\n    }\n\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n\n    while (points.length < 4) {\n      points.push(points[0].slice());\n    }\n\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type,\n        coordinates;\n\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n\n      default:\n        return null;\n    }\n\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n\n  return geometry(o);\n}","export default function (topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1; // Stitch empty arcs first, since they may be subsumed by other arcs.\n\n  arcs.forEach(function (i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        t;\n\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n  arcs.forEach(function (i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f,\n        g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        p0 = arc[0],\n        p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n      p1[0] += dp[0], p1[1] += dp[1];\n    });else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function (i) {\n        stitchedArcs[i < 0 ? ~i : i] = 1;\n      });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function (i) {\n    if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n  });\n  return fragments;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\nexport default function (topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) {\n    arcs[i] = i;\n  }\n  return {\n    type: \"MultiLineString\",\n    arcs: stitch(topology, arcs)\n  };\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({\n      i: i,\n      g: geom\n    });\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"LineString\":\n        extract1(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        extract2(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        extract3(o.arcs);\n        break;\n    }\n  }\n\n  geometry(object);\n  geomsByArc.forEach(filter == null ? function (geoms) {\n    arcs.push(geoms[0].i);\n  } : function (geoms) {\n    if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i);\n  });\n  return arcs;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function (topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"Polygon\":\n        extract(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        o.arcs.forEach(extract);\n        break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function (ring) {\n      ring.forEach(function (arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {\n      type: \"Polygon\",\n      arcs: [ring]\n    }).coordinates[0]);\n  }\n\n  polygons.forEach(function (polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function (polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n  polygons.forEach(function (polygon) {\n    delete polygon._;\n  });\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function (polygons) {\n      var arcs = [],\n          n; // Extract the exterior (unique) arcs.\n\n      polygons.forEach(function (polygon) {\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      }); // Stitch the arcs into one or more rings.\n\n      arcs = stitch(topology, arcs); // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}","export default function (a, x) {\n  var lo = 0,\n      hi = a.length;\n\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;else hi = mid;\n  }\n\n  return lo;\n}","import bisect from \"./bisect\";\nexport default function (objects) {\n  var indexesByArc = {},\n      // arc index -> array of object indexes\n  neighbors = objects.map(function () {\n    return [];\n  });\n\n  function line(arcs, i) {\n    arcs.forEach(function (a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function (arc) {\n      line(arc, i);\n    });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function (o) {\n      geometry(o, i);\n    });else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function MultiPolygon(arcs, i) {\n      arcs.forEach(function (arc) {\n        polygon(arc, i);\n      });\n    }\n  };\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j],\n            ik = indexes[k],\n            n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}","import bbox from \"./bbox\";\nexport default function (topology, n) {\n  if (!((n = Math.floor(n)) >= 2)) throw new Error(\"n must be ≥2\");\n  if (topology.transform) throw new Error(\"already quantized\");\n  var bb = bbox(topology),\n      name,\n      dx = bb[0],\n      kx = (bb[2] - dx) / (n - 1) || 1,\n      dy = bb[1],\n      ky = (bb[3] - dy) / (n - 1) || 1;\n\n  function quantizePoint(p) {\n    p[0] = Math.round((p[0] - dx) / kx);\n    p[1] = Math.round((p[1] - dy) / ky);\n  }\n\n  function quantizeGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(quantizePoint);\n        break;\n    }\n  }\n\n  topology.arcs.forEach(function (arc) {\n    var i = 1,\n        j = 1,\n        n = arc.length,\n        pi = arc[0],\n        x0 = pi[0] = Math.round((pi[0] - dx) / kx),\n        y0 = pi[1] = Math.round((pi[1] - dy) / ky),\n        pj,\n        x1,\n        y1;\n\n    for (; i < n; ++i) {\n      pi = arc[i];\n      x1 = Math.round((pi[0] - dx) / kx);\n      y1 = Math.round((pi[1] - dy) / ky);\n\n      if (x1 !== x0 || y1 !== y0) {\n        pj = arc[j++];\n        pj[0] = x1 - x0, x0 = x1;\n        pj[1] = y1 - y0, y0 = y1;\n      }\n    }\n\n    if (j < 2) {\n      pj = arc[j++];\n      pj[0] = 0;\n      pj[1] = 0;\n    }\n\n    arc.length = j;\n  });\n\n  for (name in topology.objects) {\n    quantizeGeometry(topology.objects[name]);\n  }\n\n  topology.transform = {\n    scale: [kx, ky],\n    translate: [dx, dy]\n  };\n  return topology;\n}","import identity from \"./identity\";\nexport default function (topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0, x0 = x1;\n    point[1] = y1 - y0, y0 = y1;\n    return point;\n  };\n}","export { default as bbox } from \"./src/bbox\";\nexport { default as feature } from \"./src/feature\";\nexport { default as mesh, meshArcs } from \"./src/mesh\";\nexport { default as merge, mergeArcs } from \"./src/merge\";\nexport { default as neighbors } from \"./src/neighbors\";\nexport { default as quantize } from \"./src/quantize\";\nexport { default as transform } from \"./src/transform\";\nexport { default as untransform } from \"./src/untransform\";","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    var r0 = Math.round(start / step),\n        r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n\n    while (++i < n) {\n      ticks[i] = (r0 + i) * step;\n    }\n  } else {\n    step = -step;\n\n    var _r = Math.round(start * step),\n        _r2 = Math.round(stop * step);\n\n    if (_r / step < start) ++_r;\n    if (_r2 / step > stop) --_r2;\n    ticks = new Array(n = _r2 - _r + 1);\n\n    while (++i < n) {\n      ticks[i] = (_r + i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending.js\";\nexport default function (f) {\n  var delta = f;\n  var compare = f;\n\n  if (f.length === 1) {\n    delta = function delta(d, x) {\n      return f(d) - x;\n    };\n\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n    }\n\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n    }\n\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    var i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {\n    left: left,\n    center: center,\n    right: right\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport var bisectCenter = bisector(number).center;\nexport default bisectRight;","import _regeneratorRuntime from \"C:\\\\Users\\\\Youssef\\\\Desktop\\\\PI\\\\MERN_NETWORK\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(numbers);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nexport default function (x) {\n  return x === null ? NaN : +x;\n}\nexport function numbers(values, valueof) {\n  var _iterator, _step, value, index, _iterator2, _step2, _value;\n\n  return _regeneratorRuntime.wrap(function numbers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(valueof === undefined)) {\n            _context.next = 21;\n            break;\n          }\n\n          _iterator = _createForOfIteratorHelper(values);\n          _context.prev = 2;\n\n          _iterator.s();\n\n        case 4:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 11;\n            break;\n          }\n\n          value = _step.value;\n\n          if (!(value != null && (value = +value) >= value)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 9;\n          return value;\n\n        case 9:\n          _context.next = 4;\n          break;\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](2);\n\n          _iterator.e(_context.t0);\n\n        case 16:\n          _context.prev = 16;\n\n          _iterator.f();\n\n          return _context.finish(16);\n\n        case 19:\n          _context.next = 40;\n          break;\n\n        case 21:\n          index = -1;\n          _iterator2 = _createForOfIteratorHelper(values);\n          _context.prev = 23;\n\n          _iterator2.s();\n\n        case 25:\n          if ((_step2 = _iterator2.n()).done) {\n            _context.next = 32;\n            break;\n          }\n\n          _value = _step2.value;\n\n          if (!((_value = valueof(_value, ++index, values)) != null && (_value = +_value) >= _value)) {\n            _context.next = 30;\n            break;\n          }\n\n          _context.next = 30;\n          return _value;\n\n        case 30:\n          _context.next = 25;\n          break;\n\n        case 32:\n          _context.next = 37;\n          break;\n\n        case 34:\n          _context.prev = 34;\n          _context.t1 = _context[\"catch\"](23);\n\n          _iterator2.e(_context.t1);\n\n        case 37:\n          _context.prev = 37;\n\n          _iterator2.f();\n\n          return _context.finish(37);\n\n        case 40:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 13, 16, 19], [23, 34, 37, 40]]);\n}","export default function (constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n\n  for (var key in definition) {\n    prototype[key] = definition[key];\n  }\n\n  return prototype;\n}","import define, { extend } from \"./define.js\";\nexport function Color() {}\nvar _darker = 0.7;\nexport { _darker as darker };\n\nvar _brighter = 1 / _darker;\n\nexport { _brighter as brighter };\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\ndefine(Color, color, {\n  copy: function copy(channels) {\n    return Object.assign(new this.constructor(), this, channels);\n  },\n  displayable: function displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex,\n  // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n  : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n  : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000\n  : null // invalid hex\n  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n  : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb();\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function rgb() {\n    return this;\n  },\n  displayable: function displayable() {\n    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  hex: rgb_formatHex,\n  // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity;\n  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl();\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n\n  return new Hsl(h, s, l, o.opacity);\n}\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n  },\n  displayable: function displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  formatHsl: function formatHsl() {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\") + (this.h || 0) + \", \" + (this.s || 0) * 100 + \"%, \" + (this.l || 0) * 100 + \"%\" + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n/* From FvD 13.37, CSS Color Module Level 3 */\n\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n}","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1,\n      t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n}\nexport default function (values) {\n  var n = values.length - 1;\n  return function (t) {\n    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}","export default (function (x) {\n  return function () {\n    return x;\n  };\n});","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function (t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function (a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}","import { rgb as colorRgb } from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, { gamma } from \"./color.js\";\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function (colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i,\n        color;\n\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function (t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);","import { basis } from \"./basis.js\";\nexport default function (values) {\n  var n = values.length;\n  return function (t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}","export default function (a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function (t) {\n    for (i = 0; i < n; ++i) {\n      c[i] = a[i] * (1 - t) + b[i] * t;\n    }\n\n    return c;\n  };\n}\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}","import value from \"./value.js\";\nimport numberArray, { isNumberArray } from \"./numberArray.js\";\nexport default function (a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) {\n    x[i] = value(a[i], b[i]);\n  }\n\n  for (; i < nb; ++i) {\n    c[i] = b[i];\n  }\n\n  return function (t) {\n    for (i = 0; i < na; ++i) {\n      c[i] = x[i](t);\n    }\n\n    return c;\n  };\n}","export default function (a, b) {\n  var d = new Date();\n  return a = +a, b = +b, function (t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}","export default function (a, b) {\n  return a = +a, b = +b, function (t) {\n    return a * (1 - t) + b * t;\n  };\n}","import number from \"./number.js\";\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function () {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function (t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function (a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0,\n      // scan index for next number in b\n  am,\n      // current match in a\n  bm,\n      // current match in b\n  bs,\n      // string preceding current number in b, if any\n  i = -1,\n      // index in s\n  s = [],\n      // string constants and placeholders\n  q = []; // number interpolators\n  // Coerce inputs to strings.\n\n  a = a + \"\", b = b + \"\"; // Interpolate pairs of numbers in a & b.\n\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({\n        i: i,\n        x: number(am, bm)\n      });\n    }\n\n    bi = reB.lastIndex;\n  } // Add remains of b.\n\n\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  } // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n    for (var i = 0, o; i < b; ++i) {\n      s[(o = q[i]).i] = o.x(t);\n    }\n\n    return s.join(\"\");\n  });\n}","import { color } from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport { genericArray } from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, { isNumberArray } from \"./numberArray.js\";\nexport default function (a, b) {\n  var t = typeof b,\n      c;\n  return b == null || t === \"boolean\" ? constant(b) : (t === \"number\" ? number : t === \"string\" ? (c = color(b)) ? (b = c, rgb) : string : b instanceof color ? rgb : b instanceof Date ? date : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object : number)(a, b);\n}","import value from \"./value.js\";\nexport default function (a, b) {\n  var i = {},\n      c = {},\n      k;\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function (t) {\n    for (k in i) {\n      c[k] = i[k](t);\n    }\n\n    return c;\n  };\n}","export default function (a, b) {\n  return a = +a, b = +b, function (t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}","export default function number(x) {\n  return +x;\n}","import { bisect } from \"d3-array\";\nimport { interpolate as interpolateValue, interpolateNumber, interpolateRound } from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\nvar unit = [0, 1];\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function (y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\nexport default function continuous() {\n  return transformer()(identity, identity);\n}","export default function constants(x) {\n  return function () {\n    return x;\n  };\n}","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function () {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width === undefined ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n};","export default function (x) {\n  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\"en\").replace(/,/g, \"\") : x.toString(10);\n} // Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\n\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}","import { formatDecimalParts } from \"./formatDecimal.js\";\nexport default function (x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}","import { formatDecimalParts } from \"./formatDecimal.js\";\nexport var prefixExponent;\nexport default function (x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}","import formatLocale from \"./locale.js\";\nvar locale;\nexport var format;\nexport var formatPrefix;\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}","import exponent from \"./exponent.js\";\nexport default function (step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function (s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\":\n        i0 = i1 = i;\n        break;\n\n      case \"0\":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n\n      default:\n        if (!+s[i]) break out;\n        if (i0 > 0) i0 = 0;\n        break;\n    }\n  }\n\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}","import { formatDecimalParts } from \"./formatDecimal.js\";\nexport default function (x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\nexport default {\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": formatDecimal,\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","export default function (x) {\n  return x;\n}","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport { prefixExponent } from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\nvar map = Array.prototype.map,\n    prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\nexport default function (locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type; // The \"n\" type is an alias for \",g\".\n\n    if (type === \"n\") comma = true, type = \"g\"; // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\"; // If zero fill is specified, padding goes after sign and before digits.\n\n    if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\"; // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\"; // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n\n    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i,\n          n,\n          c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n\n        var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.\n\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.\n\n        if (trim) value = formatTrim(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false; // Compute the prefix and suffix.\n\n        valuePrefix = (valueNegative ? sign === \"(\" ? sign : minus : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n      if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n      switch (align) {\n        case \"<\":\n          value = valuePrefix + value + valueSuffix + padding;\n          break;\n\n        case \"=\":\n          value = valuePrefix + padding + value + valueSuffix;\n          break;\n\n        case \"^\":\n          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n          break;\n\n        default:\n          value = padding + valuePrefix + value + valueSuffix;\n          break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function () {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function (value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}","export default function (grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}","export default function (numerals) {\n  return function (value) {\n    return value.replace(/[0-9]/g, function (i) {\n      return numerals[+i];\n    });\n  };\n}","import exponent from \"./exponent.js\";\nexport default function (step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}","import exponent from \"./exponent.js\";\nexport default function (step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}","import { tickStep } from \"d3-array\";\nimport { format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound } from \"d3-format\";\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n  switch (specifier.type) {\n    case \"s\":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return formatPrefix(specifier, value);\n      }\n\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n\n    case \"f\":\n    case \"%\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n  }\n\n  return format(specifier);\n}","import { ticks, tickIncrement } from \"d3-array\";\nimport continuous, { copy } from \"./continuous.js\";\nimport { initRange } from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n\n      if (step === prestep) {\n        d[i0] = start;\n        d[i1] = stop;\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n  return linearish(scale);\n}","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0:\n      break;\n\n    case 1:\n      this.range(domain);\n      break;\n\n    default:\n      this.range(range).domain(domain);\n      break;\n  }\n\n  return this;\n}\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0:\n      break;\n\n    case 1:\n      {\n        if (typeof domain === \"function\") this.interpolator(domain);else this.range(domain);\n        break;\n      }\n\n    default:\n      {\n        this.domain(domain);\n        if (typeof interpolator === \"function\") this.interpolator(interpolator);else this.range(interpolator);\n        break;\n      }\n  }\n\n  return this;\n}"],"sourceRoot":""}