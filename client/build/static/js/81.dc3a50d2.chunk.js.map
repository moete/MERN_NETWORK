{"version":3,"sources":["components/ContainerHeader/index.js","routes/extensions/charts/recharts/area/Components/data.js","routes/extensions/charts/recharts/area/Components/SimpleAreaChart.js","routes/extensions/charts/recharts/area/Components/StackedAreaChart.js","routes/extensions/charts/recharts/area/Components/PercentAreaChart.js","routes/extensions/charts/recharts/area/Components/AreaChartConnectNulls.js","routes/extensions/charts/recharts/area/Components/SynchronizedAreaChart.js","routes/extensions/charts/recharts/area/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContainerHeader","_ref","title","match","a","createElement","className","data","name","uv","price","amt","SimpleAreaChart","react_default","es6","width","height","margin","top","right","left","bottom","dataKey","strokeDasharray","type","fillOpacity","stroke","fill","StackedAreaChart","stackId","month","b","c","toPercent","decimal","fixed","arguments","length","undefined","concat","toFixed","renderTooltipContent","o","payload","label","total","reduce","result","entry","value","map","index","key","style","color","getPercent","PercentAreaChart","stackOffset","tickFormatter","content","AreaChartConnectNulls","connectNulls","SynchronizedAreaChart","syncId","AreaChart","IntlMessages","id","row","col","lg","md","sm","xs","card","Components_SimpleAreaChart","Components_StackedAreaChart","Components_AreaChartConnectNulls","Components_SynchronizedAreaChart","Components_PercentAreaChart"],"mappings":"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","file":"static/js/81.dc3a50d2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  return (\r\n    <div className=\"gx-page-heading\">\r\n      <h2 className=\"gx-page-title\">{title}</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","const data = [\r\n  {name: 'Page A', uv: 4000, price: 2400, amt: 2400},\r\n  {name: 'Page B', uv: 3000, price: 1398, amt: 2210},\r\n  {name: 'Page C', uv: 2000, price: 9800, amt: 2290},\r\n  {name: 'Page D', uv: 2780, price: 3908, amt: 2000},\r\n  {name: 'Page E', uv: 1890, price: 4800, amt: 2181},\r\n  {name: 'Page F', uv: 2390, price: 3800, amt: 2500},\r\n  {name: 'Page G', uv: 3490, price: 4300, amt: 2100},\r\n];\r\nexport default data;\r\n","import React from \"react\";\r\nimport {Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport data from \"./data\";\r\n\r\nconst SimpleAreaChart = () => (\r\n  <ResponsiveContainer width=\"100%\" height={200}>\r\n    <AreaChart data={data}\r\n               margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n      <XAxis dataKey=\"name\"/>\r\n      <YAxis/>\r\n      <CartesianGrid strokeDasharray=\"3 3\"/>\r\n      <Tooltip/>\r\n      <Area type='monotone' dataKey='uv' fillOpacity={1} stroke='#003366' fill='#003366'/>\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SimpleAreaChart;\r\n","import React from \"react\";\r\nimport {Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport data from \"./data\";\r\n\r\nconst StackedAreaChart = () => (\r\n  <ResponsiveContainer width=\"100%\" height={200}>\r\n    <AreaChart data={data}\r\n               margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n      <XAxis dataKey=\"name\"/>\r\n      <YAxis/>\r\n      <CartesianGrid strokeDasharray=\"3 3\"/>\r\n      <Tooltip/>\r\n      <Area type='monotone' dataKey='uv' stackId=\"1\" fillOpacity={1} stroke='#003366' fill='#003366'/>\r\n      <Area type='monotone' dataKey=\"price\" stackId=\"1\" fillOpacity={1} stroke='#59AA2B' fill='#59AA2B'/>\r\n      <Area type='monotone' dataKey='amt' stackId=\"1\" fillOpacity={1} stroke='#FE9E15' fill='#FE9E15'/>\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default StackedAreaChart;\r\n","import React from \"react\";\r\nimport {Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\n\r\nconst data = [\r\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\r\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\r\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\r\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\r\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\r\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\r\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\r\n];\r\n\r\nconst getPercent = (value, total) => {\r\n  const ratio = total > 0 ? value / total : 0;\r\n\r\n  return toPercent(ratio, 2);\r\n};\r\n\r\nconst toPercent = (decimal, fixed = 0) => {\r\n  return `${(decimal * 100).toFixed(fixed)}%`;\r\n};\r\nconst renderTooltipContent = (o) => {\r\n  const {payload, label} = o;\r\n  const total = payload.reduce((result, entry) => (result + entry.value), 0);\r\n\r\n  return (\r\n    <div className=\"customized-tooltip-content\">\r\n      <p className=\"total\">{`${label} (Total: ${total})`}</p>\r\n      <ul className=\"list\">\r\n        {\r\n          payload.map((entry, index) => (\r\n            <li key={`item-${index}`} style={{color: entry.color}}>\r\n              {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nconst PercentAreaChart = () => (\r\n  <ResponsiveContainer width=\"100%\" height={200}>\r\n    <AreaChart data={data} stackOffset=\"expand\"\r\n               margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n      <XAxis dataKey=\"month\"/>\r\n      <YAxis tickFormatter={toPercent}/>\r\n      <CartesianGrid strokeDasharray=\"3 3\"/>\r\n      <Tooltip content={renderTooltipContent}/>\r\n      <Area type='monotone' dataKey='a' stackId=\"1\" fillOpacity={1} stroke='#003366' fill='#003366'/>\r\n      <Area type='monotone' dataKey='b' stackId=\"1\" fillOpacity={1} stroke='#59AA2B' fill='#59AA2B'/>\r\n      <Area type='monotone' dataKey='c' stackId=\"1\" fillOpacity={1} stroke='#FE9E15' fill='#FE9E15'/>\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PercentAreaChart;\r\n","import React from \"react\";\r\nimport {Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\n\r\nconst data = [\r\n  {name: 'Page A', uv: 4000},\r\n  {name: 'Page B', uv: 3000},\r\n  {name: 'Page C', uv: 2000},\r\n  {name: 'Page D'},\r\n  {name: 'Page E', uv: 1890},\r\n  {name: 'Page F', uv: 2390},\r\n  {name: 'Page G', uv: 3490},\r\n];\r\nconst AreaChartConnectNulls = () => (\r\n  <ResponsiveContainer width=\"100%\">\r\n    <div>\r\n      <div className=\"mb-5\">\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          <AreaChart data={data}\r\n                     margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n            <XAxis dataKey=\"name\"/>\r\n            <YAxis/>\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <Tooltip/>\r\n            <Area type='monotone' dataKey='uv' fillOpacity={1} stroke='#003366' fill='#003366'/>\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          <AreaChart data={data}\r\n                     margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n            <XAxis dataKey=\"name\"/>\r\n            <YAxis/>\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <Tooltip/>\r\n            <Area connectNulls={true} type='monotone' dataKey='uv' fillOpacity={1} stroke='#003366' fill='#003366'/>\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default AreaChartConnectNulls;\r\n","import React from \"react\";\r\nimport {Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from \"recharts\";\r\nimport data from \"./data\";\r\n\r\nconst SynchronizedAreaChart = () => (\r\n  <ResponsiveContainer width=\"100%\">\r\n    <div>\r\n      <p className=\"mb-4\">A demo of synchronized AreaCharts</p>\r\n      <div className=\"mb-4\">\r\n\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          <AreaChart data={data} syncId=\"anyId\"\r\n                     margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n            <XAxis dataKey=\"name\"/>\r\n            <YAxis/>\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <Tooltip/>\r\n            <Area type='monotone' dataKey='uv' fillOpacity={1} stroke='#003366' fill='#003366'/>\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <p className=\"mb-4\">Maybe some other content</p>\r\n      <div className=\"mb-4\">\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          <AreaChart data={data} syncId=\"anyId\"\r\n                     margin={{top: 10, right: 0, left: -15, bottom: 0}}>\r\n            <XAxis dataKey=\"name\"/>\r\n            <YAxis/>\r\n            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n            <Tooltip/>\r\n            <Area type='monotone' dataKey=\"price\" fillOpacity={1} stroke='#FE9E15' fill='#FE9E15'/>\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SynchronizedAreaChart;\r\n","import React from \"react\";\r\nimport {Card, Col, Row} from \"antd\";\r\n\r\nimport SimpleAreaChart from \"./Components/SimpleAreaChart\";\r\nimport StackedAreaChart from \"./Components/StackedAreaChart\";\r\nimport PercentAreaChart from \"./Components/PercentAreaChart\";\r\nimport AreaChartConnectNulls from \"./Components/AreaChartConnectNulls\";\r\nimport SynchronizedAreaChart from \"./Components/SynchronizedAreaChart\";\r\nimport ContainerHeader from \"components/ContainerHeader\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\n\r\nconst AreaChart = ({match}) => {\r\n  return (\r\n    <div className=\"gx-main-content\">\r\n      <ContainerHeader title={<IntlMessages id=\"sidebar.chart.area\"/>} match={match}/>\r\n      <Row>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Simple Area Chart\">\r\n            <SimpleAreaChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Stacked Area Chart\">\r\n            <StackedAreaChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"AreaChart Connect Nulls\">\r\n            <AreaChartConnectNulls/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Synchronized Area Chart\">\r\n            <SynchronizedAreaChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Percent Area Chart\">\r\n            <PercentAreaChart/>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AreaChart;\r\n"],"sourceRoot":""}