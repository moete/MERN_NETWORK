{"version":3,"sources":["routes/algolia/urlSync.js","routes/algolia/Header.js","routes/algolia/SideBar.js","routes/algolia/Footer.js","routes/algolia/ProductItem.js","routes/algolia/ProductList.js","routes/algolia/index.js"],"names":["App","updateAfter","searchStateToUrl","searchState","concat","window","location","pathname","qs","stringify","ConnectedSearchBox","connectSearchBox","_ref","currentRefinement","refine","react_default","a","createElement","className","type","placeholder","value","onChange","e","target","autoComplete","id","AlgoliaHeader","SortBy","items","label","defaultRefinement","Sider","Layout","Sidebar","ClearRefinements","translations","reset","HierarchicalMenu","attributes","Panel","header","RefinementList","attribute","operator","limit","searchable","RatingMenu","max","RangeInput","href","Footer","children","ProductItem","item","console","log","icons","i","suffixClassName","rating","suffixXlink","push","key","aria-hidden","width","height","xlinkHref","src","image","alt","Highlight","hit","price","ProductList","hits","row","map","product","col","xl","lg","md","sm","xs","algolia_ProductItem","objectID","Content","CustomResults","connectStateResults","searchResult","nbHits","query","Stats","ConnectedProducts","connectHits","withUrlSync","props","InstantSearch","appId","apiKey","indexName","createURL","onSearchStateChange","Configure","hitsPerPage","layout","SideBar","Header","Pagination","showLast","_Component","urlSync","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clearTimeout","debouncedSetState","setTimeout","history","pushState","setState","state","parse","search","slice","addEventListener","inherits","createClass","assign","Component"],"mappings":"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","file":"static/js/93.3868354d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport qs from 'qs';\r\n\r\nconst updateAfter = 700;\r\nconst searchStateToUrl = searchState =>\r\n  searchState ? `${window.location.pathname}?${qs.stringify(searchState)}` : '';\r\n\r\nexport const withUrlSync = App =>\r\n  class urlSync extends Component {\r\n    onSearchStateChange = searchState => {\r\n      clearTimeout(this.debouncedSetState);\r\n      this.debouncedSetState = setTimeout(() => {\r\n        window.history.pushState(\r\n          searchState,\r\n          null,\r\n          searchStateToUrl(searchState)\r\n        );\r\n      }, updateAfter);\r\n      this.setState({searchState});\r\n    };\r\n\r\n    constructor() {\r\n      super();\r\n      this.state = {searchState: qs.parse(window.location.search.slice(1))};\r\n      window.addEventListener('popstate', ({state: searchState}) =>\r\n        this.setState({searchState})\r\n      );\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <App\r\n          {...this.props}\r\n          searchState={this.state.searchState}\r\n          onSearchStateChange={this.onSearchStateChange}\r\n          createURL={searchStateToUrl}\r\n        />\r\n      );\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport {connectSearchBox, SortBy} from \"react-instantsearch-dom\";\r\n\r\nconst AlgoliaHeader = () => (\r\n  <div className=\"gx-algolia-header\">\r\n    <ConnectedSearchBox/>\r\n    <div className=\"gx-algolia-sort-by\">\r\n      <label>Sort by</label>\r\n      <SortBy\r\n        items={[\r\n          {value: 'ikea', label: 'Featured'},\r\n          {value: 'ikea_price_asc', label: 'Price asc.'},\r\n          {value: 'ikea_price_desc', label: 'Price desc.'},\r\n        ]}\r\n        defaultRefinement=\"ikea\"\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\nconst CustomSearchBox = ({currentRefinement, refine}) => (\r\n  <div className=\"gx-search-bar gx-lt-icon-search-bar\">\r\n    <div className=\"gx-form-group\">\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search here...\"\r\n        value={currentRefinement}\r\n        onChange={e => refine(e.target.value)}\r\n        autoComplete=\"off\"\r\n        className=\"ant-input form-control\"\r\n        id=\"q\"\r\n      />\r\n      <span className=\"gx-search-icon gx-pointer\"><i className=\"icon icon-search\"/></span>\r\n    </div>\r\n  </div>\r\n);\r\nconst ConnectedSearchBox = connectSearchBox(CustomSearchBox);\r\n\r\nexport default AlgoliaHeader;\r\n","import React from \"react\";\r\nimport {Layout} from \"antd\";\r\nimport {\r\n  ClearRefinements,\r\n  HierarchicalMenu,\r\n  Panel,\r\n  RangeInput,\r\n  RatingMenu,\r\n  RefinementList,\r\n} from \"react-instantsearch-dom\";\r\n\r\nconst {Sider} = Layout;\r\nconst Sidebar = () => (\r\n  <Sider className=\"gx-algolia-sidebar\">\r\n    <div className=\"gx-algolia-sidebar-content\">\r\n      <ClearRefinements\r\n        translations={{\r\n          reset: 'Clear all filters',\r\n        }}\r\n      />\r\n\r\n      <div className=\"gx-algolia-category-item\">\r\n        <div className=\"gx-algolia-category-title\">Show results for</div>\r\n        <HierarchicalMenu\r\n          attributes={['category', 'sub_category', 'sub_sub_category']}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"gx-algolia-category-item\">\r\n        <div className=\"gx-algolia-category-title\">Refine By</div>\r\n\r\n        <Panel header={<span>Type</span>}>\r\n          <RefinementList className=\"gx-algolia-refinementList\" attribute=\"type\" operator=\"or\" limit={5} searchable/>\r\n        </Panel>\r\n\r\n        <Panel header={<span>Materials</span>}>\r\n          <RefinementList className=\"gx-algolia-refinementList\"\r\n                          attribute=\"materials\"\r\n                          operator=\"or\"\r\n                          limit={5}\r\n                          searchable\r\n          />\r\n        </Panel>\r\n\r\n\r\n        <Panel header={<span>Rating</span>}>\r\n          <RatingMenu className=\"gx-algolia-refinementList\" attribute=\"rating\" max={5}/>\r\n        </Panel>\r\n\r\n        <Panel header={<span>Price</span>}>\r\n          <RangeInput className=\"gx-algolia-refinementList\" attribute=\"price\"/>\r\n        </Panel>\r\n      </div>\r\n\r\n      <div className=\"thank-you\">\r\n        Data courtesy of <a href=\"http://www.ikea.com/\">ikea.com</a>\r\n      </div>\r\n    </div>\r\n  </Sider>\r\n);\r\n\r\n\r\nexport default Sidebar;\r\n\r\n","import React from \"react\";\r\n\r\nexport default ({children}) =>\r\n  <div className=\"gx-algolia-footer\">\r\n    {children}\r\n  </div>\r\n","import React from \"react\";\r\nimport {Highlight,} from 'react-instantsearch-dom';\r\n\r\n\r\nconst ProductItem = ({item}) => {\r\n  console.log(item);\r\n  const icons = [];\r\n  for (let i = 0; i < 5; i++) {\r\n    const suffixClassName = i >= item.rating ? '--empty' : '';\r\n    const suffixXlink = i >= item.rating ? 'Empty' : '';\r\n\r\n    icons.push(\r\n      <svg\r\n        key={i}\r\n        className={`ais-RatingMenu-starIcon ais-RatingMenu-starIcon${suffixClassName}`}\r\n        aria-hidden=\"true\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n      >\r\n        <use xlinkHref={`#ais-RatingMenu-star${suffixXlink}Symbol`}/>\r\n      </svg>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"gx-product-item gx-product-vertical\">\r\n      <div className=\"gx-product-image\">\r\n        <img\r\n          src={`https://res.cloudinary.com/hilnmyskv/image/fetch/h_300,q_100,f_auto/${\r\n            item.image\r\n            }`} alt=''\r\n        />\r\n      </div>\r\n      <div className=\"gx-product-body\">\r\n\r\n        <div className=\"gx-product-name\">\r\n          <Highlight attribute=\"name\" hit={item}/>\r\n        </div>\r\n        <div className=\"gx-mb-3\">\r\n          <Highlight attribute=\"type\" hit={item}/>\r\n        </div>\r\n        <div className=\"ais-RatingMenu-link\">{icons}</div>\r\n        <div className=\"gx-product-price\">${item.price}</div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from 'react';\r\nimport {Col, Row} from 'antd';\r\n\r\nimport ProductItem from './ProductItem';\r\n\r\nconst ProductList = ({hits}) => {\r\n  return (\r\n    <div id=\"product\">\r\n      <Row>\r\n        {hits.map(product => (\r\n          <Col xl={8} lg={12} md={12} sm={12} xs={24}>\r\n            <ProductItem item={product} key={product.objectID}/>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport {Layout} from \"antd\";\r\nimport {Configure, connectHits, connectStateResults, InstantSearch, Pagination, Stats,} from 'react-instantsearch-dom';\r\nimport {withUrlSync} from './urlSync';\r\nimport 'instantsearch.css/themes/algolia.css';\r\n//import './style.css'\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./SideBar\";\r\nimport Footer from \"./Footer\";\r\nimport ProductList from \"./ProductList\";\r\n\r\nconst {Content} = Layout;\r\n\r\nconst App = props => (\r\n  <InstantSearch className=\"gx-main-content\"\r\n                 appId=\"latency\"// use your key here\r\n                 apiKey=\"6be0576ff61c053d5f9a3225e2a90f76\"// use your key here\r\n                 indexName=\"ikea\"\r\n                 searchState={props.searchState}\r\n                 createURL={props.createURL}\r\n                 onSearchStateChange={props.onSearchStateChange}>\r\n\r\n    <Configure hitsPerPage={16}/>\r\n\r\n    <Layout className=\"gx-algolia-layout-has-sider\">\r\n      <Sidebar/>\r\n      <div className=\"gx-algolia-main\">\r\n        <Header/>\r\n        <Content className=\"gx-algolia-content\">\r\n          <CustomResults/>\r\n        </Content>\r\n        <Footer>\r\n          <Pagination showLast={true}/>\r\n        </Footer>\r\n      </div>\r\n    </Layout>\r\n  </InstantSearch>\r\n);\r\n\r\n\r\nconst CustomResults = connectStateResults(({searchState, searchResult}) => {\r\n  if (searchResult && searchResult.nbHits === 0) {\r\n    return (\r\n      <div className=\"gx-algolia-content-inner\">\r\n        <div className=\"gx-algolia-no-results\">\r\n          No results found matching{' '}\r\n          <span className=\"gx-algolia-query\">{searchState.query}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"gx-algolia-content-inner\">\r\n        <Stats/>\r\n        <ConnectedProducts/>\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nconst ConnectedProducts = connectHits(ProductList);\r\n\r\nexport default withUrlSync(App);\r\n"],"sourceRoot":""}