{"version":3,"sources":["../node_modules/@amcharts/amcharts3-react/index.js","components/ContainerHeader/index.js","../node_modules/@amcharts/amcharts3-react/amcharts3-react.js","routes/extensions/charts/amchart/area/Components/LineWithChangingColor.js","routes/extensions/charts/amchart/line/Components/DateBasedLine.js","routes/extensions/charts/amchart/line/Components/LineChartWithScrollAndZoom.js","routes/extensions/charts/amchart/line/Components/LineWithDifferentColors.js","routes/extensions/charts/amchart/line/Components/SmoothedLineChart.js","routes/extensions/charts/amchart/line/Components/TrendLines.js","routes/extensions/charts/amchart/line/Components/FillBetweenTwoLines.js","routes/extensions/charts/amchart/line/Components/StepLineChart.js","routes/extensions/charts/amchart/line/Components/LineWithCustomBullets.js","routes/extensions/charts/amchart/line/Components/VerticalLineChart.js","routes/extensions/charts/amchart/line/Components/ChartWithGapsInData.js","routes/extensions/charts/amchart/line/Components/MultipleValueAxes.js","routes/extensions/charts/amchart/line/Components/LogarithmicScale.js","routes/extensions/charts/amchart/line/Components/LineWithDifferentNegativeColor.js","routes/extensions/charts/amchart/line/index.js"],"names":["window","React","__webpack_require__","ReactDOM","createReactClass","module","exports","AmCharts","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContainerHeader","_ref","title","match","a","createElement","className","getType","x","toString","call","hasOwnKey","obj","key","hasOwnProperty","copy","length","output","Array","i","copyArray","copyObject","Date","getTime","isNaN","removeChartListeners","chart","y","xLength","yLength","xValue","has","j","yValue","event","method","removeListener","update","didUpdate","xType","updateArray","updateObject","isNumberEqual","oldObj","newObj","id","getInitialState","componentDidMount","props","this","options","makeChart","state","delay","setState","componentDidUpdate","oldProps","validateNow","componentWillUnmount","clear","render","style","_amcharts_amcharts3_react__WEBPACK_IMPORTED_MODULE_1__","_amcharts_amcharts3_react__WEBPACK_IMPORTED_MODULE_1___default","LineWithChangingColor","width","height","type","theme","marginRight","dataProvider","lineColor","date","duration","balloon","cornerRadius","horizontalPadding","verticalPadding","valueAxes","durationUnits","hh","mm","axisAlpha","graphs","bullet","bulletBorderAlpha","bulletBorderThickness","fillAlphas","fillColorsField","legendValueText","lineColorField","valueField","chartScrollbar","chartCursor","categoryBalloonDateFormat","cursorAlpha","fullWidth","dataDateFormat","categoryField","categoryAxis","dateFormats","period","format","parseDates","autoGridCount","axisColor","gridAlpha","gridCount","export","enabled","DateBasedLine","react_default","amcharts3_react_default","marginLeft","autoMarginOffset","mouseWheelZoomEnabled","position","ignoreAxisWidth","borderThickness","shadowAlpha","drop","adjustBorderColor","color","bulletColor","bulletSize","hideBulletsCount","lineThickness","useLineColorForBulletBorder","balloonText","graph","oppositeAxis","offset","scrollbarHeight","backgroundAlpha","selectedBackgroundAlpha","selectedBackgroundColor","graphFillAlpha","graphLineAlpha","selectedGraphFillAlpha","selectedGraphLineAlpha","pan","valueLineEnabled","valueLineBalloonEnabled","cursorColor","limitToGraph","valueLineAlpha","valueZoomable","valueScrollbar","dashLength","minorGridEnabled","value","LineChartWithScrollAndZoom","config","marginTop","chartData","firstDate","setDate","getDate","visits","newDate","Math","round","random","push","generateChartData","LineWithDifferentColors","useNegativeColorIfDown","bulletBorderColor","negativeLineColor","backgroundColor","minHorizontalGap","SmoothedLineChart","year","graphLineColor","selectedGraphLineColor","minPeriod","minorGridAlpha","TrendLines","guides","fillAlpha","fillColor","lineAlpha","toValue","tickLength","colorField","trendLines","finalDate","finalValue","initialDate","initialValue","valueLineEabled","FillBetweenTwoLines","fromValue","showBalloon","fillToGraph","StepLineChart","titles","text","bulletAlpha","graphBulletAlpha","LineWithCustomBullets","customBullet","customBulletField","marginBottom","graphBulletSize","zoomable","autoMargins","inside","VerticalLineChart","rotate","maximum","minimum","categoryBalloonEnabled","ChartWithGapsInData","connect","MultipleValueAxes","legend","useGraphSettings","hits","views","synchronizeGrid","axisThickness","valueAxis","cursorPosition","LogarithmicScale","price","logarithmic","label","LineWithDifferentNegativeColor","b","LineChart","IntlMessages","row","col","lg","md","sm","xs","card","Components_DateBasedLine","Components_LineChartWithScrollAndZoom","Components_LineWithDifferentColors","Components_FillBetweenTwoLines","Components_SmoothedLineChart","Components_TrendLines","Components_StepLineChart","Components_LineWithCustomBullets","Components_VerticalLineChart","Components_ChartWithGapsInData","Components_MultipleValueAxes","Components_LogarithmicScale","Components_LineWithDifferentNegativeColor"],"mappings":"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D9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,GACR,CACD9E,KAAQ,aACR8E,MAAS,GACR,CACD9E,KAAQ,aACR8E,MAAS,GACR,CACD9E,KAAQ,aACR8E,MAAS,GACR,CACD9E,KAAQ,aACR8E,MAAS,GACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,KAAQ,aACR8E,MAAS,IACR,CACD9E,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","file":"static/js/27.37c2c771.chunk.js","sourcesContent":["if (typeof window !== \"undefined\") {\n  window.React = require(\"react\");\n  window.ReactDOM = require(\"react-dom\");\n  window.createReactClass = require(\"create-react-class\");\n\n  require(\"./amcharts3-react.js\");\n\n  module.exports = window.AmCharts;\n} else {\n  module.exports = {};\n}","import React from \"react\";\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  return (\r\n    <div className=\"gx-page-heading\">\r\n      <h2 className=\"gx-page-title\">{title}</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","(function () {\n  function getType(x) {\n    // TODO make this faster ?\n    return {}.toString.call(x);\n  }\n\n  function hasOwnKey(obj, key) {\n    return {}.hasOwnProperty.call(obj, key);\n  }\n\n  function copyObject(x) {\n    var output = {}; // TODO use Object.keys ?\n\n    for (var key in x) {\n      if (hasOwnKey(x, key)) {\n        output[key] = copy(x[key]);\n      }\n    }\n\n    return output;\n  }\n\n  function copyArray(x) {\n    var length = x.length;\n    var output = new Array(length);\n\n    for (var i = 0; i < length; ++i) {\n      output[i] = copy(x[i]);\n    }\n\n    return output;\n  } // TODO can this be made faster ?\n  // TODO what about regexps, etc. ?\n\n\n  function copy(x) {\n    switch (getType(x)) {\n      case \"[object Array]\":\n        return copyArray(x);\n\n      case \"[object Object]\":\n        return copyObject(x);\n      // TODO is this necessary ?\n\n      case \"[object Date]\":\n        return new Date(x.getTime());\n\n      default:\n        return x;\n    }\n  }\n\n  function isNaN(x) {\n    return x !== x;\n  }\n\n  function isNumberEqual(x, y) {\n    return x === y || isNaN(x) && isNaN(y);\n  }\n\n  function removeChartListeners(chart, x, y) {\n    if (x !== y) {\n      // TODO is this necessary ?\n      if (x == null) {\n        x = [];\n      } // TODO is this necessary ?\n\n\n      if (y == null) {\n        y = [];\n      }\n\n      var xLength = x.length;\n      var yLength = y.length;\n\n      for (var i = 0; i < xLength; ++i) {\n        var xValue = x[i];\n        var has = false; // TODO make this faster ?\n\n        for (var j = 0; j < yLength; ++j) {\n          var yValue = y[j]; // TODO is this correct ?\n\n          if (xValue.event === yValue.event && xValue.method === yValue.method) {\n            has = true;\n            break;\n          }\n        }\n\n        if (!has) {\n          // TODO is this correct ?\n          chart.removeListener(chart, xValue.event, xValue.method);\n        }\n      }\n    }\n  }\n\n  function updateArray(a, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      var xLength = x.length;\n      var yLength = y.length;\n\n      if (xLength !== yLength) {\n        a.length = yLength;\n        didUpdate = true;\n      }\n\n      for (var i = 0; i < yLength; ++i) {\n        if (i < xLength) {\n          if (update(a, i, x[i], y[i])) {\n            didUpdate = true;\n          }\n        } else {\n          // TODO make this faster ?\n          a[i] = copy(y[i]); // TODO is this necessary ?\n\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function update(obj, key, x, y) {\n    var didUpdate = false;\n\n    if (x !== y) {\n      // https://github.com/amcharts/amcharts3-react/issues/40\n      if (hasOwnKey(obj, key)) {\n        var xType = getType(x);\n        var yType = getType(y);\n\n        if (xType === yType) {\n          switch (xType) {\n            case \"[object Array]\":\n              // TODO hacky, remove this after the following bug is fixed:\n              //      Zendesk #28040\n              //      https://codepen.io/team/amcharts/pen/0d61f559cda74682c0ca55d9a24a0f77\n              //      https://www.amcharts.com/kbase/forcing-grouping-stock-chart-data-specific-periods/\n              if (key === \"groupToPeriods\") {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              } else {\n                if (updateArray(obj[key], x, y)) {\n                  didUpdate = true;\n                }\n              }\n\n              break;\n\n            case \"[object Object]\":\n              if (updateObject(obj[key], x, y)) {\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Date]\":\n              if (x.getTime() !== y.getTime()) {\n                // TODO make this faster ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            case \"[object Number]\":\n              if (!isNumberEqual(x, y)) {\n                // TODO is the copy necessary ?\n                obj[key] = copy(y);\n                didUpdate = true;\n              }\n\n              break;\n\n            default:\n              // TODO is the copy necessary ?\n              obj[key] = copy(y);\n              didUpdate = true;\n              break;\n          } // TODO is this correct ?\n\n        } else {\n          // TODO make this faster ?\n          obj[key] = copy(y);\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  function updateObject(chart, oldObj, newObj) {\n    var didUpdate = false;\n\n    if (oldObj !== newObj) {\n      // TODO use Object.keys ?\n      for (var key in newObj) {\n        if (hasOwnKey(newObj, key)) {\n          // TODO make this faster ?\n          if (hasOwnKey(oldObj, key)) {\n            // TODO should this count as an update ?\n            if (key === \"listeners\") {\n              // TODO make this faster ?\n              removeChartListeners(chart, oldObj[key], newObj[key]);\n            }\n\n            if (update(chart, key, oldObj[key], newObj[key])) {\n              didUpdate = true;\n            }\n          } else {\n            // TODO make this faster ?\n            chart[key] = copy(newObj[key]);\n            didUpdate = true;\n          }\n        }\n      } // TODO use Object.keys ?\n\n\n      for (var key in oldObj) {\n        if (hasOwnKey(oldObj, key) && !hasOwnKey(newObj, key)) {\n          if (key === \"listeners\") {\n            removeChartListeners(chart, oldObj[key], []);\n          }\n\n          delete chart[key];\n          didUpdate = true;\n        }\n      }\n    }\n\n    return didUpdate;\n  }\n\n  var id = 0;\n  AmCharts.React = createReactClass({\n    getInitialState: function getInitialState() {\n      return {\n        id: \"__AmCharts_React_\" + ++id + \"__\",\n        chart: null\n      };\n    },\n    componentDidMount: function componentDidMount() {\n      // AmCharts mutates the config object, so we have to make a deep copy to prevent that\n      var props = copy(this.props.options);\n      var chart = AmCharts.makeChart(this.state.id, props, this.props.delay);\n      this.setState({\n        chart: chart\n      });\n    },\n    // TODO is this correct ? should this use componentWillUpdate instead ?\n    componentDidUpdate: function componentDidUpdate(oldProps) {\n      if (this.state.chart) {\n        var didUpdate = updateObject(this.state.chart, oldProps.options, this.props.options); // TODO make this faster\n\n        if (didUpdate) {\n          this.state.chart.validateNow(true);\n        }\n      }\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      if (this.state.chart) {\n        this.state.chart.clear();\n      }\n    },\n    render: function render() {\n      return React.createElement(\"div\", {\n        id: this.state.id,\n        className: this.props.className,\n        style: this.props.style\n      });\n    }\n  });\n})();","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst LineWithChangingColor = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginRight\": 80,\r\n    \"dataProvider\": [{\r\n      \"lineColor\": \"#b7e021\",\r\n      \"date\": \"2012-01-01\",\r\n      \"duration\": 408\r\n    }, {\r\n      \"date\": \"2019-01-02\",\r\n      \"duration\": 482\r\n    }, {\r\n      \"date\": \"2019-01-03\",\r\n      \"duration\": 562\r\n    }, {\r\n      \"date\": \"2019-01-04\",\r\n      \"duration\": 379\r\n    }, {\r\n      \"lineColor\": \"#fbd51a\",\r\n      \"date\": \"2019-01-05\",\r\n      \"duration\": 501\r\n    }, {\r\n      \"date\": \"2019-01-06\",\r\n      \"duration\": 443\r\n    }, {\r\n      \"date\": \"2019-01-07\",\r\n      \"duration\": 405\r\n    }, {\r\n      \"date\": \"2019-01-08\",\r\n      \"duration\": 309,\r\n      \"lineColor\": \"#2498d2\"\r\n    }, {\r\n      \"date\": \"2019-01-09\",\r\n      \"duration\": 287\r\n    }, {\r\n      \"date\": \"2019-01-10\",\r\n      \"duration\": 485\r\n    }, {\r\n      \"date\": \"2019-01-11\",\r\n      \"duration\": 890\r\n    }, {\r\n      \"date\": \"2019-01-12\",\r\n      \"duration\": 810\r\n    }],\r\n    \"balloon\": {\r\n      \"cornerRadius\": 6,\r\n      \"horizontalPadding\": 15,\r\n      \"verticalPadding\": 10\r\n    },\r\n    \"valueAxes\": [{\r\n      \"duration\": \"mm\",\r\n      \"durationUnits\": {\r\n        \"hh\": \"h \",\r\n        \"mm\": \"min\"\r\n      },\r\n      \"axisAlpha\": 0\r\n    }],\r\n    \"graphs\": [{\r\n      \"bullet\": \"square\",\r\n      \"bulletBorderAlpha\": 1,\r\n      \"bulletBorderThickness\": 1,\r\n      \"fillAlphas\": 0.3,\r\n      \"fillColorsField\": \"lineColor\",\r\n      \"legendValueText\": \"[[value]]\",\r\n      \"lineColorField\": \"lineColor\",\r\n      \"title\": \"duration\",\r\n      \"valueField\": \"duration\"\r\n    }],\r\n    \"chartScrollbar\": {},\r\n    \"chartCursor\": {\r\n      \"categoryBalloonDateFormat\": \"YYYY MMM DD\",\r\n      \"cursorAlpha\": 0,\r\n      \"fullWidth\": true\r\n    },\r\n    \"dataDateFormat\": \"YYYY-MM-DD\",\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"dateFormats\": [{\r\n        \"period\": \"DD\",\r\n        \"format\": \"DD\"\r\n      }, {\r\n        \"period\": \"WW\",\r\n        \"format\": \"MMM DD\"\r\n      }, {\r\n        \"period\": \"MM\",\r\n        \"format\": \"MMM\"\r\n      }, {\r\n        \"period\": \"YYYY\",\r\n        \"format\": \"YYYY\"\r\n      }],\r\n      \"parseDates\": true,\r\n      \"autoGridCount\": false,\r\n      \"axisColor\": \"#555555\",\r\n      \"gridAlpha\": 0,\r\n      \"gridCount\": 50\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineWithChangingColor;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst DateBasedLine = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginRight\": 40,\r\n    \"marginLeft\": 40,\r\n    \"autoMarginOffset\": 20,\r\n    \"mouseWheelZoomEnabled\": true,\r\n    \"dataDateFormat\": \"YYYY-MM-DD\",\r\n    \"valueAxes\": [{\r\n      \"id\": \"v1\",\r\n      \"axisAlpha\": 0,\r\n      \"position\": \"left\",\r\n      \"ignoreAxisWidth\": true\r\n    }],\r\n    \"balloon\": {\r\n      \"borderThickness\": 1,\r\n      \"shadowAlpha\": 0\r\n    },\r\n    \"graphs\": [{\r\n      \"id\": \"g1\",\r\n      \"balloon\": {\r\n        \"drop\": true,\r\n        \"adjustBorderColor\": false,\r\n        \"color\": \"#ffffff\"\r\n      },\r\n      \"bullet\": \"round\",\r\n      \"bulletBorderAlpha\": 1,\r\n      \"bulletColor\": \"#FFFFFF\",\r\n      \"bulletSize\": 5,\r\n      \"hideBulletsCount\": 50,\r\n      \"lineThickness\": 2,\r\n      \"title\": \"red line\",\r\n      \"useLineColorForBulletBorder\": true,\r\n      \"valueField\": \"value\",\r\n      \"balloonText\": \"<span style='font-size:18px;'>[[value]]</span>\"\r\n    }],\r\n    \"chartScrollbar\": {\r\n      \"graph\": \"g1\",\r\n      \"oppositeAxis\": false,\r\n      \"offset\": 30,\r\n      \"scrollbarHeight\": 80,\r\n      \"backgroundAlpha\": 0,\r\n      \"selectedBackgroundAlpha\": 0.1,\r\n      \"selectedBackgroundColor\": \"#888888\",\r\n      \"graphFillAlpha\": 0,\r\n      \"graphLineAlpha\": 0.5,\r\n      \"selectedGraphFillAlpha\": 0,\r\n      \"selectedGraphLineAlpha\": 1,\r\n      \"autoGridCount\": true,\r\n      \"color\": \"#AAAAAA\"\r\n    },\r\n    \"chartCursor\": {\r\n      \"pan\": true,\r\n      \"valueLineEnabled\": true,\r\n      \"valueLineBalloonEnabled\": true,\r\n      \"cursorAlpha\": 1,\r\n      \"cursorColor\": \"#258cbb\",\r\n      \"limitToGraph\": \"g1\",\r\n      \"valueLineAlpha\": 0.2,\r\n      \"valueZoomable\": true\r\n    },\r\n    \"valueScrollbar\": {\r\n      \"oppositeAxis\": false,\r\n      \"offset\": 50,\r\n      \"scrollbarHeight\": 10\r\n    },\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true,\r\n      \"dashLength\": 1,\r\n      \"minorGridEnabled\": true\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    },\r\n    \"dataProvider\": [{\r\n      \"date\": \"2012-07-27\",\r\n      \"value\": 13\r\n    }, {\r\n      \"date\": \"2012-07-28\",\r\n      \"value\": 11\r\n    }, {\r\n      \"date\": \"2012-07-29\",\r\n      \"value\": 15\r\n    }, {\r\n      \"date\": \"2012-07-30\",\r\n      \"value\": 16\r\n    }, {\r\n      \"date\": \"2012-07-31\",\r\n      \"value\": 18\r\n    }, {\r\n      \"date\": \"2012-08-01\",\r\n      \"value\": 13\r\n    }, {\r\n      \"date\": \"2012-08-02\",\r\n      \"value\": 22\r\n    }, {\r\n      \"date\": \"2012-08-03\",\r\n      \"value\": 23\r\n    }, {\r\n      \"date\": \"2012-08-04\",\r\n      \"value\": 20\r\n    }, {\r\n      \"date\": \"2012-08-05\",\r\n      \"value\": 17\r\n    }, {\r\n      \"date\": \"2012-08-06\",\r\n      \"value\": 16\r\n    }, {\r\n      \"date\": \"2012-08-07\",\r\n      \"value\": 18\r\n    }, {\r\n      \"date\": \"2012-08-08\",\r\n      \"value\": 21\r\n    }, {\r\n      \"date\": \"2012-08-09\",\r\n      \"value\": 26\r\n    }, {\r\n      \"date\": \"2012-08-10\",\r\n      \"value\": 24\r\n    }, {\r\n      \"date\": \"2012-08-11\",\r\n      \"value\": 29\r\n    }, {\r\n      \"date\": \"2012-08-12\",\r\n      \"value\": 32\r\n    }, {\r\n      \"date\": \"2012-08-13\",\r\n      \"value\": 18\r\n    }, {\r\n      \"date\": \"2012-08-14\",\r\n      \"value\": 24\r\n    }, {\r\n      \"date\": \"2012-08-15\",\r\n      \"value\": 22\r\n    }, {\r\n      \"date\": \"2012-08-16\",\r\n      \"value\": 18\r\n    }, {\r\n      \"date\": \"2012-08-17\",\r\n      \"value\": 19\r\n    }, {\r\n      \"date\": \"2012-08-18\",\r\n      \"value\": 14\r\n    }, {\r\n      \"date\": \"2012-08-19\",\r\n      \"value\": 15\r\n    }, {\r\n      \"date\": \"2012-08-20\",\r\n      \"value\": 12\r\n    }, {\r\n      \"date\": \"2012-08-21\",\r\n      \"value\": 8\r\n    }, {\r\n      \"date\": \"2012-08-22\",\r\n      \"value\": 9\r\n    }, {\r\n      \"date\": \"2012-08-23\",\r\n      \"value\": 8\r\n    }, {\r\n      \"date\": \"2012-08-24\",\r\n      \"value\": 7\r\n    }, {\r\n      \"date\": \"2012-08-25\",\r\n      \"value\": 5\r\n    }, {\r\n      \"date\": \"2012-08-26\",\r\n      \"value\": 11\r\n    }, {\r\n      \"date\": \"2012-08-27\",\r\n      \"value\": 13\r\n    }, {\r\n      \"date\": \"2012-08-28\",\r\n      \"value\": 18\r\n    }, {\r\n      \"date\": \"2012-08-29\",\r\n      \"value\": 20\r\n    }, {\r\n      \"date\": \"2012-08-30\",\r\n      \"value\": 29\r\n    }, {\r\n      \"date\": \"2012-08-31\",\r\n      \"value\": 33\r\n    }, {\r\n      \"date\": \"2012-09-01\",\r\n      \"value\": 42\r\n    }, {\r\n      \"date\": \"2012-09-02\",\r\n      \"value\": 35\r\n    }, {\r\n      \"date\": \"2012-09-03\",\r\n      \"value\": 31\r\n    }, {\r\n      \"date\": \"2012-09-04\",\r\n      \"value\": 47\r\n    }, {\r\n      \"date\": \"2012-09-05\",\r\n      \"value\": 52\r\n    }, {\r\n      \"date\": \"2012-09-06\",\r\n      \"value\": 46\r\n    }, {\r\n      \"date\": \"2012-09-07\",\r\n      \"value\": 41\r\n    }, {\r\n      \"date\": \"2012-09-08\",\r\n      \"value\": 43\r\n    }, {\r\n      \"date\": \"2012-09-09\",\r\n      \"value\": 40\r\n    }, {\r\n      \"date\": \"2012-09-10\",\r\n      \"value\": 39\r\n    }, {\r\n      \"date\": \"2012-09-11\",\r\n      \"value\": 34\r\n    }, {\r\n      \"date\": \"2012-09-12\",\r\n      \"value\": 29\r\n    }, {\r\n      \"date\": \"2012-09-13\",\r\n      \"value\": 34\r\n    }, {\r\n      \"date\": \"2012-09-14\",\r\n      \"value\": 37\r\n    }, {\r\n      \"date\": \"2012-09-15\",\r\n      \"value\": 42\r\n    }, {\r\n      \"date\": \"2012-09-16\",\r\n      \"value\": 49\r\n    }, {\r\n      \"date\": \"2012-09-17\",\r\n      \"value\": 46\r\n    }, {\r\n      \"date\": \"2012-09-18\",\r\n      \"value\": 47\r\n    }, {\r\n      \"date\": \"2012-09-19\",\r\n      \"value\": 55\r\n    }, {\r\n      \"date\": \"2012-09-20\",\r\n      \"value\": 59\r\n    }, {\r\n      \"date\": \"2012-09-21\",\r\n      \"value\": 58\r\n    }, {\r\n      \"date\": \"2012-09-22\",\r\n      \"value\": 57\r\n    }, {\r\n      \"date\": \"2012-09-23\",\r\n      \"value\": 61\r\n    }, {\r\n      \"date\": \"2012-09-24\",\r\n      \"value\": 59\r\n    }, {\r\n      \"date\": \"2012-09-25\",\r\n      \"value\": 67\r\n    }, {\r\n      \"date\": \"2012-09-26\",\r\n      \"value\": 65\r\n    }, {\r\n      \"date\": \"2012-09-27\",\r\n      \"value\": 61\r\n    }, {\r\n      \"date\": \"2012-09-28\",\r\n      \"value\": 66\r\n    }, {\r\n      \"date\": \"2012-09-29\",\r\n      \"value\": 69\r\n    }, {\r\n      \"date\": \"2012-09-30\",\r\n      \"value\": 71\r\n    }, {\r\n      \"date\": \"2012-10-01\",\r\n      \"value\": 67\r\n    }, {\r\n      \"date\": \"2012-10-02\",\r\n      \"value\": 63\r\n    }, {\r\n      \"date\": \"2012-10-03\",\r\n      \"value\": 46\r\n    }, {\r\n      \"date\": \"2012-10-04\",\r\n      \"value\": 32\r\n    }, {\r\n      \"date\": \"2012-10-05\",\r\n      \"value\": 21\r\n    }, {\r\n      \"date\": \"2012-10-06\",\r\n      \"value\": 18\r\n    }, {\r\n      \"date\": \"2012-10-07\",\r\n      \"value\": 21\r\n    }, {\r\n      \"date\": \"2012-10-08\",\r\n      \"value\": 28\r\n    }, {\r\n      \"date\": \"2012-10-09\",\r\n      \"value\": 27\r\n    }, {\r\n      \"date\": \"2012-10-10\",\r\n      \"value\": 36\r\n    }, {\r\n      \"date\": \"2012-10-11\",\r\n      \"value\": 33\r\n    }, {\r\n      \"date\": \"2012-10-12\",\r\n      \"value\": 31\r\n    }, {\r\n      \"date\": \"2012-10-13\",\r\n      \"value\": 30\r\n    }, {\r\n      \"date\": \"2012-10-14\",\r\n      \"value\": 34\r\n    }, {\r\n      \"date\": \"2012-10-15\",\r\n      \"value\": 38\r\n    }, {\r\n      \"date\": \"2012-10-16\",\r\n      \"value\": 37\r\n    }, {\r\n      \"date\": \"2012-10-17\",\r\n      \"value\": 44\r\n    }, {\r\n      \"date\": \"2012-10-18\",\r\n      \"value\": 49\r\n    }, {\r\n      \"date\": \"2012-10-19\",\r\n      \"value\": 53\r\n    }, {\r\n      \"date\": \"2012-10-20\",\r\n      \"value\": 57\r\n    }, {\r\n      \"date\": \"2012-10-21\",\r\n      \"value\": 60\r\n    }, {\r\n      \"date\": \"2012-10-22\",\r\n      \"value\": 61\r\n    }, {\r\n      \"date\": \"2012-10-23\",\r\n      \"value\": 69\r\n    }, {\r\n      \"date\": \"2012-10-24\",\r\n      \"value\": 67\r\n    }, {\r\n      \"date\": \"2012-10-25\",\r\n      \"value\": 72\r\n    }, {\r\n      \"date\": \"2012-10-26\",\r\n      \"value\": 77\r\n    }, {\r\n      \"date\": \"2012-10-27\",\r\n      \"value\": 75\r\n    }, {\r\n      \"date\": \"2012-10-28\",\r\n      \"value\": 70\r\n    }, {\r\n      \"date\": \"2012-10-29\",\r\n      \"value\": 72\r\n    }, {\r\n      \"date\": \"2012-10-30\",\r\n      \"value\": 70\r\n    }, {\r\n      \"date\": \"2012-10-31\",\r\n      \"value\": 72\r\n    }, {\r\n      \"date\": \"2012-11-01\",\r\n      \"value\": 73\r\n    }, {\r\n      \"date\": \"2012-11-02\",\r\n      \"value\": 67\r\n    }, {\r\n      \"date\": \"2012-11-03\",\r\n      \"value\": 68\r\n    }, {\r\n      \"date\": \"2012-11-04\",\r\n      \"value\": 65\r\n    }, {\r\n      \"date\": \"2012-11-05\",\r\n      \"value\": 71\r\n    }, {\r\n      \"date\": \"2012-11-06\",\r\n      \"value\": 75\r\n    }, {\r\n      \"date\": \"2012-11-07\",\r\n      \"value\": 74\r\n    }, {\r\n      \"date\": \"2012-11-08\",\r\n      \"value\": 71\r\n    }, {\r\n      \"date\": \"2012-11-09\",\r\n      \"value\": 76\r\n    }, {\r\n      \"date\": \"2012-11-10\",\r\n      \"value\": 77\r\n    }, {\r\n      \"date\": \"2012-11-11\",\r\n      \"value\": 81\r\n    }, {\r\n      \"date\": \"2012-11-12\",\r\n      \"value\": 83\r\n    }, {\r\n      \"date\": \"2012-11-13\",\r\n      \"value\": 80\r\n    }, {\r\n      \"date\": \"2012-11-14\",\r\n      \"value\": 81\r\n    }, {\r\n      \"date\": \"2012-11-15\",\r\n      \"value\": 87\r\n    }, {\r\n      \"date\": \"2012-11-16\",\r\n      \"value\": 82\r\n    }, {\r\n      \"date\": \"2012-11-17\",\r\n      \"value\": 86\r\n    }, {\r\n      \"date\": \"2012-11-18\",\r\n      \"value\": 80\r\n    }, {\r\n      \"date\": \"2012-11-19\",\r\n      \"value\": 87\r\n    }, {\r\n      \"date\": \"2012-11-20\",\r\n      \"value\": 83\r\n    }, {\r\n      \"date\": \"2012-11-21\",\r\n      \"value\": 85\r\n    }, {\r\n      \"date\": \"2012-11-22\",\r\n      \"value\": 84\r\n    }, {\r\n      \"date\": \"2012-11-23\",\r\n      \"value\": 82\r\n    }, {\r\n      \"date\": \"2012-11-24\",\r\n      \"value\": 73\r\n    }, {\r\n      \"date\": \"2012-11-25\",\r\n      \"value\": 71\r\n    }, {\r\n      \"date\": \"2012-11-26\",\r\n      \"value\": 75\r\n    }, {\r\n      \"date\": \"2012-11-27\",\r\n      \"value\": 79\r\n    }, {\r\n      \"date\": \"2012-11-28\",\r\n      \"value\": 70\r\n    }, {\r\n      \"date\": \"2012-11-29\",\r\n      \"value\": 73\r\n    }, {\r\n      \"date\": \"2012-11-30\",\r\n      \"value\": 61\r\n    }, {\r\n      \"date\": \"2012-12-01\",\r\n      \"value\": 62\r\n    }, {\r\n      \"date\": \"2012-12-02\",\r\n      \"value\": 66\r\n    }, {\r\n      \"date\": \"2012-12-03\",\r\n      \"value\": 65\r\n    }, {\r\n      \"date\": \"2012-12-04\",\r\n      \"value\": 73\r\n    }, {\r\n      \"date\": \"2012-12-05\",\r\n      \"value\": 79\r\n    }, {\r\n      \"date\": \"2012-12-06\",\r\n      \"value\": 78\r\n    }, {\r\n      \"date\": \"2012-12-07\",\r\n      \"value\": 78\r\n    }, {\r\n      \"date\": \"2012-12-08\",\r\n      \"value\": 78\r\n    }, {\r\n      \"date\": \"2012-12-09\",\r\n      \"value\": 74\r\n    }, {\r\n      \"date\": \"2012-12-10\",\r\n      \"value\": 73\r\n    }, {\r\n      \"date\": \"2012-12-11\",\r\n      \"value\": 75\r\n    }, {\r\n      \"date\": \"2012-12-12\",\r\n      \"value\": 70\r\n    }, {\r\n      \"date\": \"2012-12-13\",\r\n      \"value\": 77\r\n    }, {\r\n      \"date\": \"2012-12-14\",\r\n      \"value\": 67\r\n    }, {\r\n      \"date\": \"2012-12-15\",\r\n      \"value\": 62\r\n    }, {\r\n      \"date\": \"2012-12-16\",\r\n      \"value\": 64\r\n    }, {\r\n      \"date\": \"2012-12-17\",\r\n      \"value\": 61\r\n    }, {\r\n      \"date\": \"2012-12-18\",\r\n      \"value\": 59\r\n    }, {\r\n      \"date\": \"2012-12-19\",\r\n      \"value\": 53\r\n    }, {\r\n      \"date\": \"2012-12-20\",\r\n      \"value\": 54\r\n    }, {\r\n      \"date\": \"2012-12-21\",\r\n      \"value\": 56\r\n    }, {\r\n      \"date\": \"2012-12-22\",\r\n      \"value\": 59\r\n    }, {\r\n      \"date\": \"2012-12-23\",\r\n      \"value\": 58\r\n    }, {\r\n      \"date\": \"2012-12-24\",\r\n      \"value\": 55\r\n    }, {\r\n      \"date\": \"2012-12-25\",\r\n      \"value\": 52\r\n    }, {\r\n      \"date\": \"2012-12-26\",\r\n      \"value\": 54\r\n    }, {\r\n      \"date\": \"2012-12-27\",\r\n      \"value\": 50\r\n    }, {\r\n      \"date\": \"2012-12-28\",\r\n      \"value\": 50\r\n    }, {\r\n      \"date\": \"2012-12-29\",\r\n      \"value\": 51\r\n    }, {\r\n      \"date\": \"2012-12-30\",\r\n      \"value\": 52\r\n    }, {\r\n      \"date\": \"2012-12-31\",\r\n      \"value\": 58\r\n    }, {\r\n      \"date\": \"2013-01-01\",\r\n      \"value\": 60\r\n    }, {\r\n      \"date\": \"2013-01-02\",\r\n      \"value\": 67\r\n    }, {\r\n      \"date\": \"2013-01-03\",\r\n      \"value\": 64\r\n    }, {\r\n      \"date\": \"2013-01-04\",\r\n      \"value\": 66\r\n    }, {\r\n      \"date\": \"2013-01-05\",\r\n      \"value\": 60\r\n    }, {\r\n      \"date\": \"2013-01-06\",\r\n      \"value\": 63\r\n    }, {\r\n      \"date\": \"2013-01-07\",\r\n      \"value\": 61\r\n    }, {\r\n      \"date\": \"2013-01-08\",\r\n      \"value\": 60\r\n    }, {\r\n      \"date\": \"2013-01-09\",\r\n      \"value\": 65\r\n    }, {\r\n      \"date\": \"2013-01-10\",\r\n      \"value\": 75\r\n    }, {\r\n      \"date\": \"2013-01-11\",\r\n      \"value\": 77\r\n    }, {\r\n      \"date\": \"2013-01-12\",\r\n      \"value\": 78\r\n    }, {\r\n      \"date\": \"2013-01-13\",\r\n      \"value\": 70\r\n    }, {\r\n      \"date\": \"2013-01-14\",\r\n      \"value\": 70\r\n    }, {\r\n      \"date\": \"2013-01-15\",\r\n      \"value\": 73\r\n    }, {\r\n      \"date\": \"2013-01-16\",\r\n      \"value\": 71\r\n    }, {\r\n      \"date\": \"2013-01-17\",\r\n      \"value\": 74\r\n    }, {\r\n      \"date\": \"2013-01-18\",\r\n      \"value\": 78\r\n    }, {\r\n      \"date\": \"2013-01-19\",\r\n      \"value\": 85\r\n    }, {\r\n      \"date\": \"2013-01-20\",\r\n      \"value\": 82\r\n    }, {\r\n      \"date\": \"2013-01-21\",\r\n      \"value\": 83\r\n    }, {\r\n      \"date\": \"2013-01-22\",\r\n      \"value\": 88\r\n    }, {\r\n      \"date\": \"2013-01-23\",\r\n      \"value\": 85\r\n    }, {\r\n      \"date\": \"2013-01-24\",\r\n      \"value\": 85\r\n    }, {\r\n      \"date\": \"2013-01-25\",\r\n      \"value\": 80\r\n    }, {\r\n      \"date\": \"2013-01-26\",\r\n      \"value\": 87\r\n    }, {\r\n      \"date\": \"2013-01-27\",\r\n      \"value\": 84\r\n    }, {\r\n      \"date\": \"2013-01-28\",\r\n      \"value\": 83\r\n    }, {\r\n      \"date\": \"2013-01-29\",\r\n      \"value\": 84\r\n    }, {\r\n      \"date\": \"2013-01-30\",\r\n      \"value\": 81\r\n    }]\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DateBasedLine;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst LineChartWithScrollAndZoom = () => {\r\n\r\n  let chartData = generateChartData();\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginRight\": 80,\r\n    \"autoMarginOffset\": 20,\r\n    \"marginTop\": 7,\r\n    \"dataProvider\": chartData,\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0.2,\r\n      \"dashLength\": 1,\r\n      \"position\": \"left\"\r\n    }],\r\n    \"mouseWheelZoomEnabled\": true,\r\n    \"graphs\": [{\r\n      \"id\": \"g1\",\r\n      \"balloonText\": \"[[value]]\",\r\n      \"bullet\": \"round\",\r\n      \"bulletBorderAlpha\": 1,\r\n      \"bulletColor\": \"#FFFFFF\",\r\n      \"hideBulletsCount\": 50,\r\n      \"title\": \"red line\",\r\n      \"valueField\": \"visits\",\r\n      \"useLineColorForBulletBorder\": true,\r\n      \"balloon\": {\r\n        \"drop\": true\r\n      }\r\n    }],\r\n    \"chartScrollbar\": {\r\n      \"autoGridCount\": true,\r\n      \"graph\": \"g1\",\r\n      \"scrollbarHeight\": 40\r\n    },\r\n    \"chartCursor\": {\r\n      \"limitToGraph\": \"g1\"\r\n    },\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true,\r\n      \"axisColor\": \"#DADADA\",\r\n      \"dashLength\": 1,\r\n      \"minorGridEnabled\": true\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  // generate some random data, quite different range\r\n  function generateChartData() {\r\n    let chartData = [];\r\n    const firstDate = new Date();\r\n    firstDate.setDate(firstDate.getDate() - 5);\r\n    let visits = 1200;\r\n    for (var i = 0; i < 1000; i++) {\r\n      // we create date objects here. In your data, you can have date strings\r\n      // and then set format of your dates using chart.dataDateFormat property,\r\n      // however when possible, use date objects, as this will speed up chart rendering.\r\n      const newDate = new Date(firstDate);\r\n      newDate.setDate(newDate.getDate() + i);\r\n\r\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n\r\n      chartData.push({\r\n        date: newDate,\r\n        visits: visits\r\n      });\r\n    }\r\n    return chartData;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChartWithScrollAndZoom;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst LineWithDifferentColors = () => {\r\n\r\n  let chartData = generateChartData();\r\n  const config = {\r\n    \"theme\": \"light\",\r\n    \"type\": \"serial\",\r\n    \"marginRight\": 80,\r\n    \"autoMarginOffset\": 20,\r\n    \"marginTop\": 20,\r\n    \"dataProvider\": chartData,\r\n    \"valueAxes\": [{\r\n      \"id\": \"v1\",\r\n      \"axisAlpha\": 0.1\r\n    }],\r\n    \"graphs\": [{\r\n      \"useNegativeColorIfDown\": true,\r\n      \"balloonText\": \"[[category]]<br><b>value: [[value]]</b>\",\r\n      \"bullet\": \"round\",\r\n      \"bulletBorderAlpha\": 1,\r\n      \"bulletBorderColor\": \"#FFFFFF\",\r\n      \"hideBulletsCount\": 50,\r\n      \"lineThickness\": 2,\r\n      \"lineColor\": \"#fdd400\",\r\n      \"negativeLineColor\": \"#67b7dc\",\r\n      \"valueField\": \"visits\"\r\n    }],\r\n    \"chartScrollbar\": {\r\n      \"scrollbarHeight\": 5,\r\n      \"backgroundAlpha\": 0.1,\r\n      \"backgroundColor\": \"#868686\",\r\n      \"selectedBackgroundColor\": \"#67b7dc\",\r\n      \"selectedBackgroundAlpha\": 1\r\n    },\r\n    \"chartCursor\": {\r\n      \"valueLineEnabled\": true,\r\n      \"valueLineBalloonEnabled\": true\r\n    },\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true,\r\n      \"axisAlpha\": 0,\r\n      \"minHorizontalGap\": 60\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  function generateChartData() {\r\n    let chartData = [];\r\n    const firstDate = new Date();\r\n    firstDate.setDate(firstDate.getDate() - 150);\r\n    let visits = 500;\r\n\r\n    for (let i = 0; i < 150; i++) {\r\n      // we create date objects here. In your data, you can have date strings\r\n      // and then set format of your dates using chart.dataDateFormat property,\r\n      // however when possible, use date objects, as this will speed up chart rendering.\r\n      const newDate = new Date(firstDate);\r\n      newDate.setDate(newDate.getDate() + i);\r\n\r\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n\r\n      chartData.push({\r\n        date: newDate,\r\n        visits: visits\r\n      });\r\n    }\r\n    return chartData;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineWithDifferentColors;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst SmoothedLineChart = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginTop\": 0,\r\n    \"marginRight\": 80,\r\n    \"dataProvider\": [{\r\n      \"year\": \"1950\",\r\n      \"value\": -0.307\r\n    }, {\r\n      \"year\": \"1951\",\r\n      \"value\": -0.168\r\n    }, {\r\n      \"year\": \"1952\",\r\n      \"value\": -0.073\r\n    }, {\r\n      \"year\": \"1953\",\r\n      \"value\": -0.027\r\n    }, {\r\n      \"year\": \"1954\",\r\n      \"value\": -0.251\r\n    }, {\r\n      \"year\": \"1955\",\r\n      \"value\": -0.281\r\n    }, {\r\n      \"year\": \"1956\",\r\n      \"value\": -0.348\r\n    }, {\r\n      \"year\": \"1957\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1958\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1959\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1960\",\r\n      \"value\": -0.124\r\n    }, {\r\n      \"year\": \"1961\",\r\n      \"value\": -0.024\r\n    }, {\r\n      \"year\": \"1962\",\r\n      \"value\": -0.022\r\n    }, {\r\n      \"year\": \"1963\",\r\n      \"value\": 0\r\n    }, {\r\n      \"year\": \"1964\",\r\n      \"value\": -0.296\r\n    }, {\r\n      \"year\": \"1965\",\r\n      \"value\": -0.217\r\n    }, {\r\n      \"year\": \"1966\",\r\n      \"value\": -0.147\r\n    }, {\r\n      \"year\": \"1967\",\r\n      \"value\": -0.15\r\n    }, {\r\n      \"year\": \"1968\",\r\n      \"value\": -0.16\r\n    }, {\r\n      \"year\": \"1969\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1970\",\r\n      \"value\": -0.068\r\n    }, {\r\n      \"year\": \"1971\",\r\n      \"value\": -0.19\r\n    }, {\r\n      \"year\": \"1972\",\r\n      \"value\": -0.056\r\n    }, {\r\n      \"year\": \"1973\",\r\n      \"value\": 0.077\r\n    }, {\r\n      \"year\": \"1974\",\r\n      \"value\": -0.213\r\n    }, {\r\n      \"year\": \"1975\",\r\n      \"value\": -0.17\r\n    }, {\r\n      \"year\": \"1976\",\r\n      \"value\": -0.254\r\n    }, {\r\n      \"year\": \"1977\",\r\n      \"value\": 0.019\r\n    }, {\r\n      \"year\": \"1978\",\r\n      \"value\": -0.063\r\n    }, {\r\n      \"year\": \"1979\",\r\n      \"value\": 0.05\r\n    }, {\r\n      \"year\": \"1980\",\r\n      \"value\": 0.077\r\n    }, {\r\n      \"year\": \"1981\",\r\n      \"value\": 0.12\r\n    }, {\r\n      \"year\": \"1982\",\r\n      \"value\": 0.011\r\n    }, {\r\n      \"year\": \"1983\",\r\n      \"value\": 0.177\r\n    }, {\r\n      \"year\": \"1984\",\r\n      \"value\": -0.021\r\n    }, {\r\n      \"year\": \"1985\",\r\n      \"value\": -0.037\r\n    }, {\r\n      \"year\": \"1986\",\r\n      \"value\": 0.03\r\n    }, {\r\n      \"year\": \"1987\",\r\n      \"value\": 0.179\r\n    }, {\r\n      \"year\": \"1988\",\r\n      \"value\": 0.18\r\n    }, {\r\n      \"year\": \"1989\",\r\n      \"value\": 0.104\r\n    }, {\r\n      \"year\": \"1990\",\r\n      \"value\": 0.255\r\n    }, {\r\n      \"year\": \"1991\",\r\n      \"value\": 0.21\r\n    }, {\r\n      \"year\": \"1992\",\r\n      \"value\": 0.065\r\n    }, {\r\n      \"year\": \"1993\",\r\n      \"value\": 0.11\r\n    }, {\r\n      \"year\": \"1994\",\r\n      \"value\": 0.172\r\n    }, {\r\n      \"year\": \"1995\",\r\n      \"value\": 0.269\r\n    }, {\r\n      \"year\": \"1996\",\r\n      \"value\": 0.141\r\n    }, {\r\n      \"year\": \"1997\",\r\n      \"value\": 0.353\r\n    }, {\r\n      \"year\": \"1998\",\r\n      \"value\": 0.548\r\n    }, {\r\n      \"year\": \"1999\",\r\n      \"value\": 0.298\r\n    }, {\r\n      \"year\": \"2000\",\r\n      \"value\": 0.267\r\n    }, {\r\n      \"year\": \"2001\",\r\n      \"value\": 0.411\r\n    }, {\r\n      \"year\": \"2002\",\r\n      \"value\": 0.462\r\n    }, {\r\n      \"year\": \"2003\",\r\n      \"value\": 0.47\r\n    }, {\r\n      \"year\": \"2004\",\r\n      \"value\": 0.445\r\n    }, {\r\n      \"year\": \"2005\",\r\n      \"value\": 0.47\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0,\r\n      \"position\": \"left\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"id\": \"g1\",\r\n      \"balloonText\": \"[[category]]<br><b><span style='font-size:14px;'>[[value]]</span></b>\",\r\n      \"bullet\": \"round\",\r\n      \"bulletSize\": 8,\r\n      \"lineColor\": \"#d1655d\",\r\n      \"lineThickness\": 2,\r\n      \"negativeLineColor\": \"#637bb6\",\r\n      \"type\": \"smoothedLine\",\r\n      \"valueField\": \"value\"\r\n    }],\r\n    \"chartScrollbar\": {\r\n      \"graph\": \"g1\",\r\n      \"gridAlpha\": 0,\r\n      \"color\": \"#888888\",\r\n      \"scrollbarHeight\": 55,\r\n      \"backgroundAlpha\": 0,\r\n      \"selectedBackgroundAlpha\": 0.1,\r\n      \"selectedBackgroundColor\": \"#888888\",\r\n      \"graphFillAlpha\": 0,\r\n      \"autoGridCount\": true,\r\n      \"selectedGraphFillAlpha\": 0,\r\n      \"graphLineAlpha\": 0.2,\r\n      \"graphLineColor\": \"#c2c2c2\",\r\n      \"selectedGraphLineColor\": \"#888888\",\r\n      \"selectedGraphLineAlpha\": 1\r\n\r\n    },\r\n    \"chartCursor\": {\r\n      \"categoryBalloonDateFormat\": \"YYYY\",\r\n      \"cursorAlpha\": 0,\r\n      \"valueLineEnabled\": true,\r\n      \"valueLineBalloonEnabled\": true,\r\n      \"valueLineAlpha\": 0.5,\r\n      \"fullWidth\": true\r\n    },\r\n    \"dataDateFormat\": \"YYYY\",\r\n    \"categoryField\": \"year\",\r\n    \"categoryAxis\": {\r\n      \"minPeriod\": \"YYYY\",\r\n      \"parseDates\": true,\r\n      \"minorGridAlpha\": 0.1,\r\n      \"minorGridEnabled\": true\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SmoothedLineChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst TrendLines = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginRight\": 80,\r\n    \"autoMarginOffset\": 20,\r\n    \"dataDateFormat\": \"YYYY-MM-DD HH:NN\",\r\n    \"dataProvider\": [{\r\n      \"date\": \"2012-01-01\",\r\n      \"value\": 8\r\n    }, {\r\n      \"date\": \"2012-01-02\",\r\n      \"color\": \"#CC0000\",\r\n      \"value\": 10\r\n    }, {\r\n      \"date\": \"2012-01-03\",\r\n      \"value\": 12\r\n    }, {\r\n      \"date\": \"2012-01-04\",\r\n      \"value\": 14\r\n    }, {\r\n      \"date\": \"2012-01-05\",\r\n      \"value\": 11\r\n    }, {\r\n      \"date\": \"2012-01-06\",\r\n      \"value\": 6\r\n    }, {\r\n      \"date\": \"2012-01-07\",\r\n      \"value\": 7\r\n    }, {\r\n      \"date\": \"2012-01-08\",\r\n      \"value\": 9\r\n    }, {\r\n      \"date\": \"2012-01-09\",\r\n      \"value\": 13\r\n    }, {\r\n      \"date\": \"2012-01-10\",\r\n      \"value\": 15\r\n    }, {\r\n      \"date\": \"2012-01-11\",\r\n      \"color\": \"#CC0000\",\r\n      \"value\": 19\r\n    }, {\r\n      \"date\": \"2012-01-12\",\r\n      \"value\": 21\r\n    }, {\r\n      \"date\": \"2012-01-13\",\r\n      \"value\": 22\r\n    }, {\r\n      \"date\": \"2012-01-14\",\r\n      \"value\": 20\r\n    }, {\r\n      \"date\": \"2012-01-15\",\r\n      \"value\": 18\r\n    }, {\r\n      \"date\": \"2012-01-16\",\r\n      \"value\": 14\r\n    }, {\r\n      \"date\": \"2012-01-17\",\r\n      \"color\": \"#CC0000\",\r\n      \"value\": 16\r\n    }, {\r\n      \"date\": \"2012-01-18\",\r\n      \"value\": 18\r\n    }, {\r\n      \"date\": \"2012-01-19\",\r\n      \"value\": 17\r\n    }, {\r\n      \"date\": \"2012-01-20\",\r\n      \"value\": 15\r\n    }, {\r\n      \"date\": \"2012-01-21\",\r\n      \"value\": 12\r\n    }, {\r\n      \"date\": \"2012-01-22\",\r\n      \"color\": \"#CC0000\",\r\n      \"value\": 10\r\n    }, {\r\n      \"date\": \"2012-01-23\",\r\n      \"value\": 8\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0,\r\n      \"guides\": [{\r\n        \"fillAlpha\": 0.1,\r\n        \"fillColor\": \"#888888\",\r\n        \"lineAlpha\": 0,\r\n        \"toValue\": 16,\r\n        \"value\": 10\r\n      }],\r\n      \"position\": \"left\",\r\n      \"tickLength\": 0\r\n    }],\r\n    \"graphs\": [{\r\n      \"balloonText\": \"[[category]]<br><b><span style='font-size:14px;'>value:[[value]]</span></b>\",\r\n      \"bullet\": \"round\",\r\n      \"dashLength\": 3,\r\n      \"colorField\": \"color\",\r\n      \"valueField\": \"value\"\r\n    }],\r\n    \"trendLines\": [{\r\n      \"finalDate\": \"2012-01-11 12\",\r\n      \"finalValue\": 19,\r\n      \"initialDate\": \"2012-01-02 12\",\r\n      \"initialValue\": 10,\r\n      \"lineColor\": \"#CC0000\"\r\n    }, {\r\n      \"finalDate\": \"2012-01-22 12\",\r\n      \"finalValue\": 10,\r\n      \"initialDate\": \"2012-01-17 12\",\r\n      \"initialValue\": 16,\r\n      \"lineColor\": \"#CC0000\"\r\n    }],\r\n    \"chartScrollbar\": {\r\n      \"scrollbarHeight\": 2,\r\n      \"offset\": -1,\r\n      \"backgroundAlpha\": 0.1,\r\n      \"backgroundColor\": \"#888888\",\r\n      \"selectedBackgroundColor\": \"#67b7dc\",\r\n      \"selectedBackgroundAlpha\": 1\r\n    },\r\n    \"chartCursor\": {\r\n      \"fullWidth\": true,\r\n      \"valueLineEabled\": true,\r\n      \"valueLineBalloonEnabled\": true,\r\n      \"valueLineAlpha\": 0.5,\r\n      \"cursorAlpha\": 0\r\n    },\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true,\r\n      \"axisAlpha\": 0,\r\n      \"gridAlpha\": 0.1,\r\n      \"minorGridAlpha\": 0.1,\r\n      \"minorGridEnabled\": true\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrendLines;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst FillBetweenTwoLines = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"autoMarginOffset\": 20,\r\n    \"marginRight\": 80,\r\n    \"dataProvider\": [{\r\n      \"date\": \"2009-10-01\",\r\n      \"value\": 3,\r\n      \"fromValue\": 2,\r\n      \"toValue\": 5\r\n    }, {\r\n      \"date\": \"2009-10-02\",\r\n      \"value\": 5,\r\n      \"fromValue\": 4,\r\n      \"toValue\": 6\r\n    }, {\r\n      \"date\": \"2009-10-03\",\r\n      \"value\": 15,\r\n      \"fromValue\": 12,\r\n      \"toValue\": 18\r\n    }, {\r\n      \"date\": \"2009-10-04\",\r\n      \"value\": 13,\r\n      \"fromValue\": 10.4,\r\n      \"toValue\": 15.6\r\n    }, {\r\n      \"date\": \"2009-10-05\",\r\n      \"value\": 17,\r\n      \"fromValue\": 13.6,\r\n      \"toValue\": 20.4\r\n    }, {\r\n      \"date\": \"2009-10-06\",\r\n      \"value\": 15,\r\n      \"fromValue\": 12,\r\n      \"toValue\": 18\r\n    }, {\r\n      \"date\": \"2009-10-09\",\r\n      \"value\": 19,\r\n      \"fromValue\": 15.2,\r\n      \"toValue\": 22.8\r\n    }, {\r\n      \"date\": \"2009-10-10\",\r\n      \"value\": 21,\r\n      \"fromValue\": 16.8,\r\n      \"toValue\": 25.2\r\n    }, {\r\n      \"date\": \"2009-10-11\",\r\n      \"value\": 20,\r\n      \"fromValue\": 16,\r\n      \"toValue\": 24\r\n    }, {\r\n      \"date\": \"2009-10-12\",\r\n      \"value\": 20,\r\n      \"fromValue\": 16,\r\n      \"toValue\": 24\r\n    }, {\r\n      \"date\": \"2009-10-13\",\r\n      \"value\": 19,\r\n      \"fromValue\": 15.2,\r\n      \"toValue\": 22.8\r\n    }, {\r\n      \"date\": \"2009-10-16\",\r\n      \"value\": 25,\r\n      \"fromValue\": 20,\r\n      \"toValue\": 30\r\n    }, {\r\n      \"date\": \"2009-10-17\",\r\n      \"value\": 24,\r\n      \"fromValue\": 19.2,\r\n      \"toValue\": 28.8\r\n    }, {\r\n      \"date\": \"2009-10-18\",\r\n      \"value\": 26,\r\n      \"fromValue\": 20.8,\r\n      \"toValue\": 31.2\r\n    }, {\r\n      \"date\": \"2009-10-19\",\r\n      \"value\": 27,\r\n      \"fromValue\": 21.6,\r\n      \"toValue\": 32.4\r\n    }, {\r\n      \"date\": \"2009-10-20\",\r\n      \"value\": 25,\r\n      \"fromValue\": 20,\r\n      \"toValue\": 30\r\n    }, {\r\n      \"date\": \"2009-10-23\",\r\n      \"value\": 29,\r\n      \"fromValue\": 23.2,\r\n      \"toValue\": 34.8\r\n    }, {\r\n      \"date\": \"2009-10-24\",\r\n      \"value\": 28,\r\n      \"fromValue\": 22.4,\r\n      \"toValue\": 33.6\r\n    }, {\r\n      \"date\": \"2009-10-25\",\r\n      \"value\": 30,\r\n      \"fromValue\": 24,\r\n      \"toValue\": 36\r\n    }, {\r\n      \"date\": \"2009-10-26\",\r\n      \"value\": 72,\r\n      \"fromValue\": 57.6,\r\n      \"toValue\": 86.4\r\n    }, {\r\n      \"date\": \"2009-10-27\",\r\n      \"value\": 43,\r\n      \"fromValue\": 34.4,\r\n      \"toValue\": 51.6\r\n    }, {\r\n      \"date\": \"2009-10-30\",\r\n      \"value\": 31,\r\n      \"fromValue\": 24.8,\r\n      \"toValue\": 37.2\r\n    }, {\r\n      \"date\": \"2009-11-01\",\r\n      \"value\": 30,\r\n      \"fromValue\": 24,\r\n      \"toValue\": 36\r\n    }, {\r\n      \"date\": \"2009-11-02\",\r\n      \"value\": 29,\r\n      \"fromValue\": 23.2,\r\n      \"toValue\": 34.8\r\n    }, {\r\n      \"date\": \"2009-11-03\",\r\n      \"value\": 27,\r\n      \"fromValue\": 21.6,\r\n      \"toValue\": 32.4\r\n    }, {\r\n      \"date\": \"2009-11-04\",\r\n      \"value\": 26,\r\n      \"fromValue\": 20.8,\r\n      \"toValue\": 31.2\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0,\r\n      \"position\": \"left\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"id\": \"fromGraph\",\r\n      \"lineAlpha\": 0,\r\n      \"showBalloon\": false,\r\n      \"valueField\": \"fromValue\",\r\n      \"fillAlphas\": 0\r\n    }, {\r\n      \"fillAlphas\": 0.2,\r\n      \"fillToGraph\": \"fromGraph\",\r\n      \"lineAlpha\": 0,\r\n      \"showBalloon\": false,\r\n      \"valueField\": \"toValue\"\r\n    }, {\r\n      \"valueField\": \"value\",\r\n      \"balloonText\": \"<div style='margin:10px; text-align:left'><span style='font-size:11px'>allowed: [[fromValue]] - [[toValue]]</span><br><span style='font-size:18px'>Value:[[value]]</span></div>\",\r\n      \"fillAlphas\": 0\r\n    }],\r\n    \"chartCursor\": {\r\n      \"fullWidth\": true,\r\n      \"cursorAlpha\": 0.05,\r\n      \"valueLineEnabled\": true,\r\n      \"valueLineAlpha\": 0.5,\r\n      \"valueLineBalloonEnabled\": true\r\n    },\r\n    \"dataDateFormat\": \"YYYY-MM-DD\",\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"position\": \"top\",\r\n      \"parseDates\": true,\r\n      \"axisAlpha\": 0,\r\n      \"minHorizontalGap\": 25,\r\n      \"gridAlpha\": 0,\r\n      \"tickLength\": 0,\r\n      \"dateFormats\": [{\r\n        \"period\": 'fff',\r\n        \"format\": 'JJ:NN:SS'\r\n      }, {\r\n        \"period\": 'ss',\r\n        \"format\": 'JJ:NN:SS'\r\n      }, {\r\n        \"period\": 'mm',\r\n        \"format\": 'JJ:NN'\r\n      }, {\r\n        \"period\": 'hh',\r\n        \"format\": 'JJ:NN'\r\n      }, {\r\n        \"period\": 'DD',\r\n        \"format\": 'DD'\r\n      }, {\r\n        \"period\": 'WW',\r\n        \"format\": 'DD'\r\n      }, {\r\n        \"period\": 'MM',\r\n        \"format\": 'MMM'\r\n      }, {\r\n        \"period\": 'YYYY',\r\n        \"format\": 'YYYY'\r\n      }]\r\n    },\r\n\r\n    \"chartScrollbar\": {},\r\n\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FillBetweenTwoLines;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst StepLineChart = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"titles\": [{\"text\": \"Step Line Chart\"}],\r\n    \"theme\": \"light\",\r\n    \"autoMarginOffset\": 25,\r\n    \"dataProvider\": [{\r\n      \"year\": \"1950\",\r\n      \"value\": -0.307\r\n    }, {\r\n      \"year\": \"1951\",\r\n      \"value\": -0.168\r\n    }, {\r\n      \"year\": \"1952\",\r\n      \"value\": -0.073\r\n    }, {\r\n      \"year\": \"1953\",\r\n      \"value\": -0.027\r\n    }, {\r\n      \"year\": \"1954\",\r\n      \"value\": -0.251\r\n    }, {\r\n      \"year\": \"1955\",\r\n      \"value\": -0.281\r\n    }, {\r\n      \"year\": \"1956\",\r\n      \"value\": -0.348\r\n    }, {\r\n      \"year\": \"1957\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1958\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1959\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1960\",\r\n      \"value\": -0.124\r\n    }, {\r\n      \"year\": \"1961\",\r\n      \"value\": -0.024\r\n    }, {\r\n      \"year\": \"1962\",\r\n      \"value\": -0.022\r\n    }, {\r\n      \"year\": \"1963\",\r\n      \"value\": 0\r\n    }, {\r\n      \"year\": \"1964\",\r\n      \"value\": -0.296\r\n    }, {\r\n      \"year\": \"1965\",\r\n      \"value\": -0.217\r\n    }, {\r\n      \"year\": \"1966\",\r\n      \"value\": -0.147\r\n    }, {\r\n      \"year\": \"1967\",\r\n      \"value\": -0.15\r\n    }, {\r\n      \"year\": \"1968\",\r\n      \"value\": -0.16\r\n    }, {\r\n      \"year\": \"1969\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1970\",\r\n      \"value\": -0.068\r\n    }, {\r\n      \"year\": \"1971\",\r\n      \"value\": -0.19\r\n    }, {\r\n      \"year\": \"1972\",\r\n      \"value\": -0.056\r\n    }, {\r\n      \"year\": \"1973\",\r\n      \"value\": 0.077\r\n    }, {\r\n      \"year\": \"1974\",\r\n      \"value\": -0.213\r\n    }, {\r\n      \"year\": \"1975\",\r\n      \"value\": -0.17\r\n    }, {\r\n      \"year\": \"1976\",\r\n      \"value\": -0.254\r\n    }, {\r\n      \"year\": \"1977\",\r\n      \"value\": 0.019\r\n    }, {\r\n      \"year\": \"1978\",\r\n      \"value\": -0.063\r\n    }, {\r\n      \"year\": \"1979\",\r\n      \"value\": 0.05\r\n    }, {\r\n      \"year\": \"1980\",\r\n      \"value\": 0.077\r\n    }, {\r\n      \"year\": \"1981\",\r\n      \"value\": 0.12\r\n    }, {\r\n      \"year\": \"1982\",\r\n      \"value\": 0.011\r\n    }, {\r\n      \"year\": \"1983\",\r\n      \"value\": 0.177\r\n    }, {\r\n      \"year\": \"1984\",\r\n      \"value\": -0.021\r\n    }, {\r\n      \"year\": \"1985\",\r\n      \"value\": -0.037\r\n    }, {\r\n      \"year\": \"1986\",\r\n      \"value\": 0.03\r\n    }, {\r\n      \"year\": \"1987\",\r\n      \"value\": 0.179\r\n    }, {\r\n      \"year\": \"1988\",\r\n      \"value\": 0.18\r\n    }, {\r\n      \"year\": \"1989\",\r\n      \"value\": 0.104\r\n    }, {\r\n      \"year\": \"1990\",\r\n      \"value\": 0.255\r\n    }, {\r\n      \"year\": \"1991\",\r\n      \"value\": 0.21\r\n    }, {\r\n      \"year\": \"1992\",\r\n      \"value\": 0.065\r\n    }, {\r\n      \"year\": \"1993\",\r\n      \"value\": 0.11\r\n    }, {\r\n      \"year\": \"1994\",\r\n      \"value\": 0.172\r\n    }, {\r\n      \"year\": \"1995\",\r\n      \"value\": 0.269\r\n    }, {\r\n      \"year\": \"1996\",\r\n      \"value\": 0.141\r\n    }, {\r\n      \"year\": \"1997\",\r\n      \"value\": 0.353\r\n    }, {\r\n      \"year\": \"1998\",\r\n      \"value\": 0.548\r\n    }, {\r\n      \"year\": \"1999\",\r\n      \"value\": 0.298\r\n    }, {\r\n      \"year\": \"2000\",\r\n      \"value\": 0.267\r\n    }, {\r\n      \"year\": \"2001\",\r\n      \"value\": 0.411\r\n    }, {\r\n      \"year\": \"2002\",\r\n      \"value\": 0.462\r\n    }, {\r\n      \"year\": \"2003\",\r\n      \"value\": 0.47\r\n    }, {\r\n      \"year\": \"2004\",\r\n      \"value\": 0.445\r\n    }, {\r\n      \"year\": \"2005\",\r\n      \"value\": 0.47\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0,\r\n      \"position\": \"right\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"id\": \"g1\",\r\n      \"balloonText\": \"[[category]]<br><b>[[value]] C</b>\",\r\n      \"type\": \"step\",\r\n      \"lineThickness\": 2,\r\n      \"bullet\": \"square\",\r\n      \"bulletAlpha\": 0,\r\n      \"bulletSize\": 4,\r\n      \"bulletBorderAlpha\": 0,\r\n      \"valueField\": \"value\"\r\n    }],\r\n    \"chartScrollbar\": {\r\n      \"graph\": \"g1\",\r\n      \"gridAlpha\": 0,\r\n      \"color\": \"#888888\",\r\n      \"scrollbarHeight\": 55,\r\n      \"backgroundAlpha\": 0,\r\n      \"selectedBackgroundAlpha\": 0.1,\r\n      \"selectedBackgroundColor\": \"#888888\",\r\n      \"graphFillAlpha\": 0,\r\n      \"autoGridCount\": true,\r\n      \"selectedGraphFillAlpha\": 0,\r\n      \"graphLineAlpha\": 1,\r\n      \"graphLineColor\": \"#c2c2c2\",\r\n      \"selectedGraphLineColor\": \"#888888\",\r\n      \"selectedGraphLineAlpha\": 1\r\n    },\r\n    \"chartCursor\": {\r\n      \"fullWidth\": true,\r\n      \"categoryBalloonDateFormat\": \"YYYY\",\r\n      \"cursorAlpha\": 0.05,\r\n      \"graphBulletAlpha\": 1\r\n    },\r\n    \"dataDateFormat\": \"YYYY\",\r\n    \"categoryField\": \"year\",\r\n    \"categoryAxis\": {\r\n      \"minPeriod\": \"YYYY\",\r\n      \"parseDates\": true,\r\n      \"gridAlpha\": 0\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StepLineChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst LineWithCustomBullets = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"dataProvider\": [{\r\n      \"date\": \"2009-10-02\",\r\n      \"value\": 5\r\n    }, {\r\n      \"date\": \"2009-10-03\",\r\n      \"value\": 15\r\n    }, {\r\n      \"date\": \"2009-10-04\",\r\n      \"value\": 13\r\n    }, {\r\n      \"date\": \"2009-10-05\",\r\n      \"value\": 17\r\n    }, {\r\n      \"date\": \"2009-10-06\",\r\n      \"value\": 15\r\n    }, {\r\n      \"date\": \"2009-10-09\",\r\n      \"value\": 19\r\n    }, {\r\n      \"date\": \"2009-10-10\",\r\n      \"value\": 21\r\n    }, {\r\n      \"date\": \"2009-10-11\",\r\n      \"value\": 20\r\n    }, {\r\n      \"date\": \"2009-10-12\",\r\n      \"value\": 20\r\n    }, {\r\n      \"date\": \"2009-10-13\",\r\n      \"value\": 19\r\n    }, {\r\n      \"date\": \"2009-10-16\",\r\n      \"value\": 25\r\n    }, {\r\n      \"date\": \"2009-10-17\",\r\n      \"value\": 24\r\n    }, {\r\n      \"date\": \"2009-10-18\",\r\n      \"value\": 26\r\n    }, {\r\n      \"date\": \"2009-10-19\",\r\n      \"value\": 27\r\n    }, {\r\n      \"date\": \"2009-10-20\",\r\n      \"value\": 25\r\n    }, {\r\n      \"date\": \"2009-10-23\",\r\n      \"value\": 29\r\n    }, {\r\n      \"date\": \"2009-10-24\",\r\n      \"value\": 28\r\n    }, {\r\n      \"date\": \"2009-10-25\",\r\n      \"value\": 30\r\n    }, {\r\n      \"date\": \"2009-10-26\",\r\n      \"value\": 72,\r\n      \"customBullet\": \"https://www.amcharts.com/lib/3/images/redstar.png\"\r\n    }, {\r\n      \"date\": \"2009-10-27\",\r\n      \"value\": 43\r\n    }, {\r\n      \"date\": \"2009-10-30\",\r\n      \"value\": 31\r\n    }, {\r\n      \"date\": \"2009-11-01\",\r\n      \"value\": 30\r\n    }, {\r\n      \"date\": \"2009-11-02\",\r\n      \"value\": 29\r\n    }, {\r\n      \"date\": \"2009-11-03\",\r\n      \"value\": 27\r\n    }, {\r\n      \"date\": \"2009-11-04\",\r\n      \"value\": 26\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0,\r\n      \"dashLength\": 4,\r\n      \"position\": \"left\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"bulletSize\": 14,\r\n      \"customBullet\": \"https://www.amcharts.com/lib/3/images/star.png?x\",\r\n      \"customBulletField\": \"customBullet\",\r\n      \"valueField\": \"value\",\r\n      \"balloonText\": \"<div style='margin:10px; text-align:left;'><span style='font-size:13px'>[[category]]</span><br><span style='font-size:18px'>Value:[[value]]</span>\",\r\n    }],\r\n    \"marginTop\": 20,\r\n    \"marginRight\": 70,\r\n    \"marginLeft\": 40,\r\n    \"marginBottom\": 20,\r\n    \"chartCursor\": {\r\n      \"graphBulletSize\": 1.5,\r\n      \"zoomable\": false,\r\n      \"valueZoomable\": true,\r\n      \"cursorAlpha\": 0,\r\n      \"valueLineEnabled\": true,\r\n      \"valueLineBalloonEnabled\": true,\r\n      \"valueLineAlpha\": 0.2\r\n    },\r\n    \"autoMargins\": false,\r\n    \"dataDateFormat\": \"YYYY-MM-DD\",\r\n    \"categoryField\": \"date\",\r\n    \"valueScrollbar\": {\r\n      \"offset\": 30\r\n    },\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true,\r\n      \"axisAlpha\": 0,\r\n      \"gridAlpha\": 0,\r\n      \"inside\": true,\r\n      \"tickLength\": 0\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineWithCustomBullets;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst VerticalLineChart = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginRight\": 80,\r\n    \"marginTop\": 24,\r\n    \"dataDateFormat\": \"YYYY-MM-DD\",\r\n    \"rotate\": true,\r\n    \"dataProvider\": [{\r\n      \"date\": \"2013-11-30\",\r\n      \"value\": 104\r\n    }, {\r\n      \"date\": \"2013-12-01\",\r\n      \"value\": 108\r\n    }, {\r\n      \"date\": \"2013-12-02\",\r\n      \"value\": 103\r\n    }, {\r\n      \"date\": \"2013-12-03\",\r\n      \"value\": 105\r\n    }, {\r\n      \"date\": \"2013-12-04\",\r\n      \"value\": 136\r\n    }, {\r\n      \"date\": \"2013-12-05\",\r\n      \"value\": 138\r\n    }, {\r\n      \"date\": \"2013-12-06\",\r\n      \"value\": 113\r\n    }, {\r\n      \"date\": \"2013-12-07\",\r\n      \"value\": 131\r\n    }, {\r\n      \"date\": \"2013-12-08\",\r\n      \"value\": 114\r\n    }, {\r\n      \"date\": \"2013-12-09\",\r\n      \"value\": 124\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"maximum\": 140,\r\n      \"minimum\": 100,\r\n      \"axisAlpha\": 0,\r\n      \"guides\": [{\r\n        \"fillAlpha\": 0.1,\r\n        \"fillColor\": \"#99dc67\",\r\n        \"lineAlpha\": 0,\r\n        \"toValue\": 120,\r\n        \"value\": 0\r\n      }, {\r\n        \"fillAlpha\": 0.1,\r\n        \"fillColor\": \"#67b7dc\",\r\n        \"lineAlpha\": 0,\r\n        \"toValue\": 200,\r\n        \"value\": 120\r\n      }]\r\n    }],\r\n    \"graphs\": [{\r\n      \"bullet\": \"round\",\r\n      \"dashLength\": 4,\r\n      \"valueField\": \"value\"\r\n    }],\r\n    \"chartCursor\": {\r\n      \"cursorAlpha\": 0,\r\n      \"categoryBalloonEnabled\": false\r\n    },\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true\r\n    },\r\n    \"chartScrollbar\": {\r\n      \"scrollbarHeight\": 5,\r\n      \"backgroundAlpha\": 0.1,\r\n      \"backgroundColor\": \"#868686\",\r\n      \"selectedBackgroundColor\": \"#67b7dc\",\r\n      \"selectedBackgroundAlpha\": 1\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLineChart;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst ChartWithGapsInData = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginRight\": 70,\r\n    \"autoMarginOffset\": 20,\r\n    \"dataProvider\": [{\r\n      \"year\": \"1950\",\r\n      \"value\": -0.307\r\n    }, {\r\n      \"year\": \"1951\",\r\n      \"value\": -0.168\r\n    }, {\r\n      \"year\": \"1952\",\r\n      \"value\": -0.073\r\n    }, {\r\n      \"year\": \"1953\",\r\n      \"value\": -0.027\r\n    }, {\r\n      \"year\": \"1954\",\r\n      \"value\": -0.251\r\n    }, {\r\n      \"year\": \"1955\",\r\n      \"value\": -0.281\r\n    }, {\r\n      \"year\": \"1956\",\r\n      \"value\": -0.348\r\n    }, {\r\n      \"year\": \"1957\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1958\",\r\n      \"value\": -0.011\r\n    }, {\r\n      \"year\": \"1959\",\r\n      \"value\": -0.074\r\n    }, {\r\n      \"year\": \"1960\",\r\n      \"value\": -0.124\r\n    }, {\r\n      \"year\": \"1961\",\r\n      \"value\": -0.024\r\n    }, {\r\n      \"year\": \"1962\",\r\n      \"value\": -0.022\r\n    }, {\r\n      \"year\": \"1963\",\r\n      \"value\": 0\r\n    }, {\r\n      \"year\": \"1964\",\r\n      \"value\": -0.296\r\n    }, {\r\n      \"year\": \"1965\",\r\n      \"value\": -0.217\r\n    }, {\r\n      \"year\": \"1966\",\r\n      \"value\": -0.147\r\n    }, {\r\n      \"year\": \"1971\",\r\n      \"value\": -0.19\r\n    }, {\r\n      \"year\": \"1972\",\r\n      \"value\": -0.056\r\n    }, {\r\n      \"year\": \"1973\",\r\n      \"value\": 0.077\r\n    }, {\r\n      \"year\": \"1974\",\r\n      \"value\": -0.213\r\n    }, {\r\n      \"year\": \"1975\",\r\n      \"value\": -0.17\r\n    }, {\r\n      \"year\": \"1976\",\r\n      \"value\": -0.254\r\n    }, {\r\n      \"year\": \"1977\",\r\n      \"value\": 0.019\r\n    }, {\r\n      \"year\": \"1978\",\r\n      \"value\": -0.063\r\n    }, {\r\n      \"year\": \"1979\",\r\n      \"value\": 0.05\r\n    }, {\r\n      \"year\": \"1980\",\r\n      \"value\": 0.077\r\n    }, {\r\n      \"year\": \"1981\",\r\n      \"value\": 0.12\r\n    }, {\r\n      \"year\": \"1982\",\r\n      \"value\": 0.011\r\n    }, {\r\n      \"year\": \"1983\",\r\n      \"value\": 0.177\r\n    }, {\r\n      \"year\": \"1989\",\r\n      \"value\": 0.104\r\n    }, {\r\n      \"year\": \"1990\",\r\n      \"value\": 0.255\r\n    }, {\r\n      \"year\": \"1991\",\r\n      \"value\": 0.21\r\n    }, {\r\n      \"year\": \"1992\",\r\n      \"value\": 0.065\r\n    }, {\r\n      \"year\": \"1993\",\r\n      \"value\": 0.11\r\n    }, {\r\n      \"year\": \"1994\",\r\n      \"value\": 0.172\r\n    }, {\r\n      \"year\": \"1995\",\r\n      \"value\": 0.269\r\n    }, {\r\n      \"year\": \"1996\",\r\n      \"value\": 0.141\r\n    }, {\r\n      \"year\": \"1997\",\r\n      \"value\": 0.353\r\n    }, {\r\n      \"year\": \"1998\",\r\n      \"value\": 0.548\r\n    }, {\r\n      \"year\": \"1999\",\r\n      \"value\": 0.298\r\n    }, {\r\n      \"year\": \"2000\",\r\n      \"value\": 0.267\r\n    }, {\r\n      \"year\": \"2001\",\r\n      \"value\": 0.411\r\n    }, {\r\n      \"year\": \"2002\",\r\n      \"value\": 0.462\r\n    }, {\r\n      \"year\": \"2003\",\r\n      \"value\": 0.47\r\n    }, {\r\n      \"year\": \"2004\",\r\n      \"value\": 0.445\r\n    }, {\r\n      \"year\": \"2005\",\r\n      \"value\": 0.47\r\n    }],\r\n    \"balloon\": {\r\n      \"cornerRadius\": 6\r\n    },\r\n    \"valueAxes\": [{\r\n      \"axisAlpha\": 0\r\n    }],\r\n    \"graphs\": [{\r\n      \"balloonText\": \"[[category]]<br><b><span style='font-size:14px;'>[[value]] C</span></b>\",\r\n      \"bullet\": \"round\",\r\n      \"bulletSize\": 6,\r\n      \"connect\": false,\r\n      \"lineColor\": \"#b6d278\",\r\n      \"lineThickness\": 2,\r\n      \"negativeLineColor\": \"#487dac\",\r\n      \"valueField\": \"value\"\r\n    }],\r\n    \"chartCursor\": {\r\n      \"categoryBalloonDateFormat\": \"YYYY\",\r\n      \"cursorAlpha\": 0.1,\r\n      \"cursorColor\": \"#000000\",\r\n      \"fullWidth\": true,\r\n      \"graphBulletSize\": 2\r\n    },\r\n    \"chartScrollbar\": {},\r\n    \"dataDateFormat\": \"YYYY\",\r\n    \"categoryField\": \"year\",\r\n    \"categoryAxis\": {\r\n      \"minPeriod\": \"YYYY\",\r\n      \"parseDates\": true,\r\n      \"minorGridEnabled\": true\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartWithGapsInData;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst MultipleValueAxes = () => {\r\n\r\n  const chartData = generateChartData();\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"legend\": {\r\n      \"useGraphSettings\": true\r\n    },\r\n    \"dataProvider\": chartData,\r\n    \"synchronizeGrid\": true,\r\n    \"valueAxes\": [{\r\n      \"id\": \"v1\",\r\n      \"axisColor\": \"#FF6600\",\r\n      \"axisThickness\": 2,\r\n      \"axisAlpha\": 1,\r\n      \"position\": \"left\"\r\n    }, {\r\n      \"id\": \"v2\",\r\n      \"axisColor\": \"#FCD202\",\r\n      \"axisThickness\": 2,\r\n      \"axisAlpha\": 1,\r\n      \"position\": \"right\"\r\n    }, {\r\n      \"id\": \"v3\",\r\n      \"axisColor\": \"#B0DE09\",\r\n      \"axisThickness\": 2,\r\n      \"gridAlpha\": 0,\r\n      \"offset\": 50,\r\n      \"axisAlpha\": 1,\r\n      \"position\": \"left\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"valueAxis\": \"v1\",\r\n      \"lineColor\": \"#FF6600\",\r\n      \"bullet\": \"round\",\r\n      \"bulletBorderThickness\": 1,\r\n      \"hideBulletsCount\": 30,\r\n      \"title\": \"red line\",\r\n      \"valueField\": \"visits\",\r\n      \"fillAlphas\": 0\r\n    }, {\r\n      \"valueAxis\": \"v2\",\r\n      \"lineColor\": \"#FCD202\",\r\n      \"bullet\": \"square\",\r\n      \"bulletBorderThickness\": 1,\r\n      \"hideBulletsCount\": 30,\r\n      \"title\": \"yellow line\",\r\n      \"valueField\": \"hits\",\r\n      \"fillAlphas\": 0\r\n    }, {\r\n      \"valueAxis\": \"v3\",\r\n      \"lineColor\": \"#B0DE09\",\r\n      \"bullet\": \"triangleUp\",\r\n      \"bulletBorderThickness\": 1,\r\n      \"hideBulletsCount\": 30,\r\n      \"title\": \"green line\",\r\n      \"valueField\": \"views\",\r\n      \"fillAlphas\": 0\r\n    }],\r\n    \"chartScrollbar\": {},\r\n    \"chartCursor\": {\r\n      \"cursorPosition\": \"mouse\"\r\n    },\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true,\r\n      \"axisColor\": \"#DADADA\",\r\n      \"minorGridEnabled\": true\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true,\r\n      \"position\": \"bottom-right\"\r\n    }\r\n  };\r\n\r\n\r\n// generate some random data, quite different range\r\n  function generateChartData() {\r\n    let chartData = [];\r\n    const firstDate = new Date();\r\n    firstDate.setDate(firstDate.getDate() - 100);\r\n\r\n    let visits = 1600;\r\n    let hits = 2900;\r\n    let views = 8700;\r\n\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n      // we create date objects here. In your data, you can have date strings\r\n      // and then set format of your dates using chart.dataDateFormat property,\r\n      // however when possible, use date objects, as this will speed up chart rendering.\r\n      const newDate = new Date(firstDate);\r\n      newDate.setDate(newDate.getDate() + i);\r\n\r\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n      hits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n      views += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n\r\n      chartData.push({\r\n        date: newDate,\r\n        visits: visits,\r\n        hits: hits,\r\n        views: views\r\n      });\r\n    }\r\n    return chartData;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MultipleValueAxes;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst LogarithmicScale = () => {\r\n\r\n  const config = {\r\n    \"type\": \"serial\",\r\n    \"theme\": \"light\",\r\n    \"marginRight\": 80,\r\n    \"marginTop\": 17,\r\n    \"autoMarginOffset\": 20,\r\n    \"dataProvider\": [{\r\n      \"date\": \"2012-03-01\",\r\n      \"price\": 20\r\n    }, {\r\n      \"date\": \"2012-03-02\",\r\n      \"price\": 75\r\n    }, {\r\n      \"date\": \"2012-03-03\",\r\n      \"price\": 15\r\n    }, {\r\n      \"date\": \"2012-03-04\",\r\n      \"price\": 75\r\n    }, {\r\n      \"date\": \"2012-03-05\",\r\n      \"price\": 158\r\n    }, {\r\n      \"date\": \"2012-03-06\",\r\n      \"price\": 57\r\n    }, {\r\n      \"date\": \"2012-03-07\",\r\n      \"price\": 107\r\n    }, {\r\n      \"date\": \"2012-03-08\",\r\n      \"price\": 89\r\n    }, {\r\n      \"date\": \"2012-03-09\",\r\n      \"price\": 75\r\n    }, {\r\n      \"date\": \"2012-03-10\",\r\n      \"price\": 132\r\n    }, {\r\n      \"date\": \"2012-03-11\",\r\n      \"price\": 158\r\n    }, {\r\n      \"date\": \"2012-03-12\",\r\n      \"price\": 56\r\n    }, {\r\n      \"date\": \"2012-03-13\",\r\n      \"price\": 169\r\n    }, {\r\n      \"date\": \"2012-03-14\",\r\n      \"price\": 24\r\n    }, {\r\n      \"date\": \"2012-03-15\",\r\n      \"price\": 147\r\n    }],\r\n    \"valueAxes\": [{\r\n      \"logarithmic\": true,\r\n      \"dashLength\": 1,\r\n      \"guides\": [{\r\n        \"dashLength\": 6,\r\n        \"inside\": true,\r\n        \"label\": \"average\",\r\n        \"lineAlpha\": 1,\r\n        \"value\": 90.4\r\n      }],\r\n      \"position\": \"left\"\r\n    }],\r\n    \"graphs\": [{\r\n      \"bullet\": \"round\",\r\n      \"id\": \"g1\",\r\n      \"bulletBorderAlpha\": 1,\r\n      \"bulletColor\": \"#FFFFFF\",\r\n      \"bulletSize\": 7,\r\n      \"lineThickness\": 2,\r\n      \"title\": \"Price\",\r\n      \"type\": \"smoothedLine\",\r\n      \"useLineColorForBulletBorder\": true,\r\n      \"valueField\": \"price\"\r\n    }],\r\n    \"chartScrollbar\": {},\r\n    \"chartCursor\": {\r\n      \"valueLineEnabled\": true,\r\n      \"valueLineBalloonEnabled\": true,\r\n      \"valueLineAlpha\": 0.5,\r\n      \"fullWidth\": true,\r\n      \"cursorAlpha\": 0.05\r\n    },\r\n    \"dataDateFormat\": \"YYYY-MM-DD\",\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true\r\n    },\r\n    \"export\": {\r\n      \"enabled\": true\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LogarithmicScale;\r\n","import React from \"react\";\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n\r\nconst LineWithDifferentNegativeColor = () => {\r\n\r\n  let chartData = generateChartData();\r\n  const config = {\r\n    \"theme\": \"light\",\r\n    \"type\": \"serial\",\r\n    \"dataProvider\": chartData,\r\n    \"valueAxes\": [{\r\n      \"inside\": true,\r\n      \"axisAlpha\": 0\r\n    }],\r\n    \"graphs\": [{\r\n      \"id\": \"g1\",\r\n      \"balloonText\": \"<div style='margin:5px; font-size:19px;'><span style='font-size:13px;'>[[category]]</span><br>[[value]]</div>\",\r\n      \"bullet\": \"round\",\r\n      \"bulletBorderAlpha\": 1,\r\n      \"bulletBorderColor\": \"#FFFFFF\",\r\n      \"hideBulletsCount\": 50,\r\n      \"lineThickness\": 2,\r\n      \"lineColor\": \"#fdd400\",\r\n      \"negativeLineColor\": \"#67b7dc\",\r\n      \"valueField\": \"visits\"\r\n    }],\r\n    \"chartScrollbar\": {},\r\n    \"chartCursor\": {},\r\n    \"categoryField\": \"date\",\r\n    \"categoryAxis\": {\r\n      \"parseDates\": true,\r\n      \"axisAlpha\": 0,\r\n      \"minHorizontalGap\": 55\r\n    }\r\n  };\r\n\r\n  function generateChartData() {\r\n    let chartData = [];\r\n    const firstDate = new Date();\r\n    firstDate.setDate(firstDate.getDate() - 150);\r\n    let visits = -40;\r\n    let b = 0.6;\r\n    for (let i = 0; i < 150; i++) {\r\n      // we create date objects here. In your data, you can have date strings\r\n      // and then set format of your dates using chart.dataDateFormat property,\r\n      // however when possible, use date objects, as this will speed up chart rendering.\r\n      const newDate = new Date(firstDate);\r\n      newDate.setDate(newDate.getDate() + i);\r\n      if (i > 80) {\r\n        b = 0.4;\r\n      }\r\n      visits += Math.round((Math.random() < b ? 1 : -1) * Math.random() * 10);\r\n\r\n      chartData.push({\r\n        date: newDate,\r\n        visits: visits\r\n      });\r\n    }\r\n    return chartData;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AmCharts.React style={{width: \"100%\", height: \"500px\"}} options={config}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineWithDifferentNegativeColor;\r\n","import React from \"react\";\r\nimport {Card, Col, Row} from \"antd\";\r\n\r\nimport DateBasedLine from \"./Components/DateBasedLine\";\r\n\r\nimport ContainerHeader from \"components/ContainerHeader\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport LineChartWithScrollAndZoom from \"./Components/LineChartWithScrollAndZoom\";\r\nimport LineWithDifferentColors from \"./Components/LineWithDifferentColors\";\r\nimport SmoothedLineChart from \"./Components/SmoothedLineChart\";\r\nimport TrendLines from \"./Components/TrendLines\";\r\nimport LineWithChangingColor from \"../area/Components/LineWithChangingColor\";\r\nimport FillBetweenTwoLines from \"./Components/FillBetweenTwoLines\";\r\nimport StepLineChart from \"./Components/StepLineChart\";\r\nimport LineWithCustomBullets from \"./Components/LineWithCustomBullets\";\r\nimport VerticalLineChart from \"./Components/VerticalLineChart\";\r\nimport ChartWithGapsInData from \"./Components/ChartWithGapsInData\";\r\nimport MultipleValueAxes from \"./Components/MultipleValueAxes\";\r\nimport LogarithmicScale from \"./Components/LogarithmicScale\";\r\nimport LineWithDifferentNegativeColor from \"./Components/LineWithDifferentNegativeColor\";\r\n\r\n\r\nconst LineChart = ({match}) => {\r\n  return (\r\n    <div className=\"gx-main-content\">\r\n      <ContainerHeader title={<IntlMessages id=\"sidebar.chart.line\"/>} match={match}/>\r\n\r\n      <Row>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Date Based Line Chart\">\r\n            <DateBasedLine/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Line Chart With Scroll And Zoom\">\r\n            <LineChartWithScrollAndZoom/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Line With Different Colors\">\r\n            <LineWithDifferentColors/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Fill Between Two Lines\">\r\n            <FillBetweenTwoLines/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Smoothed Line Chart\">\r\n            <SmoothedLineChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Line With Changing Color\">\r\n            <LineWithChangingColor/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Trend Lines chart\">\r\n            <TrendLines/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Step Line Chart\">\r\n            <StepLineChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Line With Custom Bullets\">\r\n            <LineWithCustomBullets/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Vertical Line Chart\">\r\n            <VerticalLineChart/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Chart With Gaps In Data\">\r\n            <ChartWithGapsInData/>\r\n          </Card>\r\n        </Col>\r\n\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Multiple Value Axes\">\r\n            <MultipleValueAxes/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Logarithmic Scale\">\r\n            <LogarithmicScale/>\r\n          </Card>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Card className=\"gx-card\" title=\"Line With Different Negative Color\">\r\n            <LineWithDifferentNegativeColor/>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n"],"sourceRoot":""}